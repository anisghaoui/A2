

================================================================
== Vivado HLS Report for 'moyenneXY'
================================================================
* Date:           Tue Feb 25 22:04:38 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Peason
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  130|  130|   40|   40| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 40, depth = 131


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 131
* Pipeline : 1
  Pipeline-0 : II = 40, D = 131, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 110 
110 --> 111 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 117 
117 --> 118 
118 --> 119 
119 --> 120 
120 --> 121 
121 --> 122 
122 --> 123 
123 --> 124 
124 --> 125 
125 --> 126 
126 --> 127 
127 --> 128 
128 --> 129 
129 --> 130 
130 --> 131 
131 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%mat_offset_read = call i30 @_ssdm_op_Read.ap_auto.i30(i30 %mat_offset)" [src/algo.c:55]   --->   Operation 132 'read' 'mat_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i30 %mat_offset_read to i64" [src/algo.c:55]   --->   Operation 133 'zext' 'zext_ln55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%mat_addr = getelementptr float* %mat, i64 %zext_ln55" [src/algo.c:55]   --->   Operation 134 'getelementptr' 'mat_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [7/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 135 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 136 [6/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 136 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 137 [5/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 137 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 138 [4/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 138 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 139 [3/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 139 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 140 [2/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 140 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 141 [1/7] (8.75ns)   --->   "%mat_addr_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %mat_addr, i32 40)" [src/algo.c:55]   --->   Operation 141 'readreq' 'mat_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 142 [1/1] (8.75ns)   --->   "%mat_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 142 'read' 'mat_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 143 [1/1] (8.75ns)   --->   "%mat_addr_read_1 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 143 'read' 'mat_addr_read_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 144 [4/4] (5.70ns)   --->   "%tmp = fmul float %mat_addr_read, %mat_addr_read_1" [src/algo.c:55]   --->   Operation 144 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (8.75ns)   --->   "%mat_addr_read_2 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 145 'read' 'mat_addr_read_2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 146 [3/4] (5.70ns)   --->   "%tmp = fmul float %mat_addr_read, %mat_addr_read_1" [src/algo.c:55]   --->   Operation 146 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 147 [1/1] (8.75ns)   --->   "%mat_addr_read_3 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 147 'read' 'mat_addr_read_3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 148 [2/4] (5.70ns)   --->   "%tmp = fmul float %mat_addr_read, %mat_addr_read_1" [src/algo.c:55]   --->   Operation 148 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [4/4] (5.70ns)   --->   "%tmp_1 = fmul float %mat_addr_read_2, %mat_addr_read_3" [src/algo.c:55]   --->   Operation 149 'fmul' 'tmp_1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 150 [1/1] (8.75ns)   --->   "%mat_addr_read_4 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 150 'read' 'mat_addr_read_4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 151 [1/4] (5.70ns)   --->   "%tmp = fmul float %mat_addr_read, %mat_addr_read_1" [src/algo.c:55]   --->   Operation 151 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 152 [3/4] (5.70ns)   --->   "%tmp_1 = fmul float %mat_addr_read_2, %mat_addr_read_3" [src/algo.c:55]   --->   Operation 152 'fmul' 'tmp_1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 153 [1/1] (8.75ns)   --->   "%mat_addr_read_5 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 153 'read' 'mat_addr_read_5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 154 [5/5] (7.25ns)   --->   "%somme_s = fadd float %tmp, 0.000000e+00" [src/algo.c:55]   --->   Operation 154 'fadd' 'somme_s' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 155 [2/4] (5.70ns)   --->   "%tmp_1 = fmul float %mat_addr_read_2, %mat_addr_read_3" [src/algo.c:55]   --->   Operation 155 'fmul' 'tmp_1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 156 [4/4] (5.70ns)   --->   "%tmp_2 = fmul float %mat_addr_read_4, %mat_addr_read_5" [src/algo.c:55]   --->   Operation 156 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 157 [1/1] (8.75ns)   --->   "%mat_addr_read_6 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 157 'read' 'mat_addr_read_6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 158 [4/5] (7.25ns)   --->   "%somme_s = fadd float %tmp, 0.000000e+00" [src/algo.c:55]   --->   Operation 158 'fadd' 'somme_s' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 159 [1/4] (5.70ns)   --->   "%tmp_1 = fmul float %mat_addr_read_2, %mat_addr_read_3" [src/algo.c:55]   --->   Operation 159 'fmul' 'tmp_1' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 160 [3/4] (5.70ns)   --->   "%tmp_2 = fmul float %mat_addr_read_4, %mat_addr_read_5" [src/algo.c:55]   --->   Operation 160 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 161 [1/1] (8.75ns)   --->   "%mat_addr_read_7 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 161 'read' 'mat_addr_read_7' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 162 [3/5] (7.25ns)   --->   "%somme_s = fadd float %tmp, 0.000000e+00" [src/algo.c:55]   --->   Operation 162 'fadd' 'somme_s' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 163 [2/4] (5.70ns)   --->   "%tmp_2 = fmul float %mat_addr_read_4, %mat_addr_read_5" [src/algo.c:55]   --->   Operation 163 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 164 [4/4] (5.70ns)   --->   "%tmp_3 = fmul float %mat_addr_read_6, %mat_addr_read_7" [src/algo.c:55]   --->   Operation 164 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 165 [1/1] (8.75ns)   --->   "%mat_addr_read_8 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 165 'read' 'mat_addr_read_8' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 166 [2/5] (7.25ns)   --->   "%somme_s = fadd float %tmp, 0.000000e+00" [src/algo.c:55]   --->   Operation 166 'fadd' 'somme_s' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 167 [1/4] (5.70ns)   --->   "%tmp_2 = fmul float %mat_addr_read_4, %mat_addr_read_5" [src/algo.c:55]   --->   Operation 167 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 168 [3/4] (5.70ns)   --->   "%tmp_3 = fmul float %mat_addr_read_6, %mat_addr_read_7" [src/algo.c:55]   --->   Operation 168 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 169 [1/1] (8.75ns)   --->   "%mat_addr_read_9 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 169 'read' 'mat_addr_read_9' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 170 [1/5] (7.25ns)   --->   "%somme_s = fadd float %tmp, 0.000000e+00" [src/algo.c:55]   --->   Operation 170 'fadd' 'somme_s' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 171 [2/4] (5.70ns)   --->   "%tmp_3 = fmul float %mat_addr_read_6, %mat_addr_read_7" [src/algo.c:55]   --->   Operation 171 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 172 [4/4] (5.70ns)   --->   "%tmp_4 = fmul float %mat_addr_read_8, %mat_addr_read_9" [src/algo.c:55]   --->   Operation 172 'fmul' 'tmp_4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 173 [1/1] (8.75ns)   --->   "%mat_addr_read_10 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 173 'read' 'mat_addr_read_10' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 174 [5/5] (7.25ns)   --->   "%somme_1 = fadd float %somme_s, %tmp_1" [src/algo.c:55]   --->   Operation 174 'fadd' 'somme_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 175 [1/4] (5.70ns)   --->   "%tmp_3 = fmul float %mat_addr_read_6, %mat_addr_read_7" [src/algo.c:55]   --->   Operation 175 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 176 [3/4] (5.70ns)   --->   "%tmp_4 = fmul float %mat_addr_read_8, %mat_addr_read_9" [src/algo.c:55]   --->   Operation 176 'fmul' 'tmp_4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 177 [1/1] (8.75ns)   --->   "%mat_addr_read_11 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 177 'read' 'mat_addr_read_11' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 178 [4/5] (7.25ns)   --->   "%somme_1 = fadd float %somme_s, %tmp_1" [src/algo.c:55]   --->   Operation 178 'fadd' 'somme_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 179 [2/4] (5.70ns)   --->   "%tmp_4 = fmul float %mat_addr_read_8, %mat_addr_read_9" [src/algo.c:55]   --->   Operation 179 'fmul' 'tmp_4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 180 [4/4] (5.70ns)   --->   "%tmp_5 = fmul float %mat_addr_read_10, %mat_addr_read_11" [src/algo.c:55]   --->   Operation 180 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 181 [1/1] (8.75ns)   --->   "%mat_addr_read_12 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 181 'read' 'mat_addr_read_12' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 182 [3/5] (7.25ns)   --->   "%somme_1 = fadd float %somme_s, %tmp_1" [src/algo.c:55]   --->   Operation 182 'fadd' 'somme_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 183 [1/4] (5.70ns)   --->   "%tmp_4 = fmul float %mat_addr_read_8, %mat_addr_read_9" [src/algo.c:55]   --->   Operation 183 'fmul' 'tmp_4' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 184 [3/4] (5.70ns)   --->   "%tmp_5 = fmul float %mat_addr_read_10, %mat_addr_read_11" [src/algo.c:55]   --->   Operation 184 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 185 [1/1] (8.75ns)   --->   "%mat_addr_read_13 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 185 'read' 'mat_addr_read_13' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 186 [2/5] (7.25ns)   --->   "%somme_1 = fadd float %somme_s, %tmp_1" [src/algo.c:55]   --->   Operation 186 'fadd' 'somme_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 187 [2/4] (5.70ns)   --->   "%tmp_5 = fmul float %mat_addr_read_10, %mat_addr_read_11" [src/algo.c:55]   --->   Operation 187 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 188 [4/4] (5.70ns)   --->   "%tmp_6 = fmul float %mat_addr_read_12, %mat_addr_read_13" [src/algo.c:55]   --->   Operation 188 'fmul' 'tmp_6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 189 [1/1] (8.75ns)   --->   "%mat_addr_read_14 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 189 'read' 'mat_addr_read_14' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 190 [1/5] (7.25ns)   --->   "%somme_1 = fadd float %somme_s, %tmp_1" [src/algo.c:55]   --->   Operation 190 'fadd' 'somme_1' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 191 [1/4] (5.70ns)   --->   "%tmp_5 = fmul float %mat_addr_read_10, %mat_addr_read_11" [src/algo.c:55]   --->   Operation 191 'fmul' 'tmp_5' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 192 [3/4] (5.70ns)   --->   "%tmp_6 = fmul float %mat_addr_read_12, %mat_addr_read_13" [src/algo.c:55]   --->   Operation 192 'fmul' 'tmp_6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 193 [1/1] (8.75ns)   --->   "%mat_addr_read_15 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 193 'read' 'mat_addr_read_15' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 194 [5/5] (7.25ns)   --->   "%somme_2 = fadd float %somme_1, %tmp_2" [src/algo.c:55]   --->   Operation 194 'fadd' 'somme_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 195 [2/4] (5.70ns)   --->   "%tmp_6 = fmul float %mat_addr_read_12, %mat_addr_read_13" [src/algo.c:55]   --->   Operation 195 'fmul' 'tmp_6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 196 [4/4] (5.70ns)   --->   "%tmp_7 = fmul float %mat_addr_read_14, %mat_addr_read_15" [src/algo.c:55]   --->   Operation 196 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 197 [1/1] (8.75ns)   --->   "%mat_addr_read_16 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 197 'read' 'mat_addr_read_16' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 198 [4/5] (7.25ns)   --->   "%somme_2 = fadd float %somme_1, %tmp_2" [src/algo.c:55]   --->   Operation 198 'fadd' 'somme_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 199 [1/4] (5.70ns)   --->   "%tmp_6 = fmul float %mat_addr_read_12, %mat_addr_read_13" [src/algo.c:55]   --->   Operation 199 'fmul' 'tmp_6' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 200 [3/4] (5.70ns)   --->   "%tmp_7 = fmul float %mat_addr_read_14, %mat_addr_read_15" [src/algo.c:55]   --->   Operation 200 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 201 [1/1] (8.75ns)   --->   "%mat_addr_read_17 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 201 'read' 'mat_addr_read_17' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 202 [3/5] (7.25ns)   --->   "%somme_2 = fadd float %somme_1, %tmp_2" [src/algo.c:55]   --->   Operation 202 'fadd' 'somme_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 203 [2/4] (5.70ns)   --->   "%tmp_7 = fmul float %mat_addr_read_14, %mat_addr_read_15" [src/algo.c:55]   --->   Operation 203 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 204 [4/4] (5.70ns)   --->   "%tmp_8 = fmul float %mat_addr_read_16, %mat_addr_read_17" [src/algo.c:55]   --->   Operation 204 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 205 [1/1] (8.75ns)   --->   "%mat_addr_read_18 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 205 'read' 'mat_addr_read_18' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 206 [2/5] (7.25ns)   --->   "%somme_2 = fadd float %somme_1, %tmp_2" [src/algo.c:55]   --->   Operation 206 'fadd' 'somme_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 207 [1/4] (5.70ns)   --->   "%tmp_7 = fmul float %mat_addr_read_14, %mat_addr_read_15" [src/algo.c:55]   --->   Operation 207 'fmul' 'tmp_7' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 208 [3/4] (5.70ns)   --->   "%tmp_8 = fmul float %mat_addr_read_16, %mat_addr_read_17" [src/algo.c:55]   --->   Operation 208 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 209 [1/1] (8.75ns)   --->   "%mat_addr_read_19 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 209 'read' 'mat_addr_read_19' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 210 [1/5] (7.25ns)   --->   "%somme_2 = fadd float %somme_1, %tmp_2" [src/algo.c:55]   --->   Operation 210 'fadd' 'somme_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 211 [2/4] (5.70ns)   --->   "%tmp_8 = fmul float %mat_addr_read_16, %mat_addr_read_17" [src/algo.c:55]   --->   Operation 211 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 212 [4/4] (5.70ns)   --->   "%tmp_9 = fmul float %mat_addr_read_18, %mat_addr_read_19" [src/algo.c:55]   --->   Operation 212 'fmul' 'tmp_9' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 213 [1/1] (8.75ns)   --->   "%mat_addr_read_20 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 213 'read' 'mat_addr_read_20' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 214 [5/5] (7.25ns)   --->   "%somme_3 = fadd float %somme_2, %tmp_3" [src/algo.c:55]   --->   Operation 214 'fadd' 'somme_3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 215 [1/4] (5.70ns)   --->   "%tmp_8 = fmul float %mat_addr_read_16, %mat_addr_read_17" [src/algo.c:55]   --->   Operation 215 'fmul' 'tmp_8' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 216 [3/4] (5.70ns)   --->   "%tmp_9 = fmul float %mat_addr_read_18, %mat_addr_read_19" [src/algo.c:55]   --->   Operation 216 'fmul' 'tmp_9' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 217 [1/1] (8.75ns)   --->   "%mat_addr_read_21 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 217 'read' 'mat_addr_read_21' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 218 [4/5] (7.25ns)   --->   "%somme_3 = fadd float %somme_2, %tmp_3" [src/algo.c:55]   --->   Operation 218 'fadd' 'somme_3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 219 [2/4] (5.70ns)   --->   "%tmp_9 = fmul float %mat_addr_read_18, %mat_addr_read_19" [src/algo.c:55]   --->   Operation 219 'fmul' 'tmp_9' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 220 [4/4] (5.70ns)   --->   "%tmp_s = fmul float %mat_addr_read_20, %mat_addr_read_21" [src/algo.c:55]   --->   Operation 220 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 221 [1/1] (8.75ns)   --->   "%mat_addr_read_22 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 221 'read' 'mat_addr_read_22' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 222 [3/5] (7.25ns)   --->   "%somme_3 = fadd float %somme_2, %tmp_3" [src/algo.c:55]   --->   Operation 222 'fadd' 'somme_3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 223 [1/4] (5.70ns)   --->   "%tmp_9 = fmul float %mat_addr_read_18, %mat_addr_read_19" [src/algo.c:55]   --->   Operation 223 'fmul' 'tmp_9' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 224 [3/4] (5.70ns)   --->   "%tmp_s = fmul float %mat_addr_read_20, %mat_addr_read_21" [src/algo.c:55]   --->   Operation 224 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 225 [1/1] (8.75ns)   --->   "%mat_addr_read_23 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 225 'read' 'mat_addr_read_23' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 226 [2/5] (7.25ns)   --->   "%somme_3 = fadd float %somme_2, %tmp_3" [src/algo.c:55]   --->   Operation 226 'fadd' 'somme_3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 227 [2/4] (5.70ns)   --->   "%tmp_s = fmul float %mat_addr_read_20, %mat_addr_read_21" [src/algo.c:55]   --->   Operation 227 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 228 [4/4] (5.70ns)   --->   "%tmp_10 = fmul float %mat_addr_read_22, %mat_addr_read_23" [src/algo.c:55]   --->   Operation 228 'fmul' 'tmp_10' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 229 [1/1] (8.75ns)   --->   "%mat_addr_read_24 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 229 'read' 'mat_addr_read_24' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 230 [1/5] (7.25ns)   --->   "%somme_3 = fadd float %somme_2, %tmp_3" [src/algo.c:55]   --->   Operation 230 'fadd' 'somme_3' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 231 [1/4] (5.70ns)   --->   "%tmp_s = fmul float %mat_addr_read_20, %mat_addr_read_21" [src/algo.c:55]   --->   Operation 231 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 232 [3/4] (5.70ns)   --->   "%tmp_10 = fmul float %mat_addr_read_22, %mat_addr_read_23" [src/algo.c:55]   --->   Operation 232 'fmul' 'tmp_10' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 233 [1/1] (8.75ns)   --->   "%mat_addr_read_25 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 233 'read' 'mat_addr_read_25' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 8.75>
ST_34 : Operation 234 [5/5] (7.25ns)   --->   "%somme_4 = fadd float %somme_3, %tmp_4" [src/algo.c:55]   --->   Operation 234 'fadd' 'somme_4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 235 [2/4] (5.70ns)   --->   "%tmp_10 = fmul float %mat_addr_read_22, %mat_addr_read_23" [src/algo.c:55]   --->   Operation 235 'fmul' 'tmp_10' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 236 [4/4] (5.70ns)   --->   "%tmp_11 = fmul float %mat_addr_read_24, %mat_addr_read_25" [src/algo.c:55]   --->   Operation 236 'fmul' 'tmp_11' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 237 [1/1] (8.75ns)   --->   "%mat_addr_read_26 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 237 'read' 'mat_addr_read_26' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 238 [4/5] (7.25ns)   --->   "%somme_4 = fadd float %somme_3, %tmp_4" [src/algo.c:55]   --->   Operation 238 'fadd' 'somme_4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 239 [1/4] (5.70ns)   --->   "%tmp_10 = fmul float %mat_addr_read_22, %mat_addr_read_23" [src/algo.c:55]   --->   Operation 239 'fmul' 'tmp_10' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 240 [3/4] (5.70ns)   --->   "%tmp_11 = fmul float %mat_addr_read_24, %mat_addr_read_25" [src/algo.c:55]   --->   Operation 240 'fmul' 'tmp_11' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 241 [1/1] (8.75ns)   --->   "%mat_addr_read_27 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 241 'read' 'mat_addr_read_27' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 242 [3/5] (7.25ns)   --->   "%somme_4 = fadd float %somme_3, %tmp_4" [src/algo.c:55]   --->   Operation 242 'fadd' 'somme_4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 243 [2/4] (5.70ns)   --->   "%tmp_11 = fmul float %mat_addr_read_24, %mat_addr_read_25" [src/algo.c:55]   --->   Operation 243 'fmul' 'tmp_11' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 244 [4/4] (5.70ns)   --->   "%tmp_12 = fmul float %mat_addr_read_26, %mat_addr_read_27" [src/algo.c:55]   --->   Operation 244 'fmul' 'tmp_12' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 245 [1/1] (8.75ns)   --->   "%mat_addr_read_28 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 245 'read' 'mat_addr_read_28' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 246 [2/5] (7.25ns)   --->   "%somme_4 = fadd float %somme_3, %tmp_4" [src/algo.c:55]   --->   Operation 246 'fadd' 'somme_4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 247 [1/4] (5.70ns)   --->   "%tmp_11 = fmul float %mat_addr_read_24, %mat_addr_read_25" [src/algo.c:55]   --->   Operation 247 'fmul' 'tmp_11' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 248 [3/4] (5.70ns)   --->   "%tmp_12 = fmul float %mat_addr_read_26, %mat_addr_read_27" [src/algo.c:55]   --->   Operation 248 'fmul' 'tmp_12' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 249 [1/1] (8.75ns)   --->   "%mat_addr_read_29 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 249 'read' 'mat_addr_read_29' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 250 [1/5] (7.25ns)   --->   "%somme_4 = fadd float %somme_3, %tmp_4" [src/algo.c:55]   --->   Operation 250 'fadd' 'somme_4' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 251 [2/4] (5.70ns)   --->   "%tmp_12 = fmul float %mat_addr_read_26, %mat_addr_read_27" [src/algo.c:55]   --->   Operation 251 'fmul' 'tmp_12' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 252 [4/4] (5.70ns)   --->   "%tmp_13 = fmul float %mat_addr_read_28, %mat_addr_read_29" [src/algo.c:55]   --->   Operation 252 'fmul' 'tmp_13' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 253 [1/1] (8.75ns)   --->   "%mat_addr_read_30 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 253 'read' 'mat_addr_read_30' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 254 [5/5] (7.25ns)   --->   "%somme_5 = fadd float %somme_4, %tmp_5" [src/algo.c:55]   --->   Operation 254 'fadd' 'somme_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 255 [1/4] (5.70ns)   --->   "%tmp_12 = fmul float %mat_addr_read_26, %mat_addr_read_27" [src/algo.c:55]   --->   Operation 255 'fmul' 'tmp_12' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 256 [3/4] (5.70ns)   --->   "%tmp_13 = fmul float %mat_addr_read_28, %mat_addr_read_29" [src/algo.c:55]   --->   Operation 256 'fmul' 'tmp_13' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 257 [1/1] (8.75ns)   --->   "%mat_addr_read_31 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 257 'read' 'mat_addr_read_31' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 258 [4/5] (7.25ns)   --->   "%somme_5 = fadd float %somme_4, %tmp_5" [src/algo.c:55]   --->   Operation 258 'fadd' 'somme_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 259 [2/4] (5.70ns)   --->   "%tmp_13 = fmul float %mat_addr_read_28, %mat_addr_read_29" [src/algo.c:55]   --->   Operation 259 'fmul' 'tmp_13' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 260 [4/4] (5.70ns)   --->   "%tmp_14 = fmul float %mat_addr_read_30, %mat_addr_read_31" [src/algo.c:55]   --->   Operation 260 'fmul' 'tmp_14' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 261 [1/1] (8.75ns)   --->   "%mat_addr_read_32 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 261 'read' 'mat_addr_read_32' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 262 [3/5] (7.25ns)   --->   "%somme_5 = fadd float %somme_4, %tmp_5" [src/algo.c:55]   --->   Operation 262 'fadd' 'somme_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 263 [1/4] (5.70ns)   --->   "%tmp_13 = fmul float %mat_addr_read_28, %mat_addr_read_29" [src/algo.c:55]   --->   Operation 263 'fmul' 'tmp_13' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 264 [3/4] (5.70ns)   --->   "%tmp_14 = fmul float %mat_addr_read_30, %mat_addr_read_31" [src/algo.c:55]   --->   Operation 264 'fmul' 'tmp_14' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 265 [1/1] (8.75ns)   --->   "%mat_addr_read_33 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 265 'read' 'mat_addr_read_33' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 266 [2/5] (7.25ns)   --->   "%somme_5 = fadd float %somme_4, %tmp_5" [src/algo.c:55]   --->   Operation 266 'fadd' 'somme_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 267 [2/4] (5.70ns)   --->   "%tmp_14 = fmul float %mat_addr_read_30, %mat_addr_read_31" [src/algo.c:55]   --->   Operation 267 'fmul' 'tmp_14' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 268 [4/4] (5.70ns)   --->   "%tmp_15 = fmul float %mat_addr_read_32, %mat_addr_read_33" [src/algo.c:55]   --->   Operation 268 'fmul' 'tmp_15' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 269 [1/1] (8.75ns)   --->   "%mat_addr_read_34 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 269 'read' 'mat_addr_read_34' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 270 [1/5] (7.25ns)   --->   "%somme_5 = fadd float %somme_4, %tmp_5" [src/algo.c:55]   --->   Operation 270 'fadd' 'somme_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 271 [1/4] (5.70ns)   --->   "%tmp_14 = fmul float %mat_addr_read_30, %mat_addr_read_31" [src/algo.c:55]   --->   Operation 271 'fmul' 'tmp_14' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 272 [3/4] (5.70ns)   --->   "%tmp_15 = fmul float %mat_addr_read_32, %mat_addr_read_33" [src/algo.c:55]   --->   Operation 272 'fmul' 'tmp_15' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 273 [1/1] (8.75ns)   --->   "%mat_addr_read_35 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 273 'read' 'mat_addr_read_35' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 274 [5/5] (7.25ns)   --->   "%somme_6 = fadd float %somme_5, %tmp_6" [src/algo.c:55]   --->   Operation 274 'fadd' 'somme_6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 275 [2/4] (5.70ns)   --->   "%tmp_15 = fmul float %mat_addr_read_32, %mat_addr_read_33" [src/algo.c:55]   --->   Operation 275 'fmul' 'tmp_15' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 276 [4/4] (5.70ns)   --->   "%tmp_16 = fmul float %mat_addr_read_34, %mat_addr_read_35" [src/algo.c:55]   --->   Operation 276 'fmul' 'tmp_16' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 277 [1/1] (8.75ns)   --->   "%mat_addr_read_36 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 277 'read' 'mat_addr_read_36' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 278 [4/5] (7.25ns)   --->   "%somme_6 = fadd float %somme_5, %tmp_6" [src/algo.c:55]   --->   Operation 278 'fadd' 'somme_6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 279 [1/4] (5.70ns)   --->   "%tmp_15 = fmul float %mat_addr_read_32, %mat_addr_read_33" [src/algo.c:55]   --->   Operation 279 'fmul' 'tmp_15' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 280 [3/4] (5.70ns)   --->   "%tmp_16 = fmul float %mat_addr_read_34, %mat_addr_read_35" [src/algo.c:55]   --->   Operation 280 'fmul' 'tmp_16' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 281 [1/1] (8.75ns)   --->   "%mat_addr_read_37 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 281 'read' 'mat_addr_read_37' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 282 [3/5] (7.25ns)   --->   "%somme_6 = fadd float %somme_5, %tmp_6" [src/algo.c:55]   --->   Operation 282 'fadd' 'somme_6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 283 [2/4] (5.70ns)   --->   "%tmp_16 = fmul float %mat_addr_read_34, %mat_addr_read_35" [src/algo.c:55]   --->   Operation 283 'fmul' 'tmp_16' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 284 [4/4] (5.70ns)   --->   "%tmp_17 = fmul float %mat_addr_read_36, %mat_addr_read_37" [src/algo.c:55]   --->   Operation 284 'fmul' 'tmp_17' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 285 [1/1] (8.75ns)   --->   "%mat_addr_read_38 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 285 'read' 'mat_addr_read_38' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 286 [2/5] (7.25ns)   --->   "%somme_6 = fadd float %somme_5, %tmp_6" [src/algo.c:55]   --->   Operation 286 'fadd' 'somme_6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 287 [1/4] (5.70ns)   --->   "%tmp_16 = fmul float %mat_addr_read_34, %mat_addr_read_35" [src/algo.c:55]   --->   Operation 287 'fmul' 'tmp_16' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 288 [3/4] (5.70ns)   --->   "%tmp_17 = fmul float %mat_addr_read_36, %mat_addr_read_37" [src/algo.c:55]   --->   Operation 288 'fmul' 'tmp_17' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 289 [1/1] (8.75ns)   --->   "%mat_addr_read_39 = call float @_ssdm_op_Read.m_axi.floatP(float* %mat_addr)" [src/algo.c:55]   --->   Operation 289 'read' 'mat_addr_read_39' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 7.25>
ST_48 : Operation 290 [1/5] (7.25ns)   --->   "%somme_6 = fadd float %somme_5, %tmp_6" [src/algo.c:55]   --->   Operation 290 'fadd' 'somme_6' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 291 [2/4] (5.70ns)   --->   "%tmp_17 = fmul float %mat_addr_read_36, %mat_addr_read_37" [src/algo.c:55]   --->   Operation 291 'fmul' 'tmp_17' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 292 [4/4] (5.70ns)   --->   "%tmp_18 = fmul float %mat_addr_read_38, %mat_addr_read_39" [src/algo.c:55]   --->   Operation 292 'fmul' 'tmp_18' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 7.25>
ST_49 : Operation 293 [5/5] (7.25ns)   --->   "%somme_7 = fadd float %somme_6, %tmp_7" [src/algo.c:55]   --->   Operation 293 'fadd' 'somme_7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 294 [1/4] (5.70ns)   --->   "%tmp_17 = fmul float %mat_addr_read_36, %mat_addr_read_37" [src/algo.c:55]   --->   Operation 294 'fmul' 'tmp_17' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 295 [3/4] (5.70ns)   --->   "%tmp_18 = fmul float %mat_addr_read_38, %mat_addr_read_39" [src/algo.c:55]   --->   Operation 295 'fmul' 'tmp_18' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 7.25>
ST_50 : Operation 296 [4/5] (7.25ns)   --->   "%somme_7 = fadd float %somme_6, %tmp_7" [src/algo.c:55]   --->   Operation 296 'fadd' 'somme_7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 297 [2/4] (5.70ns)   --->   "%tmp_18 = fmul float %mat_addr_read_38, %mat_addr_read_39" [src/algo.c:55]   --->   Operation 297 'fmul' 'tmp_18' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 7.25>
ST_51 : Operation 298 [3/5] (7.25ns)   --->   "%somme_7 = fadd float %somme_6, %tmp_7" [src/algo.c:55]   --->   Operation 298 'fadd' 'somme_7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 299 [1/4] (5.70ns)   --->   "%tmp_18 = fmul float %mat_addr_read_38, %mat_addr_read_39" [src/algo.c:55]   --->   Operation 299 'fmul' 'tmp_18' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 7.25>
ST_52 : Operation 300 [2/5] (7.25ns)   --->   "%somme_7 = fadd float %somme_6, %tmp_7" [src/algo.c:55]   --->   Operation 300 'fadd' 'somme_7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 7.25>
ST_53 : Operation 301 [1/5] (7.25ns)   --->   "%somme_7 = fadd float %somme_6, %tmp_7" [src/algo.c:55]   --->   Operation 301 'fadd' 'somme_7' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 0.00>

State 55 <SV = 54> <Delay = 7.25>
ST_55 : Operation 302 [5/5] (7.25ns)   --->   "%somme_8 = fadd float %somme_7, %tmp_8" [src/algo.c:55]   --->   Operation 302 'fadd' 'somme_8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 55> <Delay = 7.25>
ST_56 : Operation 303 [4/5] (7.25ns)   --->   "%somme_8 = fadd float %somme_7, %tmp_8" [src/algo.c:55]   --->   Operation 303 'fadd' 'somme_8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 56> <Delay = 7.25>
ST_57 : Operation 304 [3/5] (7.25ns)   --->   "%somme_8 = fadd float %somme_7, %tmp_8" [src/algo.c:55]   --->   Operation 304 'fadd' 'somme_8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 57> <Delay = 7.25>
ST_58 : Operation 305 [2/5] (7.25ns)   --->   "%somme_8 = fadd float %somme_7, %tmp_8" [src/algo.c:55]   --->   Operation 305 'fadd' 'somme_8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 58> <Delay = 7.25>
ST_59 : Operation 306 [1/5] (7.25ns)   --->   "%somme_8 = fadd float %somme_7, %tmp_8" [src/algo.c:55]   --->   Operation 306 'fadd' 'somme_8' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 59> <Delay = 7.25>
ST_60 : Operation 307 [5/5] (7.25ns)   --->   "%somme_9 = fadd float %somme_8, %tmp_9" [src/algo.c:55]   --->   Operation 307 'fadd' 'somme_9' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 60> <Delay = 7.25>
ST_61 : Operation 308 [4/5] (7.25ns)   --->   "%somme_9 = fadd float %somme_8, %tmp_9" [src/algo.c:55]   --->   Operation 308 'fadd' 'somme_9' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 61> <Delay = 7.25>
ST_62 : Operation 309 [3/5] (7.25ns)   --->   "%somme_9 = fadd float %somme_8, %tmp_9" [src/algo.c:55]   --->   Operation 309 'fadd' 'somme_9' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 62> <Delay = 7.25>
ST_63 : Operation 310 [2/5] (7.25ns)   --->   "%somme_9 = fadd float %somme_8, %tmp_9" [src/algo.c:55]   --->   Operation 310 'fadd' 'somme_9' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 63> <Delay = 7.25>
ST_64 : Operation 311 [1/5] (7.25ns)   --->   "%somme_9 = fadd float %somme_8, %tmp_9" [src/algo.c:55]   --->   Operation 311 'fadd' 'somme_9' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 64> <Delay = 7.25>
ST_65 : Operation 312 [5/5] (7.25ns)   --->   "%somme_10 = fadd float %somme_9, %tmp_s" [src/algo.c:55]   --->   Operation 312 'fadd' 'somme_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 65> <Delay = 7.25>
ST_66 : Operation 313 [4/5] (7.25ns)   --->   "%somme_10 = fadd float %somme_9, %tmp_s" [src/algo.c:55]   --->   Operation 313 'fadd' 'somme_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 66> <Delay = 7.25>
ST_67 : Operation 314 [3/5] (7.25ns)   --->   "%somme_10 = fadd float %somme_9, %tmp_s" [src/algo.c:55]   --->   Operation 314 'fadd' 'somme_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 67> <Delay = 7.25>
ST_68 : Operation 315 [2/5] (7.25ns)   --->   "%somme_10 = fadd float %somme_9, %tmp_s" [src/algo.c:55]   --->   Operation 315 'fadd' 'somme_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 69 <SV = 68> <Delay = 7.25>
ST_69 : Operation 316 [1/5] (7.25ns)   --->   "%somme_10 = fadd float %somme_9, %tmp_s" [src/algo.c:55]   --->   Operation 316 'fadd' 'somme_10' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 69> <Delay = 7.25>
ST_70 : Operation 317 [5/5] (7.25ns)   --->   "%somme_11 = fadd float %somme_10, %tmp_10" [src/algo.c:55]   --->   Operation 317 'fadd' 'somme_11' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 71 <SV = 70> <Delay = 7.25>
ST_71 : Operation 318 [4/5] (7.25ns)   --->   "%somme_11 = fadd float %somme_10, %tmp_10" [src/algo.c:55]   --->   Operation 318 'fadd' 'somme_11' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 71> <Delay = 7.25>
ST_72 : Operation 319 [3/5] (7.25ns)   --->   "%somme_11 = fadd float %somme_10, %tmp_10" [src/algo.c:55]   --->   Operation 319 'fadd' 'somme_11' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 73 <SV = 72> <Delay = 7.25>
ST_73 : Operation 320 [2/5] (7.25ns)   --->   "%somme_11 = fadd float %somme_10, %tmp_10" [src/algo.c:55]   --->   Operation 320 'fadd' 'somme_11' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 73> <Delay = 7.25>
ST_74 : Operation 321 [1/5] (7.25ns)   --->   "%somme_11 = fadd float %somme_10, %tmp_10" [src/algo.c:55]   --->   Operation 321 'fadd' 'somme_11' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 75 <SV = 74> <Delay = 7.25>
ST_75 : Operation 322 [5/5] (7.25ns)   --->   "%somme_12 = fadd float %somme_11, %tmp_11" [src/algo.c:55]   --->   Operation 322 'fadd' 'somme_12' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 76 <SV = 75> <Delay = 7.25>
ST_76 : Operation 323 [4/5] (7.25ns)   --->   "%somme_12 = fadd float %somme_11, %tmp_11" [src/algo.c:55]   --->   Operation 323 'fadd' 'somme_12' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 77 <SV = 76> <Delay = 7.25>
ST_77 : Operation 324 [3/5] (7.25ns)   --->   "%somme_12 = fadd float %somme_11, %tmp_11" [src/algo.c:55]   --->   Operation 324 'fadd' 'somme_12' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 77> <Delay = 7.25>
ST_78 : Operation 325 [2/5] (7.25ns)   --->   "%somme_12 = fadd float %somme_11, %tmp_11" [src/algo.c:55]   --->   Operation 325 'fadd' 'somme_12' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 78> <Delay = 7.25>
ST_79 : Operation 326 [1/5] (7.25ns)   --->   "%somme_12 = fadd float %somme_11, %tmp_11" [src/algo.c:55]   --->   Operation 326 'fadd' 'somme_12' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 79> <Delay = 7.25>
ST_80 : Operation 327 [5/5] (7.25ns)   --->   "%somme_13 = fadd float %somme_12, %tmp_12" [src/algo.c:55]   --->   Operation 327 'fadd' 'somme_13' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 81 <SV = 80> <Delay = 7.25>
ST_81 : Operation 328 [4/5] (7.25ns)   --->   "%somme_13 = fadd float %somme_12, %tmp_12" [src/algo.c:55]   --->   Operation 328 'fadd' 'somme_13' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 81> <Delay = 7.25>
ST_82 : Operation 329 [3/5] (7.25ns)   --->   "%somme_13 = fadd float %somme_12, %tmp_12" [src/algo.c:55]   --->   Operation 329 'fadd' 'somme_13' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 82> <Delay = 7.25>
ST_83 : Operation 330 [2/5] (7.25ns)   --->   "%somme_13 = fadd float %somme_12, %tmp_12" [src/algo.c:55]   --->   Operation 330 'fadd' 'somme_13' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 83> <Delay = 7.25>
ST_84 : Operation 331 [1/5] (7.25ns)   --->   "%somme_13 = fadd float %somme_12, %tmp_12" [src/algo.c:55]   --->   Operation 331 'fadd' 'somme_13' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 84> <Delay = 7.25>
ST_85 : Operation 332 [5/5] (7.25ns)   --->   "%somme_14 = fadd float %somme_13, %tmp_13" [src/algo.c:55]   --->   Operation 332 'fadd' 'somme_14' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 85> <Delay = 7.25>
ST_86 : Operation 333 [4/5] (7.25ns)   --->   "%somme_14 = fadd float %somme_13, %tmp_13" [src/algo.c:55]   --->   Operation 333 'fadd' 'somme_14' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 87 <SV = 86> <Delay = 7.25>
ST_87 : Operation 334 [3/5] (7.25ns)   --->   "%somme_14 = fadd float %somme_13, %tmp_13" [src/algo.c:55]   --->   Operation 334 'fadd' 'somme_14' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 87> <Delay = 7.25>
ST_88 : Operation 335 [2/5] (7.25ns)   --->   "%somme_14 = fadd float %somme_13, %tmp_13" [src/algo.c:55]   --->   Operation 335 'fadd' 'somme_14' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 88> <Delay = 7.25>
ST_89 : Operation 336 [1/5] (7.25ns)   --->   "%somme_14 = fadd float %somme_13, %tmp_13" [src/algo.c:55]   --->   Operation 336 'fadd' 'somme_14' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 90 <SV = 89> <Delay = 7.25>
ST_90 : Operation 337 [5/5] (7.25ns)   --->   "%somme_15 = fadd float %somme_14, %tmp_14" [src/algo.c:55]   --->   Operation 337 'fadd' 'somme_15' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 90> <Delay = 7.25>
ST_91 : Operation 338 [4/5] (7.25ns)   --->   "%somme_15 = fadd float %somme_14, %tmp_14" [src/algo.c:55]   --->   Operation 338 'fadd' 'somme_15' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 91> <Delay = 7.25>
ST_92 : Operation 339 [3/5] (7.25ns)   --->   "%somme_15 = fadd float %somme_14, %tmp_14" [src/algo.c:55]   --->   Operation 339 'fadd' 'somme_15' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 93 <SV = 92> <Delay = 7.25>
ST_93 : Operation 340 [2/5] (7.25ns)   --->   "%somme_15 = fadd float %somme_14, %tmp_14" [src/algo.c:55]   --->   Operation 340 'fadd' 'somme_15' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 93> <Delay = 7.25>
ST_94 : Operation 341 [1/5] (7.25ns)   --->   "%somme_15 = fadd float %somme_14, %tmp_14" [src/algo.c:55]   --->   Operation 341 'fadd' 'somme_15' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 94> <Delay = 0.00>

State 96 <SV = 95> <Delay = 7.25>
ST_96 : Operation 342 [5/5] (7.25ns)   --->   "%somme_16 = fadd float %somme_15, %tmp_15" [src/algo.c:55]   --->   Operation 342 'fadd' 'somme_16' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 97 <SV = 96> <Delay = 7.25>
ST_97 : Operation 343 [4/5] (7.25ns)   --->   "%somme_16 = fadd float %somme_15, %tmp_15" [src/algo.c:55]   --->   Operation 343 'fadd' 'somme_16' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 98 <SV = 97> <Delay = 7.25>
ST_98 : Operation 344 [3/5] (7.25ns)   --->   "%somme_16 = fadd float %somme_15, %tmp_15" [src/algo.c:55]   --->   Operation 344 'fadd' 'somme_16' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 99 <SV = 98> <Delay = 7.25>
ST_99 : Operation 345 [2/5] (7.25ns)   --->   "%somme_16 = fadd float %somme_15, %tmp_15" [src/algo.c:55]   --->   Operation 345 'fadd' 'somme_16' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 100 <SV = 99> <Delay = 7.25>
ST_100 : Operation 346 [1/5] (7.25ns)   --->   "%somme_16 = fadd float %somme_15, %tmp_15" [src/algo.c:55]   --->   Operation 346 'fadd' 'somme_16' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 101 <SV = 100> <Delay = 7.25>
ST_101 : Operation 347 [5/5] (7.25ns)   --->   "%somme_17 = fadd float %somme_16, %tmp_16" [src/algo.c:55]   --->   Operation 347 'fadd' 'somme_17' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 102 <SV = 101> <Delay = 7.25>
ST_102 : Operation 348 [4/5] (7.25ns)   --->   "%somme_17 = fadd float %somme_16, %tmp_16" [src/algo.c:55]   --->   Operation 348 'fadd' 'somme_17' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 103 <SV = 102> <Delay = 7.25>
ST_103 : Operation 349 [3/5] (7.25ns)   --->   "%somme_17 = fadd float %somme_16, %tmp_16" [src/algo.c:55]   --->   Operation 349 'fadd' 'somme_17' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 104 <SV = 103> <Delay = 7.25>
ST_104 : Operation 350 [2/5] (7.25ns)   --->   "%somme_17 = fadd float %somme_16, %tmp_16" [src/algo.c:55]   --->   Operation 350 'fadd' 'somme_17' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 105 <SV = 104> <Delay = 7.25>
ST_105 : Operation 351 [1/5] (7.25ns)   --->   "%somme_17 = fadd float %somme_16, %tmp_16" [src/algo.c:55]   --->   Operation 351 'fadd' 'somme_17' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 106 <SV = 105> <Delay = 7.25>
ST_106 : Operation 352 [5/5] (7.25ns)   --->   "%somme_18 = fadd float %somme_17, %tmp_17" [src/algo.c:55]   --->   Operation 352 'fadd' 'somme_18' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 107 <SV = 106> <Delay = 7.25>
ST_107 : Operation 353 [4/5] (7.25ns)   --->   "%somme_18 = fadd float %somme_17, %tmp_17" [src/algo.c:55]   --->   Operation 353 'fadd' 'somme_18' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 108 <SV = 107> <Delay = 7.25>
ST_108 : Operation 354 [3/5] (7.25ns)   --->   "%somme_18 = fadd float %somme_17, %tmp_17" [src/algo.c:55]   --->   Operation 354 'fadd' 'somme_18' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 109 <SV = 108> <Delay = 7.25>
ST_109 : Operation 355 [2/5] (7.25ns)   --->   "%somme_18 = fadd float %somme_17, %tmp_17" [src/algo.c:55]   --->   Operation 355 'fadd' 'somme_18' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 110 <SV = 109> <Delay = 7.25>
ST_110 : Operation 356 [1/5] (7.25ns)   --->   "%somme_18 = fadd float %somme_17, %tmp_17" [src/algo.c:55]   --->   Operation 356 'fadd' 'somme_18' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 111 <SV = 110> <Delay = 7.25>
ST_111 : Operation 357 [5/5] (7.25ns)   --->   "%somme_19 = fadd float %somme_18, %tmp_18" [src/algo.c:55]   --->   Operation 357 'fadd' 'somme_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 112 <SV = 111> <Delay = 7.25>
ST_112 : Operation 358 [4/5] (7.25ns)   --->   "%somme_19 = fadd float %somme_18, %tmp_18" [src/algo.c:55]   --->   Operation 358 'fadd' 'somme_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 113 <SV = 112> <Delay = 7.25>
ST_113 : Operation 359 [3/5] (7.25ns)   --->   "%somme_19 = fadd float %somme_18, %tmp_18" [src/algo.c:55]   --->   Operation 359 'fadd' 'somme_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 114 <SV = 113> <Delay = 7.25>
ST_114 : Operation 360 [2/5] (7.25ns)   --->   "%somme_19 = fadd float %somme_18, %tmp_18" [src/algo.c:55]   --->   Operation 360 'fadd' 'somme_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 115 <SV = 114> <Delay = 7.25>
ST_115 : Operation 361 [1/5] (7.25ns)   --->   "%somme_19 = fadd float %somme_18, %tmp_18" [src/algo.c:55]   --->   Operation 361 'fadd' 'somme_19' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 116 <SV = 115> <Delay = 6.07>
ST_116 : Operation 362 [16/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 362 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 117 <SV = 116> <Delay = 6.07>
ST_117 : Operation 363 [15/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 363 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 118 <SV = 117> <Delay = 6.07>
ST_118 : Operation 364 [14/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 364 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 119 <SV = 118> <Delay = 6.07>
ST_119 : Operation 365 [13/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 365 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 120 <SV = 119> <Delay = 6.07>
ST_120 : Operation 366 [12/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 366 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 121 <SV = 120> <Delay = 6.07>
ST_121 : Operation 367 [11/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 367 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 122 <SV = 121> <Delay = 6.07>
ST_122 : Operation 368 [10/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 368 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 123 <SV = 122> <Delay = 6.07>
ST_123 : Operation 369 [9/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 369 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 124 <SV = 123> <Delay = 6.07>
ST_124 : Operation 370 [8/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 370 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 125 <SV = 124> <Delay = 6.07>
ST_125 : Operation 371 [7/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 371 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 126 <SV = 125> <Delay = 6.07>
ST_126 : Operation 372 [6/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 372 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 127 <SV = 126> <Delay = 6.07>
ST_127 : Operation 373 [5/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 373 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 128 <SV = 127> <Delay = 6.07>
ST_128 : Operation 374 [4/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 374 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 129 <SV = 128> <Delay = 6.07>
ST_129 : Operation 375 [3/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 375 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 130 <SV = 129> <Delay = 6.07>
ST_130 : Operation 376 [2/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 376 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 131 <SV = 130> <Delay = 6.07>
ST_131 : Operation 377 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %mat, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 40, [6 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 377 'specinterface' <Predicate = true> <Delay = 0.00>
ST_131 : Operation 378 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/algo.c:49]   --->   Operation 378 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_131 : Operation 379 [1/16] (6.07ns)   --->   "%moyenneXY_1 = fdiv float %somme_19, 2.000000e+01" [src/algo.c:57]   --->   Operation 379 'fdiv' 'moyenneXY_1' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_131 : Operation 380 [1/1] (0.00ns)   --->   "ret float %moyenneXY_1" [src/algo.c:59]   --->   Operation 380 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	wire read on port 'mat_offset' (src/algo.c:55) [3]  (0 ns)
	'getelementptr' operation ('mat_addr', src/algo.c:55) [5]  (0 ns)
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'mat' (src/algo.c:55) [8]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [9]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [10]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [13]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [14]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [17]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [18]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [21]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [22]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [25]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [26]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [29]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [30]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [33]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [34]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [37]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [38]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [41]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [42]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [45]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [46]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [49]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [50]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [53]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [54]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [57]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [58]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [61]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [62]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [65]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [66]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [69]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [70]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [73]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [74]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [77]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [78]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [81]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [82]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [85]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus read on port 'mat' (src/algo.c:55) [86]  (8.75 ns)

 <State 48>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_6', src/algo.c:55) [36]  (7.26 ns)

 <State 49>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_7', src/algo.c:55) [40]  (7.26 ns)

 <State 50>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_7', src/algo.c:55) [40]  (7.26 ns)

 <State 51>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_7', src/algo.c:55) [40]  (7.26 ns)

 <State 52>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_7', src/algo.c:55) [40]  (7.26 ns)

 <State 53>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_7', src/algo.c:55) [40]  (7.26 ns)

 <State 54>: 0ns
The critical path consists of the following:

 <State 55>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_8', src/algo.c:55) [44]  (7.26 ns)

 <State 56>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_8', src/algo.c:55) [44]  (7.26 ns)

 <State 57>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_8', src/algo.c:55) [44]  (7.26 ns)

 <State 58>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_8', src/algo.c:55) [44]  (7.26 ns)

 <State 59>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_8', src/algo.c:55) [44]  (7.26 ns)

 <State 60>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_9', src/algo.c:55) [48]  (7.26 ns)

 <State 61>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_9', src/algo.c:55) [48]  (7.26 ns)

 <State 62>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_9', src/algo.c:55) [48]  (7.26 ns)

 <State 63>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_9', src/algo.c:55) [48]  (7.26 ns)

 <State 64>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_9', src/algo.c:55) [48]  (7.26 ns)

 <State 65>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_10', src/algo.c:55) [52]  (7.26 ns)

 <State 66>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_10', src/algo.c:55) [52]  (7.26 ns)

 <State 67>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_10', src/algo.c:55) [52]  (7.26 ns)

 <State 68>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_10', src/algo.c:55) [52]  (7.26 ns)

 <State 69>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_10', src/algo.c:55) [52]  (7.26 ns)

 <State 70>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_11', src/algo.c:55) [56]  (7.26 ns)

 <State 71>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_11', src/algo.c:55) [56]  (7.26 ns)

 <State 72>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_11', src/algo.c:55) [56]  (7.26 ns)

 <State 73>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_11', src/algo.c:55) [56]  (7.26 ns)

 <State 74>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_11', src/algo.c:55) [56]  (7.26 ns)

 <State 75>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_12', src/algo.c:55) [60]  (7.26 ns)

 <State 76>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_12', src/algo.c:55) [60]  (7.26 ns)

 <State 77>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_12', src/algo.c:55) [60]  (7.26 ns)

 <State 78>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_12', src/algo.c:55) [60]  (7.26 ns)

 <State 79>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_12', src/algo.c:55) [60]  (7.26 ns)

 <State 80>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_13', src/algo.c:55) [64]  (7.26 ns)

 <State 81>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_13', src/algo.c:55) [64]  (7.26 ns)

 <State 82>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_13', src/algo.c:55) [64]  (7.26 ns)

 <State 83>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_13', src/algo.c:55) [64]  (7.26 ns)

 <State 84>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_13', src/algo.c:55) [64]  (7.26 ns)

 <State 85>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_14', src/algo.c:55) [68]  (7.26 ns)

 <State 86>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_14', src/algo.c:55) [68]  (7.26 ns)

 <State 87>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_14', src/algo.c:55) [68]  (7.26 ns)

 <State 88>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_14', src/algo.c:55) [68]  (7.26 ns)

 <State 89>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_14', src/algo.c:55) [68]  (7.26 ns)

 <State 90>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_15', src/algo.c:55) [72]  (7.26 ns)

 <State 91>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_15', src/algo.c:55) [72]  (7.26 ns)

 <State 92>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_15', src/algo.c:55) [72]  (7.26 ns)

 <State 93>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_15', src/algo.c:55) [72]  (7.26 ns)

 <State 94>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_15', src/algo.c:55) [72]  (7.26 ns)

 <State 95>: 0ns
The critical path consists of the following:

 <State 96>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_16', src/algo.c:55) [76]  (7.26 ns)

 <State 97>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_16', src/algo.c:55) [76]  (7.26 ns)

 <State 98>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_16', src/algo.c:55) [76]  (7.26 ns)

 <State 99>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_16', src/algo.c:55) [76]  (7.26 ns)

 <State 100>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_16', src/algo.c:55) [76]  (7.26 ns)

 <State 101>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_17', src/algo.c:55) [80]  (7.26 ns)

 <State 102>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_17', src/algo.c:55) [80]  (7.26 ns)

 <State 103>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_17', src/algo.c:55) [80]  (7.26 ns)

 <State 104>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_17', src/algo.c:55) [80]  (7.26 ns)

 <State 105>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_17', src/algo.c:55) [80]  (7.26 ns)

 <State 106>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_18', src/algo.c:55) [84]  (7.26 ns)

 <State 107>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_18', src/algo.c:55) [84]  (7.26 ns)

 <State 108>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_18', src/algo.c:55) [84]  (7.26 ns)

 <State 109>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_18', src/algo.c:55) [84]  (7.26 ns)

 <State 110>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_18', src/algo.c:55) [84]  (7.26 ns)

 <State 111>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_19', src/algo.c:55) [88]  (7.26 ns)

 <State 112>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_19', src/algo.c:55) [88]  (7.26 ns)

 <State 113>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_19', src/algo.c:55) [88]  (7.26 ns)

 <State 114>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_19', src/algo.c:55) [88]  (7.26 ns)

 <State 115>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('somme_19', src/algo.c:55) [88]  (7.26 ns)

 <State 116>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 117>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 118>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 119>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 120>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 121>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 122>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 123>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 124>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 125>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 126>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 127>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 128>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 129>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 130>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)

 <State 131>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('moyenneXY', src/algo.c:57) [89]  (6.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
