-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity moyenneXY is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_mat_AWVALID : OUT STD_LOGIC;
    m_axi_mat_AWREADY : IN STD_LOGIC;
    m_axi_mat_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mat_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mat_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_WVALID : OUT STD_LOGIC;
    m_axi_mat_WREADY : IN STD_LOGIC;
    m_axi_mat_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_WLAST : OUT STD_LOGIC;
    m_axi_mat_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_ARVALID : OUT STD_LOGIC;
    m_axi_mat_ARREADY : IN STD_LOGIC;
    m_axi_mat_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mat_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mat_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mat_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_RVALID : IN STD_LOGIC;
    m_axi_mat_RREADY : OUT STD_LOGIC;
    m_axi_mat_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_mat_RLAST : IN STD_LOGIC;
    m_axi_mat_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_BVALID : IN STD_LOGIC;
    m_axi_mat_BREADY : OUT STD_LOGIC;
    m_axi_mat_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mat_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_mat_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    mat_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    mat_blk_n_AR : OUT STD_LOGIC;
    mat_blk_n_R : OUT STD_LOGIC );
end;


architecture behav of moyenneXY is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_41A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001101000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state40_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_state80_pp0_stage39_iter1 : BOOLEAN;
    signal ap_block_state120_pp0_stage39_iter2 : BOOLEAN;
    signal ap_block_pp0_stage39_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_pp0_stage28 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_pp0_stage30 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_pp0_stage32 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_pp0_stage33 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_pp0_stage34 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_pp0_stage35 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_pp0_stage36 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_pp0_stage37 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_pp0_stage38 : BOOLEAN;
    signal ap_block_pp0_stage39 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal reg_68 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state88_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state128_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state53_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_state93_pp0_stage12_iter2 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state57_pp0_stage16_iter1 : BOOLEAN;
    signal ap_block_state97_pp0_stage16_iter2 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_state61_pp0_stage20_iter1 : BOOLEAN;
    signal ap_block_state101_pp0_stage20_iter2 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_state65_pp0_stage24_iter1 : BOOLEAN;
    signal ap_block_state105_pp0_stage24_iter2 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_state69_pp0_stage28_iter1 : BOOLEAN;
    signal ap_block_state109_pp0_stage28_iter2 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_block_state33_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_state73_pp0_stage32_iter1 : BOOLEAN;
    signal ap_block_state113_pp0_stage32_iter2 : BOOLEAN;
    signal ap_block_pp0_stage32_11001 : BOOLEAN;
    signal ap_block_state37_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_state77_pp0_stage36_iter1 : BOOLEAN;
    signal ap_block_state117_pp0_stage36_iter2 : BOOLEAN;
    signal ap_block_pp0_stage36_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state121_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state49_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state89_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_state129_pp0_stage8_iter3 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state54_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_state94_pp0_stage13_iter2 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_state59_pp0_stage18_iter1 : BOOLEAN;
    signal ap_block_state99_pp0_stage18_iter2 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_state63_pp0_stage22_iter1 : BOOLEAN;
    signal ap_block_state103_pp0_stage22_iter2 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_state67_pp0_stage26_iter1 : BOOLEAN;
    signal ap_block_state107_pp0_stage26_iter2 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_state71_pp0_stage30_iter1 : BOOLEAN;
    signal ap_block_state111_pp0_stage30_iter2 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_block_state35_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_state75_pp0_stage34_iter1 : BOOLEAN;
    signal ap_block_state115_pp0_stage34_iter2 : BOOLEAN;
    signal ap_block_pp0_stage34_11001 : BOOLEAN;
    signal ap_block_state39_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_state79_pp0_stage38_iter1 : BOOLEAN;
    signal ap_block_state119_pp0_stage38_iter2 : BOOLEAN;
    signal ap_block_pp0_stage38_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state83_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state123_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal reg_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state50_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_state90_pp0_stage9_iter2 : BOOLEAN;
    signal ap_block_state130_pp0_stage9_iter3 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state55_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_state95_pp0_stage14_iter2 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_state60_pp0_stage19_iter1 : BOOLEAN;
    signal ap_block_state100_pp0_stage19_iter2 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_state66_pp0_stage25_iter1 : BOOLEAN;
    signal ap_block_state106_pp0_stage25_iter2 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_state72_pp0_stage31_iter1 : BOOLEAN;
    signal ap_block_state112_pp0_stage31_iter2 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal ap_block_state38_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_state78_pp0_stage37_iter1 : BOOLEAN;
    signal ap_block_state118_pp0_stage37_iter2 : BOOLEAN;
    signal ap_block_pp0_stage37_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state84_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state124_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state51_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_state91_pp0_stage10_iter2 : BOOLEAN;
    signal ap_block_state131_pp0_stage10_iter3 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state56_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_state96_pp0_stage15_iter2 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_state62_pp0_stage21_iter1 : BOOLEAN;
    signal ap_block_state102_pp0_stage21_iter2 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_state68_pp0_stage27_iter1 : BOOLEAN;
    signal ap_block_state108_pp0_stage27_iter2 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal ap_block_state34_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_state74_pp0_stage33_iter1 : BOOLEAN;
    signal ap_block_state114_pp0_stage33_iter2 : BOOLEAN;
    signal ap_block_pp0_stage33_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state85_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state125_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal reg_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state52_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_state92_pp0_stage11_iter2 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state58_pp0_stage17_iter1 : BOOLEAN;
    signal ap_block_state98_pp0_stage17_iter2 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_state64_pp0_stage23_iter1 : BOOLEAN;
    signal ap_block_state104_pp0_stage23_iter2 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_state70_pp0_stage29_iter1 : BOOLEAN;
    signal ap_block_state110_pp0_stage29_iter2 : BOOLEAN;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal ap_block_state36_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_state76_pp0_stage35_iter1 : BOOLEAN;
    signal ap_block_state116_pp0_stage35_iter2 : BOOLEAN;
    signal ap_block_pp0_stage35_11001 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state82_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state122_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state87_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state127_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_fu_59_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_54_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_109 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_119 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_141 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_151 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_171 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_186_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_191 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_191_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_196_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_201_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mat_addr_read_38_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state86_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state126_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_16_reg_211 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_211_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_216_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_221 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_221_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_19_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage39_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal zext_ln55_fu_124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_54_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_54_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_59_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_59_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_54_ce : STD_LOGIC;
    signal grp_fu_59_ce : STD_LOGIC;
    signal grp_fu_63_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_63_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_block_pp0_stage32_subdone : BOOLEAN;
    signal ap_block_pp0_stage33_subdone : BOOLEAN;
    signal ap_block_pp0_stage34_subdone : BOOLEAN;
    signal ap_block_pp0_stage35_subdone : BOOLEAN;
    signal ap_block_pp0_stage36_subdone : BOOLEAN;
    signal ap_block_pp0_stage37_subdone : BOOLEAN;
    signal ap_block_pp0_stage38_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component pearson_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pearson_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pearson_fdiv_32ns_32ns_32_16_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    pearson_fadd_32ns_32ns_32_5_full_dsp_1_U8 : component pearson_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_54_p0,
        din1 => grp_fu_54_p1,
        ce => grp_fu_54_ce,
        dout => grp_fu_54_p2);

    pearson_fmul_32ns_32ns_32_4_max_dsp_1_U9 : component pearson_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_59_p0,
        din1 => grp_fu_59_p1,
        ce => grp_fu_59_ce,
        dout => grp_fu_59_p2);

    pearson_fdiv_32ns_32ns_32_16_1_U10 : component pearson_fdiv_32ns_32ns_32_16_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => somme_19_reg_226,
        din1 => ap_const_lv32_41A00000,
        ce => grp_fu_63_ce,
        dout => grp_fu_63_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mat_addr_read_38_reg_206 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)))) then
                reg_104 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_109 <= grp_fu_54_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then
                reg_114 <= grp_fu_54_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_119 <= grp_fu_54_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_68 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_74 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_80 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_86 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_92 <= m_axi_mat_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then
                reg_98 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34))) then
                somme_19_reg_226 <= grp_fu_54_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34))) then
                tmp_10_reg_176 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36))) then
                tmp_11_reg_181 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38))) then
                tmp_12_reg_186 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38))) then
                tmp_12_reg_186_pp0_iter1_reg <= tmp_12_reg_186;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_13_reg_191 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_13_reg_191_pp0_iter2_reg <= tmp_13_reg_191;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_14_reg_196 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_14_reg_196_pp0_iter2_reg <= tmp_14_reg_196;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_15_reg_201 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_15_reg_201_pp0_iter2_reg <= tmp_15_reg_201;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_16_reg_211 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_16_reg_211_pp0_iter2_reg <= tmp_16_reg_211;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                tmp_17_reg_216 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                tmp_17_reg_216_pp0_iter2_reg <= tmp_17_reg_216;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_18_reg_221 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                tmp_18_reg_221_pp0_iter2_reg <= tmp_18_reg_221;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then
                tmp_2_reg_141 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then
                tmp_4_reg_146 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then
                tmp_6_reg_151 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then
                tmp_7_reg_156 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then
                tmp_8_reg_161 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then
                tmp_9_reg_166 <= grp_fu_59_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32))) then
                tmp_s_reg_171 <= grp_fu_59_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage39_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_reset_idle_pp0, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_block_pp0_stage31_subdone, ap_block_pp0_stage32_subdone, ap_block_pp0_stage33_subdone, ap_block_pp0_stage34_subdone, ap_block_pp0_stage35_subdone, ap_block_pp0_stage36_subdone, ap_block_pp0_stage37_subdone, ap_block_pp0_stage38_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage32_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage33_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage34_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage35_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage36_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage37_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage38_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage39_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_mat_ARREADY, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (m_axi_mat_ARREADY = ap_const_logic_0))) or ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_mat_ARREADY, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (m_axi_mat_ARREADY = ap_const_logic_0))) or ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage10_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage10_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage11_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage11_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage12_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage12_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage13_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage13_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage14_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage14_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage15_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage15_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage16_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage16_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage17_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage17_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage18_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage18_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage19_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage19_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage1_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage1_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage20_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage20_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage21_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage21_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage22_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage22_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage23_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage23_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage24_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage24_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage25_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage25_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage26_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage26_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage26_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage26_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage27_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage27_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage27_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage27_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage28_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage28_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage28_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage28_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage29_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage29_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage29_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage29_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage2_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage2_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage30_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage30_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage30_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage30_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage31_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage31_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage31_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage31_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage32_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage32_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage32_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage32_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage33 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage33_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage33_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage33_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage33_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage34 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage34_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage34_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage34_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage34_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage35_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage35_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage35_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage35_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage36 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage36_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage36_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage36_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage36_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage37 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage37_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage37_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage37_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage37_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage38 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage38_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage38_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage38_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage38_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage39 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage39_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage39_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage39_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage39_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage3_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage3_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage4_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage4_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage5_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage5_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage6_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage6_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage7_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage7_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage8_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage8_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage9_11001 <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_mat_RVALID)
    begin
                ap_block_pp0_stage9_subdone <= ((m_axi_mat_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state100_pp0_stage19_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage20_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp0_stage21_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp0_stage22_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage23_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp0_stage24_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage25_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage26_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage27_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage28_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state10_pp0_stage9_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state110_pp0_stage29_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage30_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp0_stage31_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp0_stage32_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp0_stage33_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp0_stage34_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp0_stage35_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp0_stage36_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp0_stage37_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp0_stage38_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state11_pp0_stage10_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state120_pp0_stage39_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state125_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp0_stage8_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state12_pp0_stage11_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state130_pp0_stage9_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp0_stage10_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state13_pp0_stage12_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state14_pp0_stage13_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state15_pp0_stage14_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state16_pp0_stage15_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state17_pp0_stage16_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state18_pp0_stage17_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state19_pp0_stage18_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state20_pp0_stage19_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state20_pp0_stage19_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state21_pp0_stage20_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state22_pp0_stage21_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state23_pp0_stage22_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state24_pp0_stage23_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state25_pp0_stage24_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state26_pp0_stage25_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state26_pp0_stage25_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state27_pp0_stage26_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state27_pp0_stage26_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state28_pp0_stage27_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state28_pp0_stage27_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state29_pp0_stage28_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state29_pp0_stage28_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage29_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state30_pp0_stage29_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state31_pp0_stage30_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state31_pp0_stage30_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state32_pp0_stage31_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state32_pp0_stage31_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state33_pp0_stage32_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state33_pp0_stage32_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state34_pp0_stage33_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state34_pp0_stage33_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state35_pp0_stage34_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state35_pp0_stage34_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state36_pp0_stage35_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state36_pp0_stage35_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state37_pp0_stage36_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state37_pp0_stage36_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state38_pp0_stage37_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state38_pp0_stage37_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state39_pp0_stage38_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state39_pp0_stage38_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state40_pp0_stage39_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state40_pp0_stage39_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state41_pp0_stage0_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state41_pp0_stage0_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state42_pp0_stage1_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state42_pp0_stage1_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state43_pp0_stage2_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state43_pp0_stage2_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state44_pp0_stage3_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state44_pp0_stage3_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state45_pp0_stage4_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state45_pp0_stage4_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state46_pp0_stage5_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state46_pp0_stage5_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_block_state47_pp0_stage6_iter1_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state47_pp0_stage6_iter1 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state48_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage16_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage17_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage18_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage19_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage20_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage21_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage22_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage23_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage24_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage25_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage26_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage27_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage28_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage29_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage30_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage31_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage32_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage33_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage34_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage35_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage36_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage37_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage38_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage39_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage7_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state8_pp0_stage7_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;

        ap_block_state90_pp0_stage9_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage10_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage11_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage12_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage13_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp0_stage14_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage15_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage16_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage17_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage18_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_mat_RVALID)
    begin
                ap_block_state9_pp0_stage8_iter0 <= (m_axi_mat_RVALID = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_fu_63_p2;

    grp_fu_54_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage32_11001, ap_block_pp0_stage36_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage30_11001, ap_block_pp0_stage34_11001, ap_block_pp0_stage38_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage37_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage33_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage29_11001, ap_block_pp0_stage35_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_54_ce <= ap_const_logic_1;
        else 
            grp_fu_54_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_54_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, reg_98, reg_109, reg_114, reg_119)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)))) then 
            grp_fu_54_p0 <= reg_119;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage34) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)))) then 
            grp_fu_54_p0 <= reg_114;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)))) then 
            grp_fu_54_p0 <= reg_109;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_54_p0 <= reg_98;
        else 
            grp_fu_54_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_54_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, reg_98, reg_104, tmp_2_reg_141, tmp_4_reg_146, tmp_6_reg_151, tmp_7_reg_156, tmp_8_reg_161, tmp_9_reg_166, tmp_s_reg_171, tmp_10_reg_176, tmp_11_reg_181, tmp_12_reg_186_pp0_iter1_reg, tmp_13_reg_191_pp0_iter2_reg, tmp_14_reg_196_pp0_iter2_reg, tmp_15_reg_201_pp0_iter2_reg, tmp_16_reg_211_pp0_iter2_reg, tmp_17_reg_216_pp0_iter2_reg, tmp_18_reg_221_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then 
            grp_fu_54_p1 <= tmp_18_reg_221_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            grp_fu_54_p1 <= tmp_17_reg_216_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            grp_fu_54_p1 <= tmp_16_reg_211_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_54_p1 <= tmp_15_reg_201_pp0_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_54_p1 <= tmp_14_reg_196_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_54_p1 <= tmp_13_reg_191_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_54_p1 <= tmp_12_reg_186_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage34) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34))) then 
            grp_fu_54_p1 <= tmp_11_reg_181;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then 
            grp_fu_54_p1 <= tmp_10_reg_176;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            grp_fu_54_p1 <= tmp_s_reg_171;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_54_p1 <= tmp_9_reg_166;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_54_p1 <= tmp_8_reg_161;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            grp_fu_54_p1 <= tmp_7_reg_156;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_54_p1 <= tmp_6_reg_151;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33))) then 
            grp_fu_54_p1 <= tmp_4_reg_146;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
            grp_fu_54_p1 <= reg_98;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_54_p1 <= tmp_2_reg_141;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)))) then 
            grp_fu_54_p1 <= reg_104;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_54_p1 <= ap_const_lv32_0;
        else 
            grp_fu_54_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_59_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage32_11001, ap_block_pp0_stage36_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage30_11001, ap_block_pp0_stage34_11001, ap_block_pp0_stage38_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage37_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage33_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage29_11001, ap_block_pp0_stage35_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_59_ce <= ap_const_logic_1;
        else 
            grp_fu_59_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_59_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, reg_68, reg_74, reg_80, reg_86, reg_92, mat_addr_read_38_reg_206)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_59_p0 <= mat_addr_read_38_reg_206;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_59_p0 <= reg_86;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_59_p0 <= reg_74;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage37) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_59_p0 <= reg_92;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_59_p0 <= reg_80;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_59_p0 <= reg_68;
        else 
            grp_fu_59_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_59_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, reg_68, reg_74, reg_80, reg_86, reg_92)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_59_p1 <= reg_92;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_59_p1 <= reg_80;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage37) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_59_p1 <= reg_68;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_59_p1 <= reg_86;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_59_p1 <= reg_74;
        else 
            grp_fu_59_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_63_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_11001, ap_block_pp0_stage36_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage38_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage37_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage35_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_63_ce <= ap_const_logic_1;
        else 
            grp_fu_63_ce <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_mat_ARADDR <= zext_ln55_fu_124_p1(32 - 1 downto 0);
    m_axi_mat_ARBURST <= ap_const_lv2_0;
    m_axi_mat_ARCACHE <= ap_const_lv4_0;
    m_axi_mat_ARID <= ap_const_lv1_0;
    m_axi_mat_ARLEN <= ap_const_lv32_28;
    m_axi_mat_ARLOCK <= ap_const_lv2_0;
    m_axi_mat_ARPROT <= ap_const_lv3_0;
    m_axi_mat_ARQOS <= ap_const_lv4_0;
    m_axi_mat_ARREGION <= ap_const_lv4_0;
    m_axi_mat_ARSIZE <= ap_const_lv3_0;
    m_axi_mat_ARUSER <= ap_const_lv1_0;

    m_axi_mat_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_mat_ARVALID <= ap_const_logic_1;
        else 
            m_axi_mat_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_mat_AWADDR <= ap_const_lv32_0;
    m_axi_mat_AWBURST <= ap_const_lv2_0;
    m_axi_mat_AWCACHE <= ap_const_lv4_0;
    m_axi_mat_AWID <= ap_const_lv1_0;
    m_axi_mat_AWLEN <= ap_const_lv32_0;
    m_axi_mat_AWLOCK <= ap_const_lv2_0;
    m_axi_mat_AWPROT <= ap_const_lv3_0;
    m_axi_mat_AWQOS <= ap_const_lv4_0;
    m_axi_mat_AWREGION <= ap_const_lv4_0;
    m_axi_mat_AWSIZE <= ap_const_lv3_0;
    m_axi_mat_AWUSER <= ap_const_lv1_0;
    m_axi_mat_AWVALID <= ap_const_logic_0;
    m_axi_mat_BREADY <= ap_const_logic_0;

    m_axi_mat_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage7_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage32_11001, ap_block_pp0_stage36_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage30_11001, ap_block_pp0_stage34_11001, ap_block_pp0_stage38_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage37_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage33_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage29_11001, ap_block_pp0_stage35_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            m_axi_mat_RREADY <= ap_const_logic_1;
        else 
            m_axi_mat_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_mat_WDATA <= ap_const_lv32_0;
    m_axi_mat_WID <= ap_const_lv1_0;
    m_axi_mat_WLAST <= ap_const_logic_0;
    m_axi_mat_WSTRB <= ap_const_lv4_0;
    m_axi_mat_WUSER <= ap_const_lv1_0;
    m_axi_mat_WVALID <= ap_const_logic_0;

    mat_blk_n_AR_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, m_axi_mat_ARREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mat_blk_n_AR <= m_axi_mat_ARREADY;
        else 
            mat_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    mat_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage39, m_axi_mat_RVALID, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            mat_blk_n_R <= m_axi_mat_RVALID;
        else 
            mat_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    zext_ln55_fu_124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mat_offset),64));
end behav;
