// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module moyenne (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mat_AWVALID,
        m_axi_mat_AWREADY,
        m_axi_mat_AWADDR,
        m_axi_mat_AWID,
        m_axi_mat_AWLEN,
        m_axi_mat_AWSIZE,
        m_axi_mat_AWBURST,
        m_axi_mat_AWLOCK,
        m_axi_mat_AWCACHE,
        m_axi_mat_AWPROT,
        m_axi_mat_AWQOS,
        m_axi_mat_AWREGION,
        m_axi_mat_AWUSER,
        m_axi_mat_WVALID,
        m_axi_mat_WREADY,
        m_axi_mat_WDATA,
        m_axi_mat_WSTRB,
        m_axi_mat_WLAST,
        m_axi_mat_WID,
        m_axi_mat_WUSER,
        m_axi_mat_ARVALID,
        m_axi_mat_ARREADY,
        m_axi_mat_ARADDR,
        m_axi_mat_ARID,
        m_axi_mat_ARLEN,
        m_axi_mat_ARSIZE,
        m_axi_mat_ARBURST,
        m_axi_mat_ARLOCK,
        m_axi_mat_ARCACHE,
        m_axi_mat_ARPROT,
        m_axi_mat_ARQOS,
        m_axi_mat_ARREGION,
        m_axi_mat_ARUSER,
        m_axi_mat_RVALID,
        m_axi_mat_RREADY,
        m_axi_mat_RDATA,
        m_axi_mat_RLAST,
        m_axi_mat_RID,
        m_axi_mat_RUSER,
        m_axi_mat_RRESP,
        m_axi_mat_BVALID,
        m_axi_mat_BREADY,
        m_axi_mat_BRESP,
        m_axi_mat_BID,
        m_axi_mat_BUSER,
        ap_ce,
        mat_offset,
        col,
        ap_return,
        mat_blk_n_AR,
        mat_blk_n_R
);

parameter    ap_ST_fsm_pp0_stage0 = 20'd1;
parameter    ap_ST_fsm_pp0_stage1 = 20'd2;
parameter    ap_ST_fsm_pp0_stage2 = 20'd4;
parameter    ap_ST_fsm_pp0_stage3 = 20'd8;
parameter    ap_ST_fsm_pp0_stage4 = 20'd16;
parameter    ap_ST_fsm_pp0_stage5 = 20'd32;
parameter    ap_ST_fsm_pp0_stage6 = 20'd64;
parameter    ap_ST_fsm_pp0_stage7 = 20'd128;
parameter    ap_ST_fsm_pp0_stage8 = 20'd256;
parameter    ap_ST_fsm_pp0_stage9 = 20'd512;
parameter    ap_ST_fsm_pp0_stage10 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 20'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mat_AWVALID;
input   m_axi_mat_AWREADY;
output  [31:0] m_axi_mat_AWADDR;
output  [0:0] m_axi_mat_AWID;
output  [31:0] m_axi_mat_AWLEN;
output  [2:0] m_axi_mat_AWSIZE;
output  [1:0] m_axi_mat_AWBURST;
output  [1:0] m_axi_mat_AWLOCK;
output  [3:0] m_axi_mat_AWCACHE;
output  [2:0] m_axi_mat_AWPROT;
output  [3:0] m_axi_mat_AWQOS;
output  [3:0] m_axi_mat_AWREGION;
output  [0:0] m_axi_mat_AWUSER;
output   m_axi_mat_WVALID;
input   m_axi_mat_WREADY;
output  [31:0] m_axi_mat_WDATA;
output  [3:0] m_axi_mat_WSTRB;
output   m_axi_mat_WLAST;
output  [0:0] m_axi_mat_WID;
output  [0:0] m_axi_mat_WUSER;
output   m_axi_mat_ARVALID;
input   m_axi_mat_ARREADY;
output  [31:0] m_axi_mat_ARADDR;
output  [0:0] m_axi_mat_ARID;
output  [31:0] m_axi_mat_ARLEN;
output  [2:0] m_axi_mat_ARSIZE;
output  [1:0] m_axi_mat_ARBURST;
output  [1:0] m_axi_mat_ARLOCK;
output  [3:0] m_axi_mat_ARCACHE;
output  [2:0] m_axi_mat_ARPROT;
output  [3:0] m_axi_mat_ARQOS;
output  [3:0] m_axi_mat_ARREGION;
output  [0:0] m_axi_mat_ARUSER;
input   m_axi_mat_RVALID;
output   m_axi_mat_RREADY;
input  [31:0] m_axi_mat_RDATA;
input   m_axi_mat_RLAST;
input  [0:0] m_axi_mat_RID;
input  [0:0] m_axi_mat_RUSER;
input  [1:0] m_axi_mat_RRESP;
input   m_axi_mat_BVALID;
output   m_axi_mat_BREADY;
input  [1:0] m_axi_mat_BRESP;
input  [0:0] m_axi_mat_BID;
input  [0:0] m_axi_mat_BUSER;
input   ap_ce;
input  [29:0] mat_offset;
input  [0:0] col;
output  [31:0] ap_return;
output   mat_blk_n_AR;
output   mat_blk_n_R;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_mat_ARVALID;
reg[31:0] m_axi_mat_ARADDR;
reg m_axi_mat_RREADY;
reg mat_blk_n_AR;
reg mat_blk_n_R;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage19;
reg    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state40_pp0_stage19_iter1;
wire    ap_block_state60_pp0_stage19_iter2;
wire    ap_block_state80_pp0_stage19_iter3;
wire    ap_block_state100_pp0_stage19_iter4;
wire    ap_block_state120_pp0_stage19_iter5;
reg    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] reg_342;
reg    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state34_pp0_stage13_iter1;
wire    ap_block_state54_pp0_stage13_iter2;
wire    ap_block_state74_pp0_stage13_iter3;
wire    ap_block_state94_pp0_stage13_iter4;
wire    ap_block_state114_pp0_stage13_iter5;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state39_pp0_stage18_iter1;
wire    ap_block_state59_pp0_stage18_iter2;
wire    ap_block_state79_pp0_stage18_iter3;
wire    ap_block_state99_pp0_stage18_iter4;
wire    ap_block_state119_pp0_stage18_iter5;
reg    ap_block_pp0_stage18_11001;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state24_pp0_stage3_iter1;
wire    ap_block_state44_pp0_stage3_iter2;
wire    ap_block_state64_pp0_stage3_iter3;
wire    ap_block_state84_pp0_stage3_iter4;
wire    ap_block_state104_pp0_stage3_iter5;
wire    ap_block_state124_pp0_stage3_iter6;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] reg_347;
reg    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state29_pp0_stage8_iter1;
wire    ap_block_state49_pp0_stage8_iter2;
wire    ap_block_state69_pp0_stage8_iter3;
wire    ap_block_state89_pp0_stage8_iter4;
wire    ap_block_state109_pp0_stage8_iter5;
wire    ap_block_state129_pp0_stage8_iter6;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state35_pp0_stage14_iter1;
wire    ap_block_state55_pp0_stage14_iter2;
wire    ap_block_state75_pp0_stage14_iter3;
wire    ap_block_state95_pp0_stage14_iter4;
wire    ap_block_state115_pp0_stage14_iter5;
reg    ap_block_pp0_stage14_11001;
reg   [31:0] reg_352;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state25_pp0_stage4_iter1;
wire    ap_block_state45_pp0_stage4_iter2;
wire    ap_block_state65_pp0_stage4_iter3;
wire    ap_block_state85_pp0_stage4_iter4;
wire    ap_block_state105_pp0_stage4_iter5;
wire    ap_block_state125_pp0_stage4_iter6;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state30_pp0_stage9_iter1;
wire    ap_block_state50_pp0_stage9_iter2;
wire    ap_block_state70_pp0_stage9_iter3;
wire    ap_block_state90_pp0_stage9_iter4;
wire    ap_block_state110_pp0_stage9_iter5;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state36_pp0_stage15_iter1;
wire    ap_block_state56_pp0_stage15_iter2;
wire    ap_block_state76_pp0_stage15_iter3;
wire    ap_block_state96_pp0_stage15_iter4;
wire    ap_block_state116_pp0_stage15_iter5;
reg    ap_block_pp0_stage15_11001;
reg   [31:0] reg_357;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state21_pp0_stage0_iter1;
wire    ap_block_state41_pp0_stage0_iter2;
wire    ap_block_state61_pp0_stage0_iter3;
wire    ap_block_state81_pp0_stage0_iter4;
wire    ap_block_state101_pp0_stage0_iter5;
wire    ap_block_state121_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state26_pp0_stage5_iter1;
wire    ap_block_state46_pp0_stage5_iter2;
wire    ap_block_state66_pp0_stage5_iter3;
wire    ap_block_state86_pp0_stage5_iter4;
wire    ap_block_state106_pp0_stage5_iter5;
wire    ap_block_state126_pp0_stage5_iter6;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state31_pp0_stage10_iter1;
wire    ap_block_state51_pp0_stage10_iter2;
wire    ap_block_state71_pp0_stage10_iter3;
wire    ap_block_state91_pp0_stage10_iter4;
wire    ap_block_state111_pp0_stage10_iter5;
reg    ap_block_pp0_stage10_11001;
reg   [31:0] reg_362;
reg    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state37_pp0_stage16_iter1;
wire    ap_block_state57_pp0_stage16_iter2;
wire    ap_block_state77_pp0_stage16_iter3;
wire    ap_block_state97_pp0_stage16_iter4;
wire    ap_block_state117_pp0_stage16_iter5;
reg    ap_block_pp0_stage16_11001;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state22_pp0_stage1_iter1;
wire    ap_block_state42_pp0_stage1_iter2;
wire    ap_block_state62_pp0_stage1_iter3;
wire    ap_block_state82_pp0_stage1_iter4;
wire    ap_block_state102_pp0_stage1_iter5;
wire    ap_block_state122_pp0_stage1_iter6;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state27_pp0_stage6_iter1;
wire    ap_block_state47_pp0_stage6_iter2;
wire    ap_block_state67_pp0_stage6_iter3;
wire    ap_block_state87_pp0_stage6_iter4;
wire    ap_block_state107_pp0_stage6_iter5;
wire    ap_block_state127_pp0_stage6_iter6;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] reg_367;
reg    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state32_pp0_stage11_iter1;
wire    ap_block_state52_pp0_stage11_iter2;
wire    ap_block_state72_pp0_stage11_iter3;
wire    ap_block_state92_pp0_stage11_iter4;
wire    ap_block_state112_pp0_stage11_iter5;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state38_pp0_stage17_iter1;
wire    ap_block_state58_pp0_stage17_iter2;
wire    ap_block_state78_pp0_stage17_iter3;
wire    ap_block_state98_pp0_stage17_iter4;
wire    ap_block_state118_pp0_stage17_iter5;
reg    ap_block_pp0_stage17_11001;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state23_pp0_stage2_iter1;
wire    ap_block_state43_pp0_stage2_iter2;
wire    ap_block_state63_pp0_stage2_iter3;
wire    ap_block_state83_pp0_stage2_iter4;
wire    ap_block_state103_pp0_stage2_iter5;
wire    ap_block_state123_pp0_stage2_iter6;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] col_read_reg_742;
reg   [29:0] mat_offset_read_reg_765;
wire   [30:0] add_ln39_fu_380_p2;
reg   [30:0] add_ln39_reg_770;
wire   [63:0] zext_ln39_1_fu_386_p1;
reg   [63:0] zext_ln39_1_reg_775;
reg   [31:0] mat_addr_1_reg_803;
reg   [31:0] mat_addr_2_reg_809;
reg   [31:0] mat_addr_3_reg_815;
reg   [31:0] mat_addr_4_reg_821;
reg   [31:0] mat_addr_5_reg_827;
reg   [31:0] mat_addr_6_reg_833;
reg   [31:0] mat_addr_7_reg_839;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state28_pp0_stage7_iter1;
wire    ap_block_state48_pp0_stage7_iter2;
wire    ap_block_state68_pp0_stage7_iter3;
wire    ap_block_state88_pp0_stage7_iter4;
wire    ap_block_state108_pp0_stage7_iter5;
wire    ap_block_state128_pp0_stage7_iter6;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] mat_addr_8_reg_845;
reg   [31:0] mat_addr_read_reg_851;
reg   [31:0] mat_addr_9_reg_856;
reg   [31:0] mat_addr_1_read_reg_862;
reg   [31:0] mat_addr_10_reg_867;
reg   [31:0] mat_addr_2_read_reg_873;
reg   [31:0] mat_addr_11_reg_878;
reg   [31:0] mat_addr_3_read_reg_884;
reg   [31:0] mat_addr_12_reg_889;
reg    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state33_pp0_stage12_iter1;
wire    ap_block_state53_pp0_stage12_iter2;
wire    ap_block_state73_pp0_stage12_iter3;
wire    ap_block_state93_pp0_stage12_iter4;
wire    ap_block_state113_pp0_stage12_iter5;
reg    ap_block_pp0_stage12_11001;
reg   [31:0] mat_addr_4_read_reg_895;
reg   [31:0] mat_addr_13_reg_900;
reg   [31:0] mat_addr_5_read_reg_906;
reg   [31:0] mat_addr_5_read_reg_906_pp0_iter1_reg;
reg   [31:0] mat_addr_14_reg_911;
reg   [31:0] mat_addr_6_read_reg_917;
reg   [31:0] mat_addr_6_read_reg_917_pp0_iter1_reg;
reg   [31:0] mat_addr_15_reg_922;
reg   [31:0] mat_addr_7_read_reg_928;
reg   [31:0] mat_addr_7_read_reg_928_pp0_iter1_reg;
reg   [31:0] mat_addr_16_reg_933;
reg   [31:0] mat_addr_8_read_reg_939;
reg   [31:0] mat_addr_8_read_reg_939_pp0_iter1_reg;
reg   [31:0] mat_addr_17_reg_944;
reg   [31:0] mat_addr_18_reg_950;
reg   [31:0] mat_addr_19_reg_956;
reg   [31:0] mat_addr_9_read_reg_962;
reg   [31:0] mat_addr_9_read_reg_962_pp0_iter1_reg;
reg   [31:0] mat_addr_10_read_reg_967;
reg   [31:0] mat_addr_10_read_reg_967_pp0_iter1_reg;
reg   [31:0] mat_addr_10_read_reg_967_pp0_iter2_reg;
reg   [31:0] mat_addr_11_read_reg_972;
reg   [31:0] mat_addr_11_read_reg_972_pp0_iter1_reg;
reg   [31:0] mat_addr_11_read_reg_972_pp0_iter2_reg;
reg   [31:0] mat_addr_12_read_reg_977;
reg   [31:0] mat_addr_12_read_reg_977_pp0_iter2_reg;
reg   [31:0] mat_addr_12_read_reg_977_pp0_iter3_reg;
reg   [31:0] mat_addr_13_read_reg_982;
reg   [31:0] mat_addr_13_read_reg_982_pp0_iter2_reg;
reg   [31:0] mat_addr_13_read_reg_982_pp0_iter3_reg;
reg   [31:0] mat_addr_14_read_reg_987;
reg   [31:0] mat_addr_14_read_reg_987_pp0_iter2_reg;
reg   [31:0] mat_addr_14_read_reg_987_pp0_iter3_reg;
reg   [31:0] mat_addr_15_read_reg_992;
reg   [31:0] mat_addr_15_read_reg_992_pp0_iter2_reg;
reg   [31:0] mat_addr_15_read_reg_992_pp0_iter3_reg;
reg   [31:0] mat_addr_15_read_reg_992_pp0_iter4_reg;
reg   [31:0] mat_addr_16_read_reg_997;
reg   [31:0] mat_addr_16_read_reg_997_pp0_iter2_reg;
reg   [31:0] mat_addr_16_read_reg_997_pp0_iter3_reg;
reg   [31:0] mat_addr_16_read_reg_997_pp0_iter4_reg;
reg   [31:0] mat_addr_17_read_reg_1002;
reg   [31:0] mat_addr_17_read_reg_1002_pp0_iter2_reg;
reg   [31:0] mat_addr_17_read_reg_1002_pp0_iter3_reg;
reg   [31:0] mat_addr_17_read_reg_1002_pp0_iter4_reg;
reg   [31:0] mat_addr_18_read_reg_1007;
reg   [31:0] mat_addr_18_read_reg_1007_pp0_iter2_reg;
reg   [31:0] mat_addr_18_read_reg_1007_pp0_iter3_reg;
reg   [31:0] mat_addr_18_read_reg_1007_pp0_iter4_reg;
reg   [31:0] mat_addr_19_read_reg_1012;
reg   [31:0] mat_addr_19_read_reg_1012_pp0_iter2_reg;
reg   [31:0] mat_addr_19_read_reg_1012_pp0_iter3_reg;
reg   [31:0] mat_addr_19_read_reg_1012_pp0_iter4_reg;
reg   [31:0] mat_addr_19_read_reg_1012_pp0_iter5_reg;
reg   [31:0] somme_18_reg_1017;
reg   [31:0] somme_19_reg_1022;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage8_subdone;
wire   [63:0] zext_ln39_3_fu_389_p1;
wire   [63:0] add_ln39_1_fu_406_p2;
wire   [63:0] add_ln39_2_fu_425_p2;
wire   [63:0] add_ln39_3_fu_443_p2;
wire   [63:0] add_ln39_4_fu_461_p2;
wire   [63:0] add_ln39_5_fu_479_p2;
wire   [63:0] add_ln39_6_fu_497_p2;
wire   [63:0] add_ln39_7_fu_515_p2;
wire   [63:0] add_ln39_8_fu_533_p2;
wire   [63:0] add_ln39_9_fu_551_p2;
wire   [63:0] add_ln39_10_fu_569_p2;
wire   [63:0] add_ln39_11_fu_587_p2;
wire   [63:0] add_ln39_12_fu_605_p2;
wire   [63:0] add_ln39_13_fu_623_p2;
wire   [63:0] add_ln39_14_fu_641_p2;
wire   [63:0] add_ln39_15_fu_659_p2;
wire   [63:0] add_ln39_16_fu_677_p2;
wire   [63:0] add_ln39_17_fu_695_p2;
wire   [63:0] add_ln39_18_fu_713_p2;
wire   [63:0] add_ln39_19_fu_731_p2;
reg   [31:0] grp_fu_332_p0;
reg   [31:0] grp_fu_332_p1;
wire   [30:0] zext_ln39_2_fu_376_p1;
wire   [30:0] zext_ln39_fu_372_p1;
wire   [63:0] tmp_fu_399_p3;
wire   [63:0] tmp_8_fu_418_p3;
wire   [63:0] tmp_9_fu_436_p3;
wire   [63:0] tmp_10_fu_454_p3;
wire   [63:0] tmp_11_fu_472_p3;
wire   [63:0] tmp_12_fu_490_p3;
wire   [63:0] tmp_13_fu_508_p3;
wire   [63:0] tmp_14_fu_526_p3;
wire   [63:0] tmp_15_fu_544_p3;
wire   [63:0] tmp_16_fu_562_p3;
wire   [63:0] tmp_17_fu_580_p3;
wire   [63:0] tmp_18_fu_598_p3;
wire   [63:0] tmp_s_fu_616_p3;
wire   [63:0] tmp_19_fu_634_p3;
wire   [63:0] tmp_20_fu_652_p3;
wire   [63:0] tmp_21_fu_670_p3;
wire   [63:0] tmp_22_fu_688_p3;
wire   [63:0] tmp_23_fu_706_p3;
wire   [63:0] tmp_24_fu_724_p3;
reg    grp_fu_332_ce;
wire   [31:0] grp_fu_337_p2;
reg    grp_fu_337_ce;
reg   [19:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to6;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
wire    ap_enable_pp0;
reg    ap_condition_874;
reg    ap_condition_876;
reg    ap_condition_879;
reg    ap_condition_882;
reg    ap_condition_885;
reg    ap_condition_888;
reg    ap_condition_891;
reg    ap_condition_894;
reg    ap_condition_897;
reg    ap_condition_901;
reg    ap_condition_905;
reg    ap_condition_909;
reg    ap_condition_406;
reg    ap_condition_915;
reg    ap_condition_919;
reg    ap_condition_923;
reg    ap_condition_927;
reg    ap_condition_417;
reg    ap_condition_141;
reg    ap_condition_935;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

pearson_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pearson_fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_332_p0),
    .din1(grp_fu_332_p1),
    .ce(grp_fu_332_ce),
    .dout(grp_fu_332_p2)
);

pearson_fdiv_32ns_32ns_32_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pearson_fdiv_32ns_32ns_32_16_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(somme_19_reg_1022),
    .din1(32'd1101004800),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        add_ln39_reg_770 <= add_ln39_fu_380_p2;
        col_read_reg_742 <= col;
        mat_addr_12_read_reg_977 <= m_axi_mat_RDATA;
        mat_addr_12_read_reg_977_pp0_iter2_reg <= mat_addr_12_read_reg_977;
        mat_addr_12_read_reg_977_pp0_iter3_reg <= mat_addr_12_read_reg_977_pp0_iter2_reg;
        mat_offset_read_reg_765 <= mat_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_ce))) begin
        mat_addr_10_read_reg_967 <= m_axi_mat_RDATA;
        mat_addr_10_read_reg_967_pp0_iter1_reg <= mat_addr_10_read_reg_967;
        mat_addr_10_read_reg_967_pp0_iter2_reg <= mat_addr_10_read_reg_967_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce))) begin
        mat_addr_10_reg_867 <= add_ln39_10_fu_569_p2;
        mat_addr_2_read_reg_873 <= m_axi_mat_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        mat_addr_11_read_reg_972 <= m_axi_mat_RDATA;
        mat_addr_11_read_reg_972_pp0_iter1_reg <= mat_addr_11_read_reg_972;
        mat_addr_11_read_reg_972_pp0_iter2_reg <= mat_addr_11_read_reg_972_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce))) begin
        mat_addr_11_reg_878 <= add_ln39_11_fu_587_p2;
        mat_addr_3_read_reg_884 <= m_axi_mat_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce))) begin
        mat_addr_12_reg_889 <= add_ln39_12_fu_605_p2;
        mat_addr_4_read_reg_895 <= m_axi_mat_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        mat_addr_13_read_reg_982 <= m_axi_mat_RDATA;
        mat_addr_13_read_reg_982_pp0_iter2_reg <= mat_addr_13_read_reg_982;
        mat_addr_13_read_reg_982_pp0_iter3_reg <= mat_addr_13_read_reg_982_pp0_iter2_reg;
        mat_addr_1_reg_803 <= add_ln39_1_fu_406_p2;
        zext_ln39_1_reg_775[29 : 0] <= zext_ln39_1_fu_386_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce))) begin
        mat_addr_13_reg_900 <= add_ln39_13_fu_623_p2;
        mat_addr_5_read_reg_906 <= m_axi_mat_RDATA;
        mat_addr_5_read_reg_906_pp0_iter1_reg <= mat_addr_5_read_reg_906;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        mat_addr_14_read_reg_987 <= m_axi_mat_RDATA;
        mat_addr_14_read_reg_987_pp0_iter2_reg <= mat_addr_14_read_reg_987;
        mat_addr_14_read_reg_987_pp0_iter3_reg <= mat_addr_14_read_reg_987_pp0_iter2_reg;
        mat_addr_2_reg_809 <= add_ln39_2_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce))) begin
        mat_addr_14_reg_911 <= add_ln39_14_fu_641_p2;
        mat_addr_6_read_reg_917 <= m_axi_mat_RDATA;
        mat_addr_6_read_reg_917_pp0_iter1_reg <= mat_addr_6_read_reg_917;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce))) begin
        mat_addr_15_read_reg_992 <= m_axi_mat_RDATA;
        mat_addr_15_read_reg_992_pp0_iter2_reg <= mat_addr_15_read_reg_992;
        mat_addr_15_read_reg_992_pp0_iter3_reg <= mat_addr_15_read_reg_992_pp0_iter2_reg;
        mat_addr_15_read_reg_992_pp0_iter4_reg <= mat_addr_15_read_reg_992_pp0_iter3_reg;
        mat_addr_3_reg_815 <= add_ln39_3_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce))) begin
        mat_addr_15_reg_922 <= add_ln39_15_fu_659_p2;
        mat_addr_7_read_reg_928 <= m_axi_mat_RDATA;
        mat_addr_7_read_reg_928_pp0_iter1_reg <= mat_addr_7_read_reg_928;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce))) begin
        mat_addr_16_read_reg_997 <= m_axi_mat_RDATA;
        mat_addr_16_read_reg_997_pp0_iter2_reg <= mat_addr_16_read_reg_997;
        mat_addr_16_read_reg_997_pp0_iter3_reg <= mat_addr_16_read_reg_997_pp0_iter2_reg;
        mat_addr_16_read_reg_997_pp0_iter4_reg <= mat_addr_16_read_reg_997_pp0_iter3_reg;
        mat_addr_4_reg_821 <= add_ln39_4_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_ce))) begin
        mat_addr_16_reg_933 <= add_ln39_16_fu_677_p2;
        mat_addr_8_read_reg_939 <= m_axi_mat_RDATA;
        mat_addr_8_read_reg_939_pp0_iter1_reg <= mat_addr_8_read_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce))) begin
        mat_addr_17_read_reg_1002 <= m_axi_mat_RDATA;
        mat_addr_17_read_reg_1002_pp0_iter2_reg <= mat_addr_17_read_reg_1002;
        mat_addr_17_read_reg_1002_pp0_iter3_reg <= mat_addr_17_read_reg_1002_pp0_iter2_reg;
        mat_addr_17_read_reg_1002_pp0_iter4_reg <= mat_addr_17_read_reg_1002_pp0_iter3_reg;
        mat_addr_5_reg_827 <= add_ln39_5_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_ce))) begin
        mat_addr_17_reg_944 <= add_ln39_17_fu_695_p2;
        mat_addr_18_reg_950 <= add_ln39_18_fu_713_p2;
        mat_addr_19_reg_956 <= add_ln39_19_fu_731_p2;
        mat_addr_9_read_reg_962 <= m_axi_mat_RDATA;
        mat_addr_9_read_reg_962_pp0_iter1_reg <= mat_addr_9_read_reg_962;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce))) begin
        mat_addr_18_read_reg_1007 <= m_axi_mat_RDATA;
        mat_addr_18_read_reg_1007_pp0_iter2_reg <= mat_addr_18_read_reg_1007;
        mat_addr_18_read_reg_1007_pp0_iter3_reg <= mat_addr_18_read_reg_1007_pp0_iter2_reg;
        mat_addr_18_read_reg_1007_pp0_iter4_reg <= mat_addr_18_read_reg_1007_pp0_iter3_reg;
        mat_addr_6_reg_833 <= add_ln39_6_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce))) begin
        mat_addr_19_read_reg_1012 <= m_axi_mat_RDATA;
        mat_addr_19_read_reg_1012_pp0_iter2_reg <= mat_addr_19_read_reg_1012;
        mat_addr_19_read_reg_1012_pp0_iter3_reg <= mat_addr_19_read_reg_1012_pp0_iter2_reg;
        mat_addr_19_read_reg_1012_pp0_iter4_reg <= mat_addr_19_read_reg_1012_pp0_iter3_reg;
        mat_addr_19_read_reg_1012_pp0_iter5_reg <= mat_addr_19_read_reg_1012_pp0_iter4_reg;
        mat_addr_7_reg_839 <= add_ln39_7_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce))) begin
        mat_addr_1_read_reg_862 <= m_axi_mat_RDATA;
        mat_addr_9_reg_856 <= add_ln39_9_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce))) begin
        mat_addr_8_reg_845 <= add_ln39_8_fu_533_p2;
        mat_addr_read_reg_851 <= m_axi_mat_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)))) begin
        reg_342 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce)))) begin
        reg_347 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce)))) begin
        reg_352 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce)))) begin
        reg_357 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        reg_362 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)))) begin
        reg_367 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce))) begin
        somme_18_reg_1017 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce))) begin
        somme_19_reg_1022 <= grp_fu_332_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_332_ce = 1'b1;
    end else begin
        grp_fu_332_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_332_p0 = somme_18_reg_1017;
    end else if ((((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_332_p0 = reg_367;
    end else if ((((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_332_p0 = reg_362;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_332_p0 = reg_357;
    end else if ((((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_332_p0 = reg_352;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_332_p0 = reg_347;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_332_p0 = reg_342;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_332_p0 = mat_addr_read_reg_851;
    end else begin
        grp_fu_332_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_332_p1 = mat_addr_19_read_reg_1012_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_332_p1 = mat_addr_18_read_reg_1007_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_332_p1 = mat_addr_17_read_reg_1002_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_332_p1 = mat_addr_16_read_reg_997_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_332_p1 = mat_addr_15_read_reg_992_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_332_p1 = mat_addr_14_read_reg_987_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_332_p1 = mat_addr_13_read_reg_982_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_332_p1 = mat_addr_12_read_reg_977_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_332_p1 = mat_addr_11_read_reg_972_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_332_p1 = mat_addr_10_read_reg_967_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_332_p1 = mat_addr_9_read_reg_962_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_332_p1 = mat_addr_8_read_reg_939_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_332_p1 = mat_addr_7_read_reg_928_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_332_p1 = mat_addr_6_read_reg_917_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_332_p1 = mat_addr_5_read_reg_906_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_332_p1 = mat_addr_4_read_reg_895;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_332_p1 = mat_addr_3_read_reg_884;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_332_p1 = mat_addr_2_read_reg_873;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_332_p1 = mat_addr_1_read_reg_862;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_332_p1 = 32'd0;
    end else begin
        grp_fu_332_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_935)) begin
            m_axi_mat_ARADDR = mat_addr_19_reg_956;
        end else if ((1'b1 == ap_condition_141)) begin
            m_axi_mat_ARADDR = mat_addr_18_reg_950;
        end else if ((1'b1 == ap_condition_417)) begin
            m_axi_mat_ARADDR = mat_addr_17_reg_944;
        end else if ((1'b1 == ap_condition_927)) begin
            m_axi_mat_ARADDR = mat_addr_16_reg_933;
        end else if ((1'b1 == ap_condition_923)) begin
            m_axi_mat_ARADDR = mat_addr_15_reg_922;
        end else if ((1'b1 == ap_condition_919)) begin
            m_axi_mat_ARADDR = mat_addr_14_reg_911;
        end else if ((1'b1 == ap_condition_915)) begin
            m_axi_mat_ARADDR = mat_addr_13_reg_900;
        end else if ((1'b1 == ap_condition_406)) begin
            m_axi_mat_ARADDR = mat_addr_12_reg_889;
        end else if ((1'b1 == ap_condition_909)) begin
            m_axi_mat_ARADDR = mat_addr_11_reg_878;
        end else if ((1'b1 == ap_condition_905)) begin
            m_axi_mat_ARADDR = mat_addr_10_reg_867;
        end else if ((1'b1 == ap_condition_901)) begin
            m_axi_mat_ARADDR = mat_addr_9_reg_856;
        end else if ((1'b1 == ap_condition_897)) begin
            m_axi_mat_ARADDR = mat_addr_8_reg_845;
        end else if ((1'b1 == ap_condition_894)) begin
            m_axi_mat_ARADDR = mat_addr_7_reg_839;
        end else if ((1'b1 == ap_condition_891)) begin
            m_axi_mat_ARADDR = mat_addr_6_reg_833;
        end else if ((1'b1 == ap_condition_888)) begin
            m_axi_mat_ARADDR = mat_addr_5_reg_827;
        end else if ((1'b1 == ap_condition_885)) begin
            m_axi_mat_ARADDR = mat_addr_4_reg_821;
        end else if ((1'b1 == ap_condition_882)) begin
            m_axi_mat_ARADDR = mat_addr_3_reg_815;
        end else if ((1'b1 == ap_condition_879)) begin
            m_axi_mat_ARADDR = mat_addr_2_reg_809;
        end else if ((1'b1 == ap_condition_876)) begin
            m_axi_mat_ARADDR = mat_addr_1_reg_803;
        end else if ((1'b1 == ap_condition_874)) begin
            m_axi_mat_ARADDR = zext_ln39_3_fu_389_p1;
        end else begin
            m_axi_mat_ARADDR = 'bx;
        end
    end else begin
        m_axi_mat_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        m_axi_mat_ARVALID = 1'b1;
    end else begin
        m_axi_mat_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        m_axi_mat_RREADY = 1'b1;
    end else begin
        m_axi_mat_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mat_blk_n_AR = m_axi_mat_ARREADY;
    end else begin
        mat_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        mat_blk_n_R = m_axi_mat_RVALID;
    end else begin
        mat_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln39_10_fu_569_p2 = (zext_ln39_1_reg_775 + tmp_16_fu_562_p3);

assign add_ln39_11_fu_587_p2 = (zext_ln39_1_reg_775 + tmp_17_fu_580_p3);

assign add_ln39_12_fu_605_p2 = (zext_ln39_1_reg_775 + tmp_18_fu_598_p3);

assign add_ln39_13_fu_623_p2 = (zext_ln39_1_reg_775 + tmp_s_fu_616_p3);

assign add_ln39_14_fu_641_p2 = (zext_ln39_1_reg_775 + tmp_19_fu_634_p3);

assign add_ln39_15_fu_659_p2 = (zext_ln39_1_reg_775 + tmp_20_fu_652_p3);

assign add_ln39_16_fu_677_p2 = (zext_ln39_1_reg_775 + tmp_21_fu_670_p3);

assign add_ln39_17_fu_695_p2 = (zext_ln39_1_reg_775 + tmp_22_fu_688_p3);

assign add_ln39_18_fu_713_p2 = (zext_ln39_1_reg_775 + tmp_23_fu_706_p3);

assign add_ln39_19_fu_731_p2 = (zext_ln39_1_reg_775 + tmp_24_fu_724_p3);

assign add_ln39_1_fu_406_p2 = (zext_ln39_1_fu_386_p1 + tmp_fu_399_p3);

assign add_ln39_2_fu_425_p2 = (zext_ln39_1_reg_775 + tmp_8_fu_418_p3);

assign add_ln39_3_fu_443_p2 = (zext_ln39_1_reg_775 + tmp_9_fu_436_p3);

assign add_ln39_4_fu_461_p2 = (zext_ln39_1_reg_775 + tmp_10_fu_454_p3);

assign add_ln39_5_fu_479_p2 = (zext_ln39_1_reg_775 + tmp_11_fu_472_p3);

assign add_ln39_6_fu_497_p2 = (zext_ln39_1_reg_775 + tmp_12_fu_490_p3);

assign add_ln39_7_fu_515_p2 = (zext_ln39_1_reg_775 + tmp_13_fu_508_p3);

assign add_ln39_8_fu_533_p2 = (zext_ln39_1_reg_775 + tmp_14_fu_526_p3);

assign add_ln39_9_fu_551_p2 = (zext_ln39_1_reg_775 + tmp_15_fu_544_p3);

assign add_ln39_fu_380_p2 = (zext_ln39_2_fu_376_p1 + zext_ln39_fu_372_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((m_axi_mat_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_mat_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((m_axi_mat_RVALID == 1'b0) | (m_axi_mat_ARREADY == 1'b0))));
end

assign ap_block_state100_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (m_axi_mat_RVALID == 1'b0);
end

assign ap_block_state110_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage16_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage17_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage18_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (m_axi_mat_RVALID == 1'b0);
end

assign ap_block_state120_pp0_stage19_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage0_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage1_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage2_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage3_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_pp0_stage4_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state26_pp0_stage5_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state27_pp0_stage6_iter1 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state28_pp0_stage7_iter1 = (m_axi_mat_RVALID == 1'b0);
end

assign ap_block_state29_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = (m_axi_mat_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_141 = ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19_11001));
end

always @ (*) begin
    ap_condition_406 = ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13));
end

always @ (*) begin
    ap_condition_417 = ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18));
end

always @ (*) begin
    ap_condition_874 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_876 = ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_879 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_882 = ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_885 = ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_888 = ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_891 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_894 = ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_897 = ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_901 = ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_905 = ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_909 = ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12));
end

always @ (*) begin
    ap_condition_915 = ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14));
end

always @ (*) begin
    ap_condition_919 = ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15));
end

always @ (*) begin
    ap_condition_923 = ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16));
end

always @ (*) begin
    ap_condition_927 = ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17));
end

always @ (*) begin
    ap_condition_935 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = grp_fu_337_p2;

assign m_axi_mat_ARBURST = 2'd0;

assign m_axi_mat_ARCACHE = 4'd0;

assign m_axi_mat_ARID = 1'd0;

assign m_axi_mat_ARLEN = 32'd1;

assign m_axi_mat_ARLOCK = 2'd0;

assign m_axi_mat_ARPROT = 3'd0;

assign m_axi_mat_ARQOS = 4'd0;

assign m_axi_mat_ARREGION = 4'd0;

assign m_axi_mat_ARSIZE = 3'd0;

assign m_axi_mat_ARUSER = 1'd0;

assign m_axi_mat_AWADDR = 32'd0;

assign m_axi_mat_AWBURST = 2'd0;

assign m_axi_mat_AWCACHE = 4'd0;

assign m_axi_mat_AWID = 1'd0;

assign m_axi_mat_AWLEN = 32'd0;

assign m_axi_mat_AWLOCK = 2'd0;

assign m_axi_mat_AWPROT = 3'd0;

assign m_axi_mat_AWQOS = 4'd0;

assign m_axi_mat_AWREGION = 4'd0;

assign m_axi_mat_AWSIZE = 3'd0;

assign m_axi_mat_AWUSER = 1'd0;

assign m_axi_mat_AWVALID = 1'b0;

assign m_axi_mat_BREADY = 1'b0;

assign m_axi_mat_WDATA = 32'd0;

assign m_axi_mat_WID = 1'd0;

assign m_axi_mat_WLAST = 1'b0;

assign m_axi_mat_WSTRB = 4'd0;

assign m_axi_mat_WUSER = 1'd0;

assign m_axi_mat_WVALID = 1'b0;

assign tmp_10_fu_454_p3 = {{63'd4}, {col_read_reg_742}};

assign tmp_11_fu_472_p3 = {{63'd5}, {col_read_reg_742}};

assign tmp_12_fu_490_p3 = {{63'd6}, {col_read_reg_742}};

assign tmp_13_fu_508_p3 = {{63'd7}, {col_read_reg_742}};

assign tmp_14_fu_526_p3 = {{63'd8}, {col_read_reg_742}};

assign tmp_15_fu_544_p3 = {{63'd9}, {col_read_reg_742}};

assign tmp_16_fu_562_p3 = {{63'd10}, {col_read_reg_742}};

assign tmp_17_fu_580_p3 = {{63'd11}, {col_read_reg_742}};

assign tmp_18_fu_598_p3 = {{63'd12}, {col_read_reg_742}};

assign tmp_19_fu_634_p3 = {{63'd14}, {col_read_reg_742}};

assign tmp_20_fu_652_p3 = {{63'd15}, {col_read_reg_742}};

assign tmp_21_fu_670_p3 = {{63'd16}, {col_read_reg_742}};

assign tmp_22_fu_688_p3 = {{63'd17}, {col_read_reg_742}};

assign tmp_23_fu_706_p3 = {{63'd18}, {col_read_reg_742}};

assign tmp_24_fu_724_p3 = {{63'd19}, {col_read_reg_742}};

assign tmp_8_fu_418_p3 = {{63'd2}, {col_read_reg_742}};

assign tmp_9_fu_436_p3 = {{63'd3}, {col_read_reg_742}};

assign tmp_fu_399_p3 = {{63'd1}, {col_read_reg_742}};

assign tmp_s_fu_616_p3 = {{63'd13}, {col_read_reg_742}};

assign zext_ln39_1_fu_386_p1 = mat_offset_read_reg_765;

assign zext_ln39_2_fu_376_p1 = mat_offset;

assign zext_ln39_3_fu_389_p1 = add_ln39_reg_770;

assign zext_ln39_fu_372_p1 = col;

always @ (posedge ap_clk) begin
    zext_ln39_1_reg_775[63:30] <= 34'b0000000000000000000000000000000000;
end

endmodule //moyenne
