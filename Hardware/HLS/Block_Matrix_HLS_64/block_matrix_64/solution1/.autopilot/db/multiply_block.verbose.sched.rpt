

================================================================
== Vivado HLS Report for 'multiply_block'
================================================================
* Date:           Tue Feb 25 19:21:27 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        block_matrix_64
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  286626|  286626|  286626|  286626|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |                         |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        |        Loop Name        |   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |- multiply_block_label0  |   41024|   41024|       641|          -|          -|     64|    no    |
        | + memcpy_               |     639|     639|        10|          -|          -|     64|    no    |
        |- multiply_block_label1  |   41024|   41024|       641|          -|          -|     64|    no    |
        | + memcpy_               |     639|     639|        10|          -|          -|     64|    no    |
        |- multiply_block_label2  |   41024|   41024|       641|          -|          -|     64|    no    |
        | + memcpy_               |     639|     639|        10|          -|          -|     64|    no    |
        |- i_loop_k_loop_ii_loop  |  131096|  131096|        33|          8|          1|  16384|    yes   |
        |- memcpy_                |     191|     191|         3|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        |- memcpy_                |     511|     511|         8|          -|          -|     64|    no    |
        +-------------------------+--------+--------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 33


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 580
* Pipeline : 1
  Pipeline-0 : II = 8, D = 33, States = { 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 13 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 3 2 
13 --> 14 24 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 14 13 
24 --> 25 35 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 25 24 
35 --> 68 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 35 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 69 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 77 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 85 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 93 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 101 109 
109 --> 110 
110 --> 111 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 109 117 
117 --> 118 
118 --> 119 
119 --> 120 
120 --> 121 
121 --> 122 
122 --> 123 
123 --> 124 
124 --> 117 125 
125 --> 126 
126 --> 127 
127 --> 128 
128 --> 129 
129 --> 130 
130 --> 131 
131 --> 132 
132 --> 125 133 
133 --> 134 
134 --> 135 
135 --> 136 
136 --> 137 
137 --> 138 
138 --> 139 
139 --> 140 
140 --> 133 141 
141 --> 142 
142 --> 143 
143 --> 144 
144 --> 145 
145 --> 146 
146 --> 147 
147 --> 148 
148 --> 141 149 
149 --> 150 
150 --> 151 
151 --> 152 
152 --> 153 
153 --> 154 
154 --> 155 
155 --> 156 
156 --> 149 157 
157 --> 158 
158 --> 159 
159 --> 160 
160 --> 161 
161 --> 162 
162 --> 163 
163 --> 164 
164 --> 157 165 
165 --> 166 
166 --> 167 
167 --> 168 
168 --> 169 
169 --> 170 
170 --> 171 
171 --> 172 
172 --> 165 173 
173 --> 174 
174 --> 175 
175 --> 176 
176 --> 177 
177 --> 178 
178 --> 179 
179 --> 180 
180 --> 173 181 
181 --> 182 
182 --> 183 
183 --> 184 
184 --> 185 
185 --> 186 
186 --> 187 
187 --> 188 
188 --> 181 189 
189 --> 190 
190 --> 191 
191 --> 192 
192 --> 193 
193 --> 194 
194 --> 195 
195 --> 196 
196 --> 189 197 
197 --> 198 
198 --> 199 
199 --> 200 
200 --> 201 
201 --> 202 
202 --> 203 
203 --> 204 
204 --> 197 205 
205 --> 206 
206 --> 207 
207 --> 208 
208 --> 209 
209 --> 210 
210 --> 211 
211 --> 212 
212 --> 205 213 
213 --> 214 
214 --> 215 
215 --> 216 
216 --> 217 
217 --> 218 
218 --> 219 
219 --> 220 
220 --> 213 221 
221 --> 222 
222 --> 223 
223 --> 224 
224 --> 225 
225 --> 226 
226 --> 227 
227 --> 228 
228 --> 221 229 
229 --> 230 
230 --> 231 
231 --> 232 
232 --> 233 
233 --> 234 
234 --> 235 
235 --> 236 
236 --> 229 237 
237 --> 238 
238 --> 239 
239 --> 240 
240 --> 241 
241 --> 242 
242 --> 243 
243 --> 244 
244 --> 237 245 
245 --> 246 
246 --> 247 
247 --> 248 
248 --> 249 
249 --> 250 
250 --> 251 
251 --> 252 
252 --> 245 253 
253 --> 254 
254 --> 255 
255 --> 256 
256 --> 257 
257 --> 258 
258 --> 259 
259 --> 260 
260 --> 253 261 
261 --> 262 
262 --> 263 
263 --> 264 
264 --> 265 
265 --> 266 
266 --> 267 
267 --> 268 
268 --> 261 269 
269 --> 270 
270 --> 271 
271 --> 272 
272 --> 273 
273 --> 274 
274 --> 275 
275 --> 276 
276 --> 269 277 
277 --> 278 
278 --> 279 
279 --> 280 
280 --> 281 
281 --> 282 
282 --> 283 
283 --> 284 
284 --> 277 285 
285 --> 286 
286 --> 287 
287 --> 288 
288 --> 289 
289 --> 290 
290 --> 291 
291 --> 292 
292 --> 285 293 
293 --> 294 
294 --> 295 
295 --> 296 
296 --> 297 
297 --> 298 
298 --> 299 
299 --> 300 
300 --> 293 301 
301 --> 302 
302 --> 303 
303 --> 304 
304 --> 305 
305 --> 306 
306 --> 307 
307 --> 308 
308 --> 301 309 
309 --> 310 
310 --> 311 
311 --> 312 
312 --> 313 
313 --> 314 
314 --> 315 
315 --> 316 
316 --> 309 317 
317 --> 318 
318 --> 319 
319 --> 320 
320 --> 321 
321 --> 322 
322 --> 323 
323 --> 324 
324 --> 317 325 
325 --> 326 
326 --> 327 
327 --> 328 
328 --> 329 
329 --> 330 
330 --> 331 
331 --> 332 
332 --> 325 333 
333 --> 334 
334 --> 335 
335 --> 336 
336 --> 337 
337 --> 338 
338 --> 339 
339 --> 340 
340 --> 333 341 
341 --> 342 
342 --> 343 
343 --> 344 
344 --> 345 
345 --> 346 
346 --> 347 
347 --> 348 
348 --> 341 349 
349 --> 350 
350 --> 351 
351 --> 352 
352 --> 353 
353 --> 354 
354 --> 355 
355 --> 356 
356 --> 349 357 
357 --> 358 
358 --> 359 
359 --> 360 
360 --> 361 
361 --> 362 
362 --> 363 
363 --> 364 
364 --> 357 365 
365 --> 366 
366 --> 367 
367 --> 368 
368 --> 369 
369 --> 370 
370 --> 371 
371 --> 372 
372 --> 365 373 
373 --> 374 
374 --> 375 
375 --> 376 
376 --> 377 
377 --> 378 
378 --> 379 
379 --> 380 
380 --> 373 381 
381 --> 382 
382 --> 383 
383 --> 384 
384 --> 385 
385 --> 386 
386 --> 387 
387 --> 388 
388 --> 381 389 
389 --> 390 
390 --> 391 
391 --> 392 
392 --> 393 
393 --> 394 
394 --> 395 
395 --> 396 
396 --> 389 397 
397 --> 398 
398 --> 399 
399 --> 400 
400 --> 401 
401 --> 402 
402 --> 403 
403 --> 404 
404 --> 397 405 
405 --> 406 
406 --> 407 
407 --> 408 
408 --> 409 
409 --> 410 
410 --> 411 
411 --> 412 
412 --> 405 413 
413 --> 414 
414 --> 415 
415 --> 416 
416 --> 417 
417 --> 418 
418 --> 419 
419 --> 420 
420 --> 413 421 
421 --> 422 
422 --> 423 
423 --> 424 
424 --> 425 
425 --> 426 
426 --> 427 
427 --> 428 
428 --> 421 429 
429 --> 430 
430 --> 431 
431 --> 432 
432 --> 433 
433 --> 434 
434 --> 435 
435 --> 436 
436 --> 429 437 
437 --> 438 
438 --> 439 
439 --> 440 
440 --> 441 
441 --> 442 
442 --> 443 
443 --> 444 
444 --> 437 445 
445 --> 446 
446 --> 447 
447 --> 448 
448 --> 449 
449 --> 450 
450 --> 451 
451 --> 452 
452 --> 445 453 
453 --> 454 
454 --> 455 
455 --> 456 
456 --> 457 
457 --> 458 
458 --> 459 
459 --> 460 
460 --> 453 461 
461 --> 462 
462 --> 463 
463 --> 464 
464 --> 465 
465 --> 466 
466 --> 467 
467 --> 468 
468 --> 461 469 
469 --> 470 
470 --> 471 
471 --> 472 
472 --> 473 
473 --> 474 
474 --> 475 
475 --> 476 
476 --> 469 477 
477 --> 478 
478 --> 479 
479 --> 480 
480 --> 481 
481 --> 482 
482 --> 483 
483 --> 484 
484 --> 477 485 
485 --> 486 
486 --> 487 
487 --> 488 
488 --> 489 
489 --> 490 
490 --> 491 
491 --> 492 
492 --> 485 493 
493 --> 494 
494 --> 495 
495 --> 496 
496 --> 497 
497 --> 498 
498 --> 499 
499 --> 500 
500 --> 493 501 
501 --> 502 
502 --> 503 
503 --> 504 
504 --> 505 
505 --> 506 
506 --> 507 
507 --> 508 
508 --> 501 509 
509 --> 510 
510 --> 511 
511 --> 512 
512 --> 513 
513 --> 514 
514 --> 515 
515 --> 516 
516 --> 509 517 
517 --> 518 
518 --> 519 
519 --> 520 
520 --> 521 
521 --> 522 
522 --> 523 
523 --> 524 
524 --> 517 525 
525 --> 526 
526 --> 527 
527 --> 528 
528 --> 529 
529 --> 530 
530 --> 531 
531 --> 532 
532 --> 525 533 
533 --> 534 
534 --> 535 
535 --> 536 
536 --> 537 
537 --> 538 
538 --> 539 
539 --> 540 
540 --> 533 541 
541 --> 542 
542 --> 543 
543 --> 544 
544 --> 545 
545 --> 546 
546 --> 547 
547 --> 548 
548 --> 541 549 
549 --> 550 
550 --> 551 
551 --> 552 
552 --> 553 
553 --> 554 
554 --> 555 
555 --> 556 
556 --> 549 557 
557 --> 558 
558 --> 559 
559 --> 560 
560 --> 561 
561 --> 562 
562 --> 563 
563 --> 564 
564 --> 557 565 
565 --> 566 
566 --> 567 
567 --> 568 
568 --> 569 
569 --> 570 
570 --> 571 
571 --> 572 
572 --> 565 573 
573 --> 574 
574 --> 575 
575 --> 576 
576 --> 577 
577 --> 578 
578 --> 579 
579 --> 580 
580 --> 573 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 581 [1/1] (1.00ns)   --->   "%out_mC_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_mC)"   --->   Operation 581 'read' 'out_mC_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 582 [1/1] (1.00ns)   --->   "%in_mB_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_mB)"   --->   Operation 582 'read' 'in_mB_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 583 [1/1] (1.00ns)   --->   "%in_mA_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_mA)"   --->   Operation 583 'read' 'in_mA_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 584 [1/1] (0.00ns)   --->   "%out_mC5 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %out_mC_read, i32 2, i32 31)"   --->   Operation 584 'partselect' 'out_mC5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 585 [1/1] (0.00ns)   --->   "%empty = zext i30 %out_mC5 to i64"   --->   Operation 585 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 586 [1/1] (0.00ns)   --->   "%p_cast162 = zext i30 %out_mC5 to i31"   --->   Operation 586 'zext' 'p_cast162' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 587 [1/1] (0.00ns)   --->   "%tmp_3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %in_mB_read, i32 2, i32 31)"   --->   Operation 587 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 588 [1/1] (0.00ns)   --->   "%p_cast161 = zext i30 %tmp_3 to i31"   --->   Operation 588 'zext' 'p_cast161' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 589 [1/1] (0.00ns)   --->   "%tmp_5 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %in_mA_read, i32 2, i32 31)"   --->   Operation 589 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 590 [1/1] (0.00ns)   --->   "%p_cast = zext i30 %tmp_5 to i31"   --->   Operation 590 'zext' 'p_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 591 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %OUTPUT_r), !map !12"   --->   Operation 591 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 592 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %INPUT_r), !map !18"   --->   Operation 592 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 593 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @multiply_block_str) nounwind"   --->   Operation 593 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 594 [1/1] (0.00ns)   --->   "%mA = alloca [4096 x float], align 4" [src/BMM_fonctions.c:17]   --->   Operation 594 'alloca' 'mA' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 595 [1/1] (0.00ns)   --->   "%mB = alloca [4096 x float], align 4" [src/BMM_fonctions.c:18]   --->   Operation 595 'alloca' 'mB' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 596 [1/1] (0.00ns)   --->   "%mC = alloca [4096 x float], align 4" [src/BMM_fonctions.c:19]   --->   Operation 596 'alloca' 'mC' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_1 : Operation 597 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [src/BMM_fonctions.c:10]   --->   Operation 597 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 598 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %INPUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:11]   --->   Operation 598 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 599 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_mA, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:11]   --->   Operation 599 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 600 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_mB, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:12]   --->   Operation 600 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 601 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %OUTPUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [7 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:13]   --->   Operation 601 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 602 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_mC, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:13]   --->   Operation 602 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 603 [1/1] (1.76ns)   --->   "br label %1" [src/BMM_fonctions.c:20]   --->   Operation 603 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.46>
ST_2 : Operation 604 [1/1] (0.00ns)   --->   "%i_0 = phi i7 [ 0, %0 ], [ %i, %multiply_block_label0_end ]"   --->   Operation 604 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 605 [1/1] (1.48ns)   --->   "%icmp_ln20 = icmp eq i7 %i_0, -64" [src/BMM_fonctions.c:20]   --->   Operation 605 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 606 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 606 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 607 [1/1] (1.87ns)   --->   "%i = add i7 %i_0, 1" [src/BMM_fonctions.c:20]   --->   Operation 607 'add' 'i' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 608 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %.preheader3.preheader, label %multiply_block_label0_begin" [src/BMM_fonctions.c:20]   --->   Operation 608 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 609 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str7) nounwind" [src/BMM_fonctions.c:21]   --->   Operation 609 'specloopname' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 610 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([22 x i8]* @p_str7) nounwind" [src/BMM_fonctions.c:21]   --->   Operation 610 'specregionbegin' 'tmp' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 611 [1/1] (1.76ns)   --->   "br label %meminst"   --->   Operation 611 'br' <Predicate = (!icmp_ln20)> <Delay = 1.76>
ST_2 : Operation 612 [1/1] (1.76ns)   --->   "br label %.preheader3" [src/BMM_fonctions.c:22]   --->   Operation 612 'br' <Predicate = (icmp_ln20)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.49>
ST_3 : Operation 613 [1/1] (0.00ns)   --->   "%empty_6 = phi i6 [ 0, %multiply_block_label0_begin ], [ %add_ln21, %meminst ]" [src/BMM_fonctions.c:21]   --->   Operation 613 'phi' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 614 [1/1] (1.82ns)   --->   "%add_ln21 = add i6 %empty_6, 1" [src/BMM_fonctions.c:21]   --->   Operation 614 'add' 'add_ln21' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 615 [1/1] (0.00ns)   --->   "%tmp_89 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %i_0, i6 %empty_6)" [src/BMM_fonctions.c:21]   --->   Operation 615 'bitconcatenate' 'tmp_89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 616 [1/1] (0.00ns)   --->   "%zext_ln21_1 = zext i13 %tmp_89 to i31" [src/BMM_fonctions.c:21]   --->   Operation 616 'zext' 'zext_ln21_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 617 [1/1] (2.49ns)   --->   "%add_ln21_1 = add i31 %zext_ln21_1, %p_cast" [src/BMM_fonctions.c:21]   --->   Operation 617 'add' 'add_ln21_1' <Predicate = true> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 618 [1/1] (1.42ns)   --->   "%icmp_ln21 = icmp eq i6 %empty_6, -1" [src/BMM_fonctions.c:21]   --->   Operation 618 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 619 [1/1] (0.00ns)   --->   "%zext_ln21_2 = zext i31 %add_ln21_1 to i64" [src/BMM_fonctions.c:21]   --->   Operation 619 'zext' 'zext_ln21_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 620 [1/1] (0.00ns)   --->   "%INPUT_addr = getelementptr float* %INPUT_r, i64 %zext_ln21_2" [src/BMM_fonctions.c:21]   --->   Operation 620 'getelementptr' 'INPUT_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 621 [7/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 621 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 622 [6/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 622 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 623 [5/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 623 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 624 [4/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 624 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 625 [3/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 625 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 626 [2/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 626 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 627 [1/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 627 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 628 [1/1] (8.75ns)   --->   "%INPUT_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr)" [src/BMM_fonctions.c:21]   --->   Operation 628 'read' 'INPUT_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 629 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i13 %tmp_89 to i64" [src/BMM_fonctions.c:21]   --->   Operation 629 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 630 [1/1] (0.00ns)   --->   "%mA_addr = getelementptr [4096 x float]* %mA, i64 0, i64 %zext_ln21" [src/BMM_fonctions.c:21]   --->   Operation 630 'getelementptr' 'mA_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 631 [1/1] (3.25ns)   --->   "store float %INPUT_addr_read, float* %mA_addr, align 4" [src/BMM_fonctions.c:21]   --->   Operation 631 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_12 : Operation 632 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 632 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 633 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 633 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 634 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %multiply_block_label0_end, label %meminst" [src/BMM_fonctions.c:21]   --->   Operation 634 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 635 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([22 x i8]* @p_str7, i32 %tmp) nounwind" [src/BMM_fonctions.c:21]   --->   Operation 635 'specregionend' 'empty_8' <Predicate = (icmp_ln21)> <Delay = 0.00>
ST_12 : Operation 636 [1/1] (0.00ns)   --->   "br label %1" [src/BMM_fonctions.c:20]   --->   Operation 636 'br' <Predicate = (icmp_ln21)> <Delay = 0.00>

State 13 <SV = 2> <Delay = 2.46>
ST_13 : Operation 637 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_4, %multiply_block_label1_end ], [ 0, %.preheader3.preheader ]"   --->   Operation 637 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 638 [1/1] (1.48ns)   --->   "%icmp_ln22 = icmp eq i7 %i_1, -64" [src/BMM_fonctions.c:22]   --->   Operation 638 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 639 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 639 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 640 [1/1] (1.87ns)   --->   "%i_4 = add i7 %i_1, 1" [src/BMM_fonctions.c:22]   --->   Operation 640 'add' 'i_4' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 641 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %.preheader2.preheader, label %multiply_block_label1_begin" [src/BMM_fonctions.c:22]   --->   Operation 641 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 642 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str8) nounwind" [src/BMM_fonctions.c:23]   --->   Operation 642 'specloopname' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_13 : Operation 643 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([22 x i8]* @p_str8) nounwind" [src/BMM_fonctions.c:23]   --->   Operation 643 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_13 : Operation 644 [1/1] (1.76ns)   --->   "br label %meminst5"   --->   Operation 644 'br' <Predicate = (!icmp_ln22)> <Delay = 1.76>
ST_13 : Operation 645 [1/1] (1.76ns)   --->   "br label %.preheader2" [src/BMM_fonctions.c:24]   --->   Operation 645 'br' <Predicate = (icmp_ln22)> <Delay = 1.76>

State 14 <SV = 3> <Delay = 2.49>
ST_14 : Operation 646 [1/1] (0.00ns)   --->   "%empty_10 = phi i6 [ 0, %multiply_block_label1_begin ], [ %add_ln23, %meminst5 ]" [src/BMM_fonctions.c:23]   --->   Operation 646 'phi' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 647 [1/1] (1.82ns)   --->   "%add_ln23 = add i6 %empty_10, 1" [src/BMM_fonctions.c:23]   --->   Operation 647 'add' 'add_ln23' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 648 [1/1] (0.00ns)   --->   "%tmp_101 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %i_1, i6 %empty_10)" [src/BMM_fonctions.c:23]   --->   Operation 648 'bitconcatenate' 'tmp_101' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 649 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i13 %tmp_101 to i31" [src/BMM_fonctions.c:23]   --->   Operation 649 'zext' 'zext_ln23_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 650 [1/1] (2.49ns)   --->   "%add_ln23_1 = add i31 %zext_ln23_1, %p_cast161" [src/BMM_fonctions.c:23]   --->   Operation 650 'add' 'add_ln23_1' <Predicate = true> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 651 [1/1] (1.42ns)   --->   "%icmp_ln23 = icmp eq i6 %empty_10, -1" [src/BMM_fonctions.c:23]   --->   Operation 651 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 4> <Delay = 8.75>
ST_15 : Operation 652 [1/1] (0.00ns)   --->   "%zext_ln23_2 = zext i31 %add_ln23_1 to i64" [src/BMM_fonctions.c:23]   --->   Operation 652 'zext' 'zext_ln23_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 653 [1/1] (0.00ns)   --->   "%INPUT_addr_1 = getelementptr float* %INPUT_r, i64 %zext_ln23_2" [src/BMM_fonctions.c:23]   --->   Operation 653 'getelementptr' 'INPUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 654 [7/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 654 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 5> <Delay = 8.75>
ST_16 : Operation 655 [6/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 655 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 6> <Delay = 8.75>
ST_17 : Operation 656 [5/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 656 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 7> <Delay = 8.75>
ST_18 : Operation 657 [4/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 657 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 8> <Delay = 8.75>
ST_19 : Operation 658 [3/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 658 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 9> <Delay = 8.75>
ST_20 : Operation 659 [2/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 659 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 10> <Delay = 8.75>
ST_21 : Operation 660 [1/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 660 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 11> <Delay = 8.75>
ST_22 : Operation 661 [1/1] (8.75ns)   --->   "%INPUT_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_1)" [src/BMM_fonctions.c:23]   --->   Operation 661 'read' 'INPUT_addr_1_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 12> <Delay = 3.25>
ST_23 : Operation 662 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i13 %tmp_101 to i64" [src/BMM_fonctions.c:23]   --->   Operation 662 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 663 [1/1] (0.00ns)   --->   "%mB_addr = getelementptr [4096 x float]* %mB, i64 0, i64 %zext_ln23" [src/BMM_fonctions.c:23]   --->   Operation 663 'getelementptr' 'mB_addr' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 664 [1/1] (3.25ns)   --->   "store float %INPUT_addr_1_read, float* %mB_addr, align 4" [src/BMM_fonctions.c:23]   --->   Operation 664 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_23 : Operation 665 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 665 'specloopname' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 666 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 666 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 667 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %multiply_block_label1_end, label %meminst5" [src/BMM_fonctions.c:23]   --->   Operation 667 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 668 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([22 x i8]* @p_str8, i32 %tmp_1) nounwind" [src/BMM_fonctions.c:23]   --->   Operation 668 'specregionend' 'empty_12' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_23 : Operation 669 [1/1] (0.00ns)   --->   "br label %.preheader3" [src/BMM_fonctions.c:22]   --->   Operation 669 'br' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 24 <SV = 3> <Delay = 2.46>
ST_24 : Operation 670 [1/1] (0.00ns)   --->   "%i_2 = phi i7 [ %i_7, %multiply_block_label2_end ], [ 0, %.preheader2.preheader ]"   --->   Operation 670 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 671 [1/1] (1.48ns)   --->   "%icmp_ln24 = icmp eq i7 %i_2, -64" [src/BMM_fonctions.c:24]   --->   Operation 671 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 672 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 672 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 673 [1/1] (1.87ns)   --->   "%i_7 = add i7 %i_2, 1" [src/BMM_fonctions.c:24]   --->   Operation 673 'add' 'i_7' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 674 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %.preheader1.preheader.preheader, label %multiply_block_label2_begin" [src/BMM_fonctions.c:24]   --->   Operation 674 'br' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 675 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str9) nounwind" [src/BMM_fonctions.c:25]   --->   Operation 675 'specloopname' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_24 : Operation 676 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([22 x i8]* @p_str9) nounwind" [src/BMM_fonctions.c:25]   --->   Operation 676 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_24 : Operation 677 [1/1] (1.76ns)   --->   "br label %meminst11"   --->   Operation 677 'br' <Predicate = (!icmp_ln24)> <Delay = 1.76>
ST_24 : Operation 678 [1/1] (1.76ns)   --->   "br label %.preheader1.preheader" [src/BMM_fonctions.c:31]   --->   Operation 678 'br' <Predicate = (icmp_ln24)> <Delay = 1.76>

State 25 <SV = 4> <Delay = 2.49>
ST_25 : Operation 679 [1/1] (0.00ns)   --->   "%empty_14 = phi i6 [ 0, %multiply_block_label2_begin ], [ %add_ln25, %meminst11 ]" [src/BMM_fonctions.c:25]   --->   Operation 679 'phi' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 680 [1/1] (1.82ns)   --->   "%add_ln25 = add i6 %empty_14, 1" [src/BMM_fonctions.c:25]   --->   Operation 680 'add' 'add_ln25' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 681 [1/1] (0.00ns)   --->   "%tmp_102 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %i_2, i6 %empty_14)" [src/BMM_fonctions.c:25]   --->   Operation 681 'bitconcatenate' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 682 [1/1] (0.00ns)   --->   "%zext_ln25_1 = zext i13 %tmp_102 to i31" [src/BMM_fonctions.c:25]   --->   Operation 682 'zext' 'zext_ln25_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 683 [1/1] (2.49ns)   --->   "%add_ln25_1 = add i31 %zext_ln25_1, %p_cast162" [src/BMM_fonctions.c:25]   --->   Operation 683 'add' 'add_ln25_1' <Predicate = true> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 684 [1/1] (1.42ns)   --->   "%icmp_ln25 = icmp eq i6 %empty_14, -1" [src/BMM_fonctions.c:25]   --->   Operation 684 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 5> <Delay = 8.75>
ST_26 : Operation 685 [1/1] (0.00ns)   --->   "%zext_ln25_2 = zext i31 %add_ln25_1 to i64" [src/BMM_fonctions.c:25]   --->   Operation 685 'zext' 'zext_ln25_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 686 [1/1] (0.00ns)   --->   "%OUTPUT_addr = getelementptr float* %OUTPUT_r, i64 %zext_ln25_2" [src/BMM_fonctions.c:25]   --->   Operation 686 'getelementptr' 'OUTPUT_addr' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 687 [7/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 687 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 6> <Delay = 8.75>
ST_27 : Operation 688 [6/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 688 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 7> <Delay = 8.75>
ST_28 : Operation 689 [5/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 689 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 8> <Delay = 8.75>
ST_29 : Operation 690 [4/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 690 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 9> <Delay = 8.75>
ST_30 : Operation 691 [3/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 691 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 10> <Delay = 8.75>
ST_31 : Operation 692 [2/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 692 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 11> <Delay = 8.75>
ST_32 : Operation 693 [1/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 693 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 12> <Delay = 8.75>
ST_33 : Operation 694 [1/1] (8.75ns)   --->   "%OUTPUT_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr)" [src/BMM_fonctions.c:25]   --->   Operation 694 'read' 'OUTPUT_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 13> <Delay = 3.25>
ST_34 : Operation 695 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i13 %tmp_102 to i64" [src/BMM_fonctions.c:25]   --->   Operation 695 'zext' 'zext_ln25' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 696 [1/1] (0.00ns)   --->   "%mC_addr = getelementptr [4096 x float]* %mC, i64 0, i64 %zext_ln25" [src/BMM_fonctions.c:25]   --->   Operation 696 'getelementptr' 'mC_addr' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 697 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_read, float* %mC_addr, align 4" [src/BMM_fonctions.c:25]   --->   Operation 697 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_34 : Operation 698 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 698 'specloopname' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 699 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 699 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 700 [1/1] (0.00ns)   --->   "br i1 %icmp_ln25, label %multiply_block_label2_end, label %meminst11" [src/BMM_fonctions.c:25]   --->   Operation 700 'br' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 701 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([22 x i8]* @p_str9, i32 %tmp_2) nounwind" [src/BMM_fonctions.c:25]   --->   Operation 701 'specregionend' 'empty_16' <Predicate = (icmp_ln25)> <Delay = 0.00>
ST_34 : Operation 702 [1/1] (0.00ns)   --->   "br label %.preheader2" [src/BMM_fonctions.c:24]   --->   Operation 702 'br' <Predicate = (icmp_ln25)> <Delay = 0.00>

State 35 <SV = 4> <Delay = 5.91>
ST_35 : Operation 703 [1/1] (0.00ns)   --->   "%indvar_flatten229 = phi i15 [ %add_ln30, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:30]   --->   Operation 703 'phi' 'indvar_flatten229' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 704 [1/1] (0.00ns)   --->   "%i_3 = phi i7 [ %select_ln30, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:30]   --->   Operation 704 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 705 [1/1] (0.00ns)   --->   "%indvar_flatten113 = phi i12 [ %select_ln31_44, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:31]   --->   Operation 705 'phi' 'indvar_flatten113' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 706 [1/1] (0.00ns)   --->   "%j_0 = phi i7 [ %select_ln31_21, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:31]   --->   Operation 706 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 707 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ %select_ln32_21, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:32]   --->   Operation 707 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 708 [1/1] (0.00ns)   --->   "%k_0 = phi i7 [ %select_ln32_1, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:32]   --->   Operation 708 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 709 [1/1] (0.00ns)   --->   "%ii_0 = phi i3 [ %ii, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]"   --->   Operation 709 'phi' 'ii_0' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 710 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i7 %j_0 to i6" [src/BMM_fonctions.c:31]   --->   Operation 710 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 711 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i7 %j_0 to i13" [src/BMM_fonctions.c:40]   --->   Operation 711 'zext' 'zext_ln40' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 712 [1/1] (0.00ns)   --->   "%zext_ln40_1 = zext i7 %j_0 to i14" [src/BMM_fonctions.c:40]   --->   Operation 712 'zext' 'zext_ln40_1' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 713 [1/1] (0.00ns)   --->   "%or_ln40_3 = or i6 %trunc_ln31, 1" [src/BMM_fonctions.c:40]   --->   Operation 713 'or' 'or_ln40_3' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 714 [1/1] (0.00ns)   --->   "%or_ln40_4 = or i6 %trunc_ln31, 2" [src/BMM_fonctions.c:40]   --->   Operation 714 'or' 'or_ln40_4' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 715 [1/1] (0.00ns)   --->   "%or_ln40_5 = or i6 %trunc_ln31, 3" [src/BMM_fonctions.c:40]   --->   Operation 715 'or' 'or_ln40_5' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 716 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i7 %k_0 to i6" [src/BMM_fonctions.c:32]   --->   Operation 716 'trunc' 'trunc_ln32' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 717 [1/1] (0.00ns)   --->   "%tmp_7 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %k_0, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 717 'bitconcatenate' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 718 [1/1] (0.00ns)   --->   "%zext_ln40_2 = zext i13 %tmp_7 to i14" [src/BMM_fonctions.c:40]   --->   Operation 718 'zext' 'zext_ln40_2' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 719 [1/1] (1.67ns)   --->   "%add_ln40_1 = add i14 %zext_ln40_2, %zext_ln40_1" [src/BMM_fonctions.c:40]   --->   Operation 719 'add' 'add_ln40_1' <Predicate = true> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 720 [1/1] (0.00ns)   --->   "%tmp_74 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %k_0, i6 %or_ln40_3)" [src/BMM_fonctions.c:40]   --->   Operation 720 'bitconcatenate' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 721 [1/1] (0.00ns)   --->   "%tmp_75 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %k_0, i6 %or_ln40_4)" [src/BMM_fonctions.c:40]   --->   Operation 721 'bitconcatenate' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 722 [1/1] (0.00ns)   --->   "%tmp_76 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %k_0, i6 %or_ln40_5)" [src/BMM_fonctions.c:40]   --->   Operation 722 'bitconcatenate' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 723 [1/1] (0.00ns)   --->   "%or_ln40 = or i6 %trunc_ln32, 1" [src/BMM_fonctions.c:40]   --->   Operation 723 'or' 'or_ln40' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 724 [1/1] (0.00ns)   --->   "%tmp_77 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 724 'bitconcatenate' 'tmp_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 725 [1/1] (0.00ns)   --->   "%zext_ln40_3 = zext i12 %tmp_77 to i13" [src/BMM_fonctions.c:40]   --->   Operation 725 'zext' 'zext_ln40_3' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 726 [1/1] (1.54ns)   --->   "%add_ln40_2 = add i13 %zext_ln40_3, %zext_ln40" [src/BMM_fonctions.c:40]   --->   Operation 726 'add' 'add_ln40_2' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 727 [1/1] (0.00ns)   --->   "%tmp_78 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40, i6 %or_ln40_3)" [src/BMM_fonctions.c:40]   --->   Operation 727 'bitconcatenate' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 728 [1/1] (0.00ns)   --->   "%tmp_79 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40, i6 %or_ln40_4)" [src/BMM_fonctions.c:40]   --->   Operation 728 'bitconcatenate' 'tmp_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 729 [1/1] (0.00ns)   --->   "%tmp_80 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40, i6 %or_ln40_5)" [src/BMM_fonctions.c:40]   --->   Operation 729 'bitconcatenate' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 730 [1/1] (0.00ns)   --->   "%or_ln40_1 = or i6 %trunc_ln32, 2" [src/BMM_fonctions.c:40]   --->   Operation 730 'or' 'or_ln40_1' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 731 [1/1] (0.00ns)   --->   "%tmp_81 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_1, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 731 'bitconcatenate' 'tmp_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 732 [1/1] (0.00ns)   --->   "%zext_ln40_4 = zext i12 %tmp_81 to i13" [src/BMM_fonctions.c:40]   --->   Operation 732 'zext' 'zext_ln40_4' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 733 [1/1] (1.54ns)   --->   "%add_ln40_3 = add i13 %zext_ln40_4, %zext_ln40" [src/BMM_fonctions.c:40]   --->   Operation 733 'add' 'add_ln40_3' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 734 [1/1] (0.00ns)   --->   "%tmp_82 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_1, i6 %or_ln40_3)" [src/BMM_fonctions.c:40]   --->   Operation 734 'bitconcatenate' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 735 [1/1] (0.00ns)   --->   "%tmp_83 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_1, i6 %or_ln40_4)" [src/BMM_fonctions.c:40]   --->   Operation 735 'bitconcatenate' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 736 [1/1] (0.00ns)   --->   "%tmp_84 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_1, i6 %or_ln40_5)" [src/BMM_fonctions.c:40]   --->   Operation 736 'bitconcatenate' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 737 [1/1] (0.00ns)   --->   "%or_ln40_2 = or i6 %trunc_ln32, 3" [src/BMM_fonctions.c:40]   --->   Operation 737 'or' 'or_ln40_2' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 738 [1/1] (0.00ns)   --->   "%tmp_85 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_2, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 738 'bitconcatenate' 'tmp_85' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 739 [1/1] (0.00ns)   --->   "%zext_ln40_5 = zext i12 %tmp_85 to i13" [src/BMM_fonctions.c:40]   --->   Operation 739 'zext' 'zext_ln40_5' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 740 [1/1] (1.54ns)   --->   "%add_ln40_4 = add i13 %zext_ln40_5, %zext_ln40" [src/BMM_fonctions.c:40]   --->   Operation 740 'add' 'add_ln40_4' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 741 [1/1] (0.00ns)   --->   "%tmp_86 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_2, i6 %or_ln40_3)" [src/BMM_fonctions.c:40]   --->   Operation 741 'bitconcatenate' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 742 [1/1] (0.00ns)   --->   "%tmp_87 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_2, i6 %or_ln40_4)" [src/BMM_fonctions.c:40]   --->   Operation 742 'bitconcatenate' 'tmp_87' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 743 [1/1] (0.00ns)   --->   "%tmp_88 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_2, i6 %or_ln40_5)" [src/BMM_fonctions.c:40]   --->   Operation 743 'bitconcatenate' 'tmp_88' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 744 [1/1] (2.31ns)   --->   "%icmp_ln30 = icmp eq i15 %indvar_flatten229, -16384" [src/BMM_fonctions.c:30]   --->   Operation 744 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 2.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 745 [1/1] (1.94ns)   --->   "%add_ln30 = add i15 1, %indvar_flatten229" [src/BMM_fonctions.c:30]   --->   Operation 745 'add' 'add_ln30' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 746 [1/1] (0.00ns)   --->   "br i1 %icmp_ln30, label %hls_label_0_begin, label %ii_loop" [src/BMM_fonctions.c:30]   --->   Operation 746 'br' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 747 [1/1] (1.87ns)   --->   "%i_6 = add i7 4, %i_3" [src/BMM_fonctions.c:30]   --->   Operation 747 'add' 'i_6' <Predicate = (!icmp_ln30)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 748 [1/1] (1.99ns)   --->   "%icmp_ln31 = icmp eq i12 %indvar_flatten113, 1024" [src/BMM_fonctions.c:31]   --->   Operation 748 'icmp' 'icmp_ln31' <Predicate = (!icmp_ln30)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 749 [1/1] (0.99ns)   --->   "%select_ln31 = select i1 %icmp_ln31, i7 0, i7 %j_0" [src/BMM_fonctions.c:31]   --->   Operation 749 'select' 'select_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_35 : Operation 750 [1/1] (0.97ns)   --->   "%xor_ln31 = xor i1 %icmp_ln31, true" [src/BMM_fonctions.c:31]   --->   Operation 750 'xor' 'xor_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 751 [1/1] (1.13ns)   --->   "%icmp_ln35 = icmp eq i3 %ii_0, -4" [src/BMM_fonctions.c:35]   --->   Operation 751 'icmp' 'icmp_ln35' <Predicate = (!icmp_ln30)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 752 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%and_ln31 = and i1 %icmp_ln35, %xor_ln31" [src/BMM_fonctions.c:31]   --->   Operation 752 'and' 'and_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 753 [1/1] (1.55ns)   --->   "%icmp_ln32 = icmp eq i8 %indvar_flatten, 64" [src/BMM_fonctions.c:32]   --->   Operation 753 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln30)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 754 [1/1] (0.97ns)   --->   "%and_ln31_1 = and i1 %icmp_ln32, %xor_ln31" [src/BMM_fonctions.c:31]   --->   Operation 754 'and' 'and_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 755 [1/1] (0.97ns)   --->   "%or_ln31 = or i1 %and_ln31_1, %icmp_ln31" [src/BMM_fonctions.c:31]   --->   Operation 755 'or' 'or_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 756 [1/1] (0.99ns)   --->   "%select_ln31_20 = select i1 %or_ln31, i7 0, i7 %k_0" [src/BMM_fonctions.c:31]   --->   Operation 756 'select' 'select_ln31_20' <Predicate = (!icmp_ln30)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_35 : Operation 757 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%xor_ln31_1 = xor i1 %icmp_ln32, true" [src/BMM_fonctions.c:31]   --->   Operation 757 'xor' 'xor_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 758 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%or_ln31_1 = or i1 %icmp_ln31, %xor_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 758 'or' 'or_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 759 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln31_2 = and i1 %and_ln31, %or_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 759 'and' 'and_ln31_2' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 760 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%or_ln32 = or i1 %and_ln31_2, %and_ln31_1" [src/BMM_fonctions.c:32]   --->   Operation 760 'or' 'or_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 761 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%or_ln32_1 = or i1 %or_ln32, %icmp_ln31" [src/BMM_fonctions.c:32]   --->   Operation 761 'or' 'or_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 762 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln32 = select i1 %or_ln32_1, i3 0, i3 %ii_0" [src/BMM_fonctions.c:32]   --->   Operation 762 'select' 'select_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_35 : Operation 763 [1/1] (1.91ns)   --->   "%add_ln32_1 = add i8 1, %indvar_flatten" [src/BMM_fonctions.c:32]   --->   Operation 763 'add' 'add_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 764 [1/1] (1.54ns)   --->   "%add_ln31_1 = add i12 1, %indvar_flatten113" [src/BMM_fonctions.c:31]   --->   Operation 764 'add' 'add_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 5> <Delay = 8.49>
ST_36 : Operation 765 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_22)   --->   "%select_ln31_1 = select i1 %icmp_ln31, i6 1, i6 %or_ln40_3" [src/BMM_fonctions.c:31]   --->   Operation 765 'select' 'select_ln31_1' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 766 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%select_ln31_4 = select i1 %icmp_ln31, i14 0, i14 %add_ln40_1" [src/BMM_fonctions.c:31]   --->   Operation 766 'select' 'select_ln31_4' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 767 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%select_ln31_8 = select i1 %icmp_ln31, i13 1, i13 %tmp_74" [src/BMM_fonctions.c:31]   --->   Operation 767 'select' 'select_ln31_8' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 768 [1/1] (0.99ns)   --->   "%select_ln30 = select i1 %icmp_ln31, i7 %i_6, i7 %i_3" [src/BMM_fonctions.c:30]   --->   Operation 768 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 769 [1/1] (1.87ns)   --->   "%j = add i7 4, %select_ln31" [src/BMM_fonctions.c:31]   --->   Operation 769 'add' 'j' <Predicate = (!icmp_ln30)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 770 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = trunc i7 %j to i6" [src/BMM_fonctions.c:31]   --->   Operation 770 'trunc' 'trunc_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%zext_ln31_12 = zext i7 %j to i14" [src/BMM_fonctions.c:31]   --->   Operation 771 'zext' 'zext_ln31_12' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 772 [1/1] (0.99ns)   --->   "%select_ln31_21 = select i1 %and_ln31_1, i7 %j, i7 %select_ln31" [src/BMM_fonctions.c:31]   --->   Operation 772 'select' 'select_ln31_21' <Predicate = (!icmp_ln30)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 773 [1/1] (0.00ns)   --->   "%zext_ln31_14 = zext i7 %select_ln31_21 to i14" [src/BMM_fonctions.c:31]   --->   Operation 773 'zext' 'zext_ln31_14' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 774 [1/1] (0.00ns)   --->   "%or_ln40_6 = or i6 %trunc_ln31_1, 1" [src/BMM_fonctions.c:40]   --->   Operation 774 'or' 'or_ln40_6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 775 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%zext_ln31_15 = zext i6 %or_ln40_6 to i13" [src/BMM_fonctions.c:31]   --->   Operation 775 'zext' 'zext_ln31_15' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 776 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln31_22 = select i1 %and_ln31_1, i6 %or_ln40_6, i6 %select_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 776 'select' 'select_ln31_22' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 777 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%select_ln31_25 = select i1 %and_ln31_1, i14 %zext_ln31_12, i14 %select_ln31_4" [src/BMM_fonctions.c:31]   --->   Operation 777 'select' 'select_ln31_25' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 778 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%select_ln31_29 = select i1 %and_ln31_1, i13 %zext_ln31_15, i13 %select_ln31_8" [src/BMM_fonctions.c:31]   --->   Operation 778 'select' 'select_ln31_29' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 779 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%zext_ln31_18 = zext i13 %select_ln31_29 to i64" [src/BMM_fonctions.c:31]   --->   Operation 779 'zext' 'zext_ln31_18' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 780 [1/1] (1.87ns)   --->   "%k = add i7 4, %select_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 780 'add' 'k' <Predicate = (!icmp_ln30)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 781 [1/1] (0.00ns)   --->   "%trunc_ln32_1 = trunc i7 %k to i6" [src/BMM_fonctions.c:32]   --->   Operation 781 'trunc' 'trunc_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 782 [1/1] (0.00ns)   --->   "%tmp_100 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %k, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 782 'bitconcatenate' 'tmp_100' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 783 [1/1] (0.00ns)   --->   "%zext_ln40_8 = zext i13 %tmp_100 to i14" [src/BMM_fonctions.c:40]   --->   Operation 783 'zext' 'zext_ln40_8' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 784 [1/1] (1.67ns)   --->   "%add_ln40_7 = add i14 %zext_ln40_8, %zext_ln31_14" [src/BMM_fonctions.c:40]   --->   Operation 784 'add' 'add_ln40_7' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 785 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%tmp_103 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %k, i6 %select_ln31_22)" [src/BMM_fonctions.c:40]   --->   Operation 785 'bitconcatenate' 'tmp_103' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_36 : Operation 786 [1/1] (0.99ns)   --->   "%select_ln32_1 = select i1 %and_ln31_2, i7 %k, i7 %select_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 786 'select' 'select_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 787 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i7 %select_ln32_1 to i14" [src/BMM_fonctions.c:32]   --->   Operation 787 'zext' 'zext_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 788 [1/1] (0.70ns) (out node of the LUT)   --->   "%select_ln32_2 = select i1 %and_ln31_2, i14 %add_ln40_7, i14 %select_ln31_25" [src/BMM_fonctions.c:32]   --->   Operation 788 'select' 'select_ln32_2' <Predicate = (!icmp_ln30)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 789 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i14 %select_ln32_2 to i64" [src/BMM_fonctions.c:32]   --->   Operation 789 'zext' 'zext_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 790 [1/1] (0.00ns)   --->   "%mB_addr_1 = getelementptr [4096 x float]* %mB, i64 0, i64 %zext_ln32_1" [src/BMM_fonctions.c:40]   --->   Operation 790 'getelementptr' 'mB_addr_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 791 [2/2] (3.25ns)   --->   "%mB_load = load float* %mB_addr_1, align 4" [src/BMM_fonctions.c:32]   --->   Operation 791 'load' 'mB_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 792 [1/1] (0.00ns)   --->   "%or_ln40_9 = or i6 %trunc_ln32_1, 1" [src/BMM_fonctions.c:40]   --->   Operation 792 'or' 'or_ln40_9' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 793 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_6 = select i1 %and_ln31_2, i64 %tmp_103, i64 %zext_ln31_18" [src/BMM_fonctions.c:32]   --->   Operation 793 'select' 'select_ln32_6' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 794 [1/1] (0.00ns)   --->   "%mB_addr_5 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_6" [src/BMM_fonctions.c:40]   --->   Operation 794 'getelementptr' 'mB_addr_5' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 795 [2/2] (3.25ns)   --->   "%mB_load_4 = load float* %mB_addr_5, align 4" [src/BMM_fonctions.c:32]   --->   Operation 795 'load' 'mB_load_4' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 796 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i3 %select_ln32 to i7" [src/BMM_fonctions.c:35]   --->   Operation 796 'zext' 'zext_ln35' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 797 [1/1] (1.87ns)   --->   "%add_ln40 = add i7 %zext_ln35, %select_ln30" [src/BMM_fonctions.c:40]   --->   Operation 797 'add' 'add_ln40' <Predicate = (!icmp_ln30)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 798 [1/1] (0.00ns)   --->   "%tmp_118 = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %add_ln40, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 798 'bitconcatenate' 'tmp_118' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 799 [1/1] (0.00ns)   --->   "%zext_ln40_13 = zext i13 %tmp_118 to i14" [src/BMM_fonctions.c:40]   --->   Operation 799 'zext' 'zext_ln40_13' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 800 [1/1] (1.67ns)   --->   "%add_ln40_11 = add i14 %zext_ln40_13, %zext_ln32" [src/BMM_fonctions.c:40]   --->   Operation 800 'add' 'add_ln40_11' <Predicate = (!icmp_ln30)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 801 [1/1] (0.00ns)   --->   "%zext_ln40_14 = zext i14 %add_ln40_11 to i64" [src/BMM_fonctions.c:40]   --->   Operation 801 'zext' 'zext_ln40_14' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 802 [1/1] (0.00ns)   --->   "%mA_addr_1 = getelementptr [4096 x float]* %mA, i64 0, i64 %zext_ln40_14" [src/BMM_fonctions.c:40]   --->   Operation 802 'getelementptr' 'mA_addr_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 803 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_18)   --->   "%select_ln31_41 = select i1 %or_ln31, i6 1, i6 %or_ln40" [src/BMM_fonctions.c:31]   --->   Operation 803 'select' 'select_ln31_41' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 804 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln32_18 = select i1 %and_ln31_2, i6 %or_ln40_9, i6 %select_ln31_41" [src/BMM_fonctions.c:32]   --->   Operation 804 'select' 'select_ln32_18' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 805 [1/1] (0.00ns)   --->   "%tmp_119 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln32_18)" [src/BMM_fonctions.c:40]   --->   Operation 805 'bitconcatenate' 'tmp_119' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 806 [1/1] (0.00ns)   --->   "%mA_addr_2 = getelementptr [4096 x float]* %mA, i64 0, i64 %tmp_119" [src/BMM_fonctions.c:40]   --->   Operation 806 'getelementptr' 'mA_addr_2' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 807 [1/1] (1.67ns)   --->   "%add_ln40_12 = add i14 %zext_ln40_13, %zext_ln31_14" [src/BMM_fonctions.c:40]   --->   Operation 807 'add' 'add_ln40_12' <Predicate = (!icmp_ln30)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 808 [1/1] (0.00ns)   --->   "%zext_ln40_15 = zext i14 %add_ln40_12 to i64" [src/BMM_fonctions.c:40]   --->   Operation 808 'zext' 'zext_ln40_15' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 809 [1/1] (0.00ns)   --->   "%mC_addr_4 = getelementptr [4096 x float]* %mC, i64 0, i64 %zext_ln40_15" [src/BMM_fonctions.c:40]   --->   Operation 809 'getelementptr' 'mC_addr_4' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 810 [1/1] (0.00ns)   --->   "%tmp_122 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln31_22)" [src/BMM_fonctions.c:40]   --->   Operation 810 'bitconcatenate' 'tmp_122' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 811 [1/1] (0.00ns)   --->   "%mC_addr_5 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_122" [src/BMM_fonctions.c:40]   --->   Operation 811 'getelementptr' 'mC_addr_5' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_36 : Operation 812 [2/2] (3.25ns)   --->   "%mA_load = load float* %mA_addr_1, align 16" [src/BMM_fonctions.c:40]   --->   Operation 812 'load' 'mA_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 813 [2/2] (3.25ns)   --->   "%mC_load_64 = load float* %mC_addr_4, align 16" [src/BMM_fonctions.c:40]   --->   Operation 813 'load' 'mC_load_64' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 814 [2/2] (3.25ns)   --->   "%mA_load_1 = load float* %mA_addr_2, align 4" [src/BMM_fonctions.c:40]   --->   Operation 814 'load' 'mA_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_36 : Operation 815 [2/2] (3.25ns)   --->   "%mC_load_65 = load float* %mC_addr_5, align 4" [src/BMM_fonctions.c:40]   --->   Operation 815 'load' 'mC_load_65' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 37 <SV = 6> <Delay = 5.92>
ST_37 : Operation 816 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_23)   --->   "%select_ln31_2 = select i1 %icmp_ln31, i6 2, i6 %or_ln40_4" [src/BMM_fonctions.c:31]   --->   Operation 816 'select' 'select_ln31_2' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 817 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_24)   --->   "%select_ln31_3 = select i1 %icmp_ln31, i6 3, i6 %or_ln40_5" [src/BMM_fonctions.c:31]   --->   Operation 817 'select' 'select_ln31_3' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 818 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%select_ln31_12 = select i1 %icmp_ln31, i13 2, i13 %tmp_75" [src/BMM_fonctions.c:31]   --->   Operation 818 'select' 'select_ln31_12' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 819 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%select_ln31_16 = select i1 %icmp_ln31, i13 3, i13 %tmp_76" [src/BMM_fonctions.c:31]   --->   Operation 819 'select' 'select_ln31_16' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 820 [1/1] (0.00ns)   --->   "%or_ln40_7 = or i6 %trunc_ln31_1, 2" [src/BMM_fonctions.c:40]   --->   Operation 820 'or' 'or_ln40_7' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 821 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%zext_ln31_16 = zext i6 %or_ln40_7 to i13" [src/BMM_fonctions.c:31]   --->   Operation 821 'zext' 'zext_ln31_16' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 822 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln31_23 = select i1 %and_ln31_1, i6 %or_ln40_7, i6 %select_ln31_2" [src/BMM_fonctions.c:31]   --->   Operation 822 'select' 'select_ln31_23' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 823 [1/1] (0.00ns)   --->   "%or_ln40_8 = or i6 %trunc_ln31_1, 3" [src/BMM_fonctions.c:40]   --->   Operation 823 'or' 'or_ln40_8' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%zext_ln31_17 = zext i6 %or_ln40_8 to i13" [src/BMM_fonctions.c:31]   --->   Operation 824 'zext' 'zext_ln31_17' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 825 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln31_24 = select i1 %and_ln31_1, i6 %or_ln40_8, i6 %select_ln31_3" [src/BMM_fonctions.c:31]   --->   Operation 825 'select' 'select_ln31_24' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%select_ln31_33 = select i1 %and_ln31_1, i13 %zext_ln31_16, i13 %select_ln31_12" [src/BMM_fonctions.c:31]   --->   Operation 826 'select' 'select_ln31_33' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 827 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%zext_ln31_19 = zext i13 %select_ln31_33 to i64" [src/BMM_fonctions.c:31]   --->   Operation 827 'zext' 'zext_ln31_19' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 828 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%select_ln31_37 = select i1 %and_ln31_1, i13 %zext_ln31_17, i13 %select_ln31_16" [src/BMM_fonctions.c:31]   --->   Operation 828 'select' 'select_ln31_37' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 829 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%zext_ln31_20 = zext i13 %select_ln31_37 to i64" [src/BMM_fonctions.c:31]   --->   Operation 829 'zext' 'zext_ln31_20' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%tmp_104 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %k, i6 %select_ln31_23)" [src/BMM_fonctions.c:40]   --->   Operation 830 'bitconcatenate' 'tmp_104' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 831 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%tmp_105 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %k, i6 %select_ln31_24)" [src/BMM_fonctions.c:40]   --->   Operation 831 'bitconcatenate' 'tmp_105' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_37 : Operation 832 [1/2] (3.25ns)   --->   "%mB_load = load float* %mB_addr_1, align 4" [src/BMM_fonctions.c:32]   --->   Operation 832 'load' 'mB_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 833 [1/1] (0.00ns)   --->   "%or_ln40_10 = or i6 %trunc_ln32_1, 2" [src/BMM_fonctions.c:40]   --->   Operation 833 'or' 'or_ln40_10' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 834 [1/1] (0.00ns)   --->   "%or_ln40_11 = or i6 %trunc_ln32_1, 3" [src/BMM_fonctions.c:40]   --->   Operation 834 'or' 'or_ln40_11' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 835 [1/2] (3.25ns)   --->   "%mB_load_4 = load float* %mB_addr_5, align 4" [src/BMM_fonctions.c:32]   --->   Operation 835 'load' 'mB_load_4' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 836 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_10 = select i1 %and_ln31_2, i64 %tmp_104, i64 %zext_ln31_19" [src/BMM_fonctions.c:32]   --->   Operation 836 'select' 'select_ln32_10' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 837 [1/1] (0.00ns)   --->   "%mB_addr_9 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_10" [src/BMM_fonctions.c:40]   --->   Operation 837 'getelementptr' 'mB_addr_9' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 838 [2/2] (3.25ns)   --->   "%mB_load_8 = load float* %mB_addr_9, align 4" [src/BMM_fonctions.c:32]   --->   Operation 838 'load' 'mB_load_8' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 839 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_14 = select i1 %and_ln31_2, i64 %tmp_105, i64 %zext_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 839 'select' 'select_ln32_14' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 840 [1/1] (0.00ns)   --->   "%mB_addr_13 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_14" [src/BMM_fonctions.c:40]   --->   Operation 840 'getelementptr' 'mB_addr_13' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 841 [2/2] (3.25ns)   --->   "%mB_load_12 = load float* %mB_addr_13, align 4" [src/BMM_fonctions.c:32]   --->   Operation 841 'load' 'mB_load_12' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 842 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_19)   --->   "%select_ln31_42 = select i1 %or_ln31, i6 2, i6 %or_ln40_1" [src/BMM_fonctions.c:31]   --->   Operation 842 'select' 'select_ln31_42' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 843 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln32_19 = select i1 %and_ln31_2, i6 %or_ln40_10, i6 %select_ln31_42" [src/BMM_fonctions.c:32]   --->   Operation 843 'select' 'select_ln32_19' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 844 [1/1] (0.00ns)   --->   "%tmp_120 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln32_19)" [src/BMM_fonctions.c:40]   --->   Operation 844 'bitconcatenate' 'tmp_120' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 845 [1/1] (0.00ns)   --->   "%mA_addr_3 = getelementptr [4096 x float]* %mA, i64 0, i64 %tmp_120" [src/BMM_fonctions.c:40]   --->   Operation 845 'getelementptr' 'mA_addr_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 846 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_20)   --->   "%select_ln31_43 = select i1 %or_ln31, i6 3, i6 %or_ln40_2" [src/BMM_fonctions.c:31]   --->   Operation 846 'select' 'select_ln31_43' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 847 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln32_20 = select i1 %and_ln31_2, i6 %or_ln40_11, i6 %select_ln31_43" [src/BMM_fonctions.c:32]   --->   Operation 847 'select' 'select_ln32_20' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_37 : Operation 848 [1/1] (0.00ns)   --->   "%tmp_121 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln32_20)" [src/BMM_fonctions.c:40]   --->   Operation 848 'bitconcatenate' 'tmp_121' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 849 [1/1] (0.00ns)   --->   "%mA_addr_4 = getelementptr [4096 x float]* %mA, i64 0, i64 %tmp_121" [src/BMM_fonctions.c:40]   --->   Operation 849 'getelementptr' 'mA_addr_4' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 850 [1/1] (0.00ns)   --->   "%tmp_123 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln31_23)" [src/BMM_fonctions.c:40]   --->   Operation 850 'bitconcatenate' 'tmp_123' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 851 [1/1] (0.00ns)   --->   "%mC_addr_6 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_123" [src/BMM_fonctions.c:40]   --->   Operation 851 'getelementptr' 'mC_addr_6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 852 [1/1] (0.00ns)   --->   "%tmp_124 = call i64 @_ssdm_op_BitConcatenate.i64.i51.i7.i6(i51 0, i7 %add_ln40, i6 %select_ln31_24)" [src/BMM_fonctions.c:40]   --->   Operation 852 'bitconcatenate' 'tmp_124' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 853 [1/1] (0.00ns)   --->   "%mC_addr_7 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_124" [src/BMM_fonctions.c:40]   --->   Operation 853 'getelementptr' 'mC_addr_7' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_37 : Operation 854 [1/2] (3.25ns)   --->   "%mA_load = load float* %mA_addr_1, align 16" [src/BMM_fonctions.c:40]   --->   Operation 854 'load' 'mA_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 855 [1/2] (3.25ns)   --->   "%mC_load_64 = load float* %mC_addr_4, align 16" [src/BMM_fonctions.c:40]   --->   Operation 855 'load' 'mC_load_64' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 856 [1/2] (3.25ns)   --->   "%mA_load_1 = load float* %mA_addr_2, align 4" [src/BMM_fonctions.c:40]   --->   Operation 856 'load' 'mA_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 857 [2/2] (3.25ns)   --->   "%mA_load_2 = load float* %mA_addr_3, align 8" [src/BMM_fonctions.c:40]   --->   Operation 857 'load' 'mA_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 858 [2/2] (3.25ns)   --->   "%mA_load_3 = load float* %mA_addr_4, align 4" [src/BMM_fonctions.c:40]   --->   Operation 858 'load' 'mA_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 859 [1/2] (3.25ns)   --->   "%mC_load_65 = load float* %mC_addr_5, align 4" [src/BMM_fonctions.c:40]   --->   Operation 859 'load' 'mC_load_65' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 860 [2/2] (3.25ns)   --->   "%mC_load_66 = load float* %mC_addr_6, align 8" [src/BMM_fonctions.c:40]   --->   Operation 860 'load' 'mC_load_66' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_37 : Operation 861 [2/2] (3.25ns)   --->   "%mC_load_67 = load float* %mC_addr_7, align 4" [src/BMM_fonctions.c:40]   --->   Operation 861 'load' 'mC_load_67' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 38 <SV = 7> <Delay = 5.86>
ST_38 : Operation 862 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%select_ln31_5 = select i1 %icmp_ln31, i13 64, i13 %add_ln40_2" [src/BMM_fonctions.c:31]   --->   Operation 862 'select' 'select_ln31_5' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 863 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%select_ln31_7 = select i1 %icmp_ln31, i13 192, i13 %add_ln40_4" [src/BMM_fonctions.c:31]   --->   Operation 863 'select' 'select_ln31_7' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 864 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%select_ln31_9 = select i1 %icmp_ln31, i12 65, i12 %tmp_78" [src/BMM_fonctions.c:31]   --->   Operation 864 'select' 'select_ln31_9' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 865 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%zext_ln31_1 = zext i12 %select_ln31_9 to i64" [src/BMM_fonctions.c:31]   --->   Operation 865 'zext' 'zext_ln31_1' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 866 [1/1] (0.00ns)   --->   "%zext_ln31_10 = zext i7 %j to i9" [src/BMM_fonctions.c:31]   --->   Operation 866 'zext' 'zext_ln31_10' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 867 [1/1] (0.00ns)   --->   "%zext_ln31_11 = zext i7 %j to i8" [src/BMM_fonctions.c:31]   --->   Operation 867 'zext' 'zext_ln31_11' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 868 [1/1] (0.00ns)   --->   "%zext_ln31_13 = zext i7 %select_ln31_21 to i13" [src/BMM_fonctions.c:31]   --->   Operation 868 'zext' 'zext_ln31_13' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_38 : Operation 869 [1/1] (1.91ns)   --->   "%add_ln40_5 = add i8 64, %zext_ln31_11" [src/BMM_fonctions.c:40]   --->   Operation 869 'add' 'add_ln40_5' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 870 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%zext_ln40_6 = zext i8 %add_ln40_5 to i13" [src/BMM_fonctions.c:40]   --->   Operation 870 'zext' 'zext_ln40_6' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 871 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%tmp_90 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 1, i6 %or_ln40_6)" [src/BMM_fonctions.c:40]   --->   Operation 871 'bitconcatenate' 'tmp_90' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 872 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%select_ln31_26 = select i1 %and_ln31_1, i13 %zext_ln40_6, i13 %select_ln31_5" [src/BMM_fonctions.c:31]   --->   Operation 872 'select' 'select_ln31_26' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 873 [1/1] (1.82ns)   --->   "%add_ln40_6 = add i9 192, %zext_ln31_10" [src/BMM_fonctions.c:40]   --->   Operation 873 'add' 'add_ln40_6' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 874 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%zext_ln40_7 = zext i9 %add_ln40_6 to i13" [src/BMM_fonctions.c:40]   --->   Operation 874 'zext' 'zext_ln40_7' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%select_ln31_28 = select i1 %and_ln31_1, i13 %zext_ln40_7, i13 %select_ln31_7" [src/BMM_fonctions.c:31]   --->   Operation 875 'select' 'select_ln31_28' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 876 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%select_ln31_30 = select i1 %and_ln31_1, i64 %tmp_90, i64 %zext_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 876 'select' 'select_ln31_30' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 877 [1/1] (0.00ns)   --->   "%tmp_106 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_9, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 877 'bitconcatenate' 'tmp_106' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 878 [1/1] (0.00ns)   --->   "%zext_ln40_9 = zext i12 %tmp_106 to i13" [src/BMM_fonctions.c:40]   --->   Operation 878 'zext' 'zext_ln40_9' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 879 [1/1] (1.54ns)   --->   "%add_ln40_8 = add i13 %zext_ln40_9, %zext_ln31_13" [src/BMM_fonctions.c:40]   --->   Operation 879 'add' 'add_ln40_8' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 880 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%tmp_107 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_9, i6 %select_ln31_22)" [src/BMM_fonctions.c:40]   --->   Operation 880 'bitconcatenate' 'tmp_107' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 881 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln32_3 = select i1 %and_ln31_2, i13 %add_ln40_8, i13 %select_ln31_26" [src/BMM_fonctions.c:32]   --->   Operation 881 'select' 'select_ln32_3' <Predicate = (!icmp_ln30)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 882 [1/1] (0.00ns)   --->   "%zext_ln32_2 = zext i13 %select_ln32_3 to i64" [src/BMM_fonctions.c:32]   --->   Operation 882 'zext' 'zext_ln32_2' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_38 : Operation 883 [1/1] (0.00ns)   --->   "%mB_addr_2 = getelementptr [4096 x float]* %mB, i64 0, i64 %zext_ln32_2" [src/BMM_fonctions.c:40]   --->   Operation 883 'getelementptr' 'mB_addr_2' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_38 : Operation 884 [2/2] (3.25ns)   --->   "%mB_load_1 = load float* %mB_addr_2, align 4" [src/BMM_fonctions.c:32]   --->   Operation 884 'load' 'mB_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 885 [1/1] (0.00ns)   --->   "%tmp_114 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_11, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 885 'bitconcatenate' 'tmp_114' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 886 [1/1] (0.00ns)   --->   "%zext_ln40_12 = zext i12 %tmp_114 to i13" [src/BMM_fonctions.c:40]   --->   Operation 886 'zext' 'zext_ln40_12' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_38 : Operation 887 [1/1] (1.54ns)   --->   "%add_ln40_10 = add i13 %zext_ln40_12, %zext_ln31_13" [src/BMM_fonctions.c:40]   --->   Operation 887 'add' 'add_ln40_10' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 888 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln32_5 = select i1 %and_ln31_2, i13 %add_ln40_10, i13 %select_ln31_28" [src/BMM_fonctions.c:32]   --->   Operation 888 'select' 'select_ln32_5' <Predicate = (!icmp_ln30)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 889 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_7 = select i1 %and_ln31_2, i64 %tmp_107, i64 %select_ln31_30" [src/BMM_fonctions.c:32]   --->   Operation 889 'select' 'select_ln32_7' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 890 [1/1] (0.00ns)   --->   "%mB_addr_6 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_7" [src/BMM_fonctions.c:40]   --->   Operation 890 'getelementptr' 'mB_addr_6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_38 : Operation 891 [2/2] (3.25ns)   --->   "%mB_load_5 = load float* %mB_addr_6, align 4" [src/BMM_fonctions.c:32]   --->   Operation 891 'load' 'mB_load_5' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 892 [1/2] (3.25ns)   --->   "%mB_load_8 = load float* %mB_addr_9, align 4" [src/BMM_fonctions.c:32]   --->   Operation 892 'load' 'mB_load_8' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 893 [1/2] (3.25ns)   --->   "%mB_load_12 = load float* %mB_addr_13, align 4" [src/BMM_fonctions.c:32]   --->   Operation 893 'load' 'mB_load_12' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 894 [4/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:40]   --->   Operation 894 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 895 [1/2] (3.25ns)   --->   "%mA_load_2 = load float* %mA_addr_3, align 8" [src/BMM_fonctions.c:40]   --->   Operation 895 'load' 'mA_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 896 [1/2] (3.25ns)   --->   "%mA_load_3 = load float* %mA_addr_4, align 4" [src/BMM_fonctions.c:40]   --->   Operation 896 'load' 'mA_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 897 [4/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:40]   --->   Operation 897 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 898 [1/2] (3.25ns)   --->   "%mC_load_66 = load float* %mC_addr_6, align 8" [src/BMM_fonctions.c:40]   --->   Operation 898 'load' 'mC_load_66' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 899 [1/2] (3.25ns)   --->   "%mC_load_67 = load float* %mC_addr_7, align 4" [src/BMM_fonctions.c:40]   --->   Operation 899 'load' 'mC_load_67' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_38 : Operation 900 [1/1] (1.65ns)   --->   "%ii = add i3 1, %select_ln32" [src/BMM_fonctions.c:35]   --->   Operation 900 'add' 'ii' <Predicate = (!icmp_ln30)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 901 [1/1] (1.24ns)   --->   "%select_ln32_21 = select i1 %or_ln31, i8 1, i8 %add_ln32_1" [src/BMM_fonctions.c:32]   --->   Operation 901 'select' 'select_ln32_21' <Predicate = (!icmp_ln30)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 39 <SV = 8> <Delay = 5.70>
ST_39 : Operation 902 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%select_ln31_13 = select i1 %icmp_ln31, i12 66, i12 %tmp_79" [src/BMM_fonctions.c:31]   --->   Operation 902 'select' 'select_ln31_13' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 903 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%zext_ln31_4 = zext i12 %select_ln31_13 to i64" [src/BMM_fonctions.c:31]   --->   Operation 903 'zext' 'zext_ln31_4' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 904 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%select_ln31_17 = select i1 %icmp_ln31, i12 67, i12 %tmp_80" [src/BMM_fonctions.c:31]   --->   Operation 904 'select' 'select_ln31_17' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 905 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%zext_ln31_7 = zext i12 %select_ln31_17 to i64" [src/BMM_fonctions.c:31]   --->   Operation 905 'zext' 'zext_ln31_7' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 906 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%tmp_91 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 1, i6 %or_ln40_7)" [src/BMM_fonctions.c:40]   --->   Operation 906 'bitconcatenate' 'tmp_91' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 907 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%tmp_92 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 1, i6 %or_ln40_8)" [src/BMM_fonctions.c:40]   --->   Operation 907 'bitconcatenate' 'tmp_92' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%select_ln31_34 = select i1 %and_ln31_1, i64 %tmp_91, i64 %zext_ln31_4" [src/BMM_fonctions.c:31]   --->   Operation 908 'select' 'select_ln31_34' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 909 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%select_ln31_38 = select i1 %and_ln31_1, i64 %tmp_92, i64 %zext_ln31_7" [src/BMM_fonctions.c:31]   --->   Operation 909 'select' 'select_ln31_38' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 910 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%tmp_108 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_9, i6 %select_ln31_23)" [src/BMM_fonctions.c:40]   --->   Operation 910 'bitconcatenate' 'tmp_108' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 911 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%tmp_109 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_9, i6 %select_ln31_24)" [src/BMM_fonctions.c:40]   --->   Operation 911 'bitconcatenate' 'tmp_109' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_39 : Operation 912 [1/2] (3.25ns)   --->   "%mB_load_1 = load float* %mB_addr_2, align 4" [src/BMM_fonctions.c:32]   --->   Operation 912 'load' 'mB_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 913 [1/2] (3.25ns)   --->   "%mB_load_5 = load float* %mB_addr_6, align 4" [src/BMM_fonctions.c:32]   --->   Operation 913 'load' 'mB_load_5' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 914 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_11 = select i1 %and_ln31_2, i64 %tmp_108, i64 %select_ln31_34" [src/BMM_fonctions.c:32]   --->   Operation 914 'select' 'select_ln32_11' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 915 [1/1] (0.00ns)   --->   "%mB_addr_10 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_11" [src/BMM_fonctions.c:40]   --->   Operation 915 'getelementptr' 'mB_addr_10' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_39 : Operation 916 [2/2] (3.25ns)   --->   "%mB_load_9 = load float* %mB_addr_10, align 4" [src/BMM_fonctions.c:32]   --->   Operation 916 'load' 'mB_load_9' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 917 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_15 = select i1 %and_ln31_2, i64 %tmp_109, i64 %select_ln31_38" [src/BMM_fonctions.c:32]   --->   Operation 917 'select' 'select_ln32_15' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 918 [1/1] (0.00ns)   --->   "%mB_addr_14 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_15" [src/BMM_fonctions.c:40]   --->   Operation 918 'getelementptr' 'mB_addr_14' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_39 : Operation 919 [2/2] (3.25ns)   --->   "%mB_load_13 = load float* %mB_addr_14, align 4" [src/BMM_fonctions.c:32]   --->   Operation 919 'load' 'mB_load_13' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_39 : Operation 920 [3/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:40]   --->   Operation 920 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 921 [3/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:40]   --->   Operation 921 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 922 [4/4] (5.70ns)   --->   "%tmp_21 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:40]   --->   Operation 922 'fmul' 'tmp_21' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 923 [4/4] (5.70ns)   --->   "%tmp_31 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:40]   --->   Operation 923 'fmul' 'tmp_31' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 9> <Delay = 6.28>
ST_40 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%select_ln31_6 = select i1 %icmp_ln31, i13 128, i13 %add_ln40_3" [src/BMM_fonctions.c:31]   --->   Operation 924 'select' 'select_ln31_6' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 925 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%zext_ln31 = zext i13 %select_ln31_6 to i64" [src/BMM_fonctions.c:31]   --->   Operation 925 'zext' 'zext_ln31' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%select_ln31_10 = select i1 %icmp_ln31, i12 129, i12 %tmp_82" [src/BMM_fonctions.c:31]   --->   Operation 926 'select' 'select_ln31_10' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 927 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%zext_ln31_2 = zext i12 %select_ln31_10 to i64" [src/BMM_fonctions.c:31]   --->   Operation 927 'zext' 'zext_ln31_2' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 928 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%tmp_93 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 1, i7 %j)" [src/BMM_fonctions.c:40]   --->   Operation 928 'bitconcatenate' 'tmp_93' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 929 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%tmp_94 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 2, i6 %or_ln40_6)" [src/BMM_fonctions.c:40]   --->   Operation 929 'bitconcatenate' 'tmp_94' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 930 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%select_ln31_27 = select i1 %and_ln31_1, i64 %tmp_93, i64 %zext_ln31" [src/BMM_fonctions.c:31]   --->   Operation 930 'select' 'select_ln31_27' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 931 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%select_ln31_31 = select i1 %and_ln31_1, i64 %tmp_94, i64 %zext_ln31_2" [src/BMM_fonctions.c:31]   --->   Operation 931 'select' 'select_ln31_31' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 932 [1/1] (0.00ns)   --->   "%tmp_110 = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %or_ln40_10, i6 0)" [src/BMM_fonctions.c:40]   --->   Operation 932 'bitconcatenate' 'tmp_110' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 933 [1/1] (0.00ns)   --->   "%zext_ln40_10 = zext i12 %tmp_110 to i13" [src/BMM_fonctions.c:40]   --->   Operation 933 'zext' 'zext_ln40_10' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 934 [1/1] (1.54ns)   --->   "%add_ln40_9 = add i13 %zext_ln40_10, %zext_ln31_13" [src/BMM_fonctions.c:40]   --->   Operation 934 'add' 'add_ln40_9' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 935 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%zext_ln40_11 = zext i13 %add_ln40_9 to i64" [src/BMM_fonctions.c:40]   --->   Operation 935 'zext' 'zext_ln40_11' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%tmp_111 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_10, i6 %select_ln31_22)" [src/BMM_fonctions.c:40]   --->   Operation 936 'bitconcatenate' 'tmp_111' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_40 : Operation 937 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_4 = select i1 %and_ln31_2, i64 %zext_ln40_11, i64 %select_ln31_27" [src/BMM_fonctions.c:32]   --->   Operation 937 'select' 'select_ln32_4' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 938 [1/1] (0.00ns)   --->   "%mB_addr_3 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_4" [src/BMM_fonctions.c:40]   --->   Operation 938 'getelementptr' 'mB_addr_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_40 : Operation 939 [2/2] (3.25ns)   --->   "%mB_load_2 = load float* %mB_addr_3, align 4" [src/BMM_fonctions.c:32]   --->   Operation 939 'load' 'mB_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 940 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_8 = select i1 %and_ln31_2, i64 %tmp_111, i64 %select_ln31_31" [src/BMM_fonctions.c:32]   --->   Operation 940 'select' 'select_ln32_8' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 941 [1/1] (0.00ns)   --->   "%mB_addr_7 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_8" [src/BMM_fonctions.c:40]   --->   Operation 941 'getelementptr' 'mB_addr_7' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_40 : Operation 942 [2/2] (3.25ns)   --->   "%mB_load_6 = load float* %mB_addr_7, align 4" [src/BMM_fonctions.c:32]   --->   Operation 942 'load' 'mB_load_6' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 943 [1/2] (3.25ns)   --->   "%mB_load_9 = load float* %mB_addr_10, align 4" [src/BMM_fonctions.c:32]   --->   Operation 943 'load' 'mB_load_9' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 944 [1/2] (3.25ns)   --->   "%mB_load_13 = load float* %mB_addr_14, align 4" [src/BMM_fonctions.c:32]   --->   Operation 944 'load' 'mB_load_13' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_40 : Operation 945 [2/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:40]   --->   Operation 945 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 946 [4/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:40]   --->   Operation 946 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 947 [2/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:40]   --->   Operation 947 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 948 [4/4] (5.70ns)   --->   "%tmp_112_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:40]   --->   Operation 948 'fmul' 'tmp_112_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 949 [3/4] (5.70ns)   --->   "%tmp_21 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:40]   --->   Operation 949 'fmul' 'tmp_21' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 950 [3/4] (5.70ns)   --->   "%tmp_31 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:40]   --->   Operation 950 'fmul' 'tmp_31' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 10> <Delay = 5.70>
ST_41 : Operation 951 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%select_ln31_14 = select i1 %icmp_ln31, i12 130, i12 %tmp_83" [src/BMM_fonctions.c:31]   --->   Operation 951 'select' 'select_ln31_14' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 952 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%zext_ln31_5 = zext i12 %select_ln31_14 to i64" [src/BMM_fonctions.c:31]   --->   Operation 952 'zext' 'zext_ln31_5' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 953 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%select_ln31_18 = select i1 %icmp_ln31, i12 131, i12 %tmp_84" [src/BMM_fonctions.c:31]   --->   Operation 953 'select' 'select_ln31_18' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 954 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%zext_ln31_8 = zext i12 %select_ln31_18 to i64" [src/BMM_fonctions.c:31]   --->   Operation 954 'zext' 'zext_ln31_8' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 955 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%tmp_95 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 2, i6 %or_ln40_7)" [src/BMM_fonctions.c:40]   --->   Operation 955 'bitconcatenate' 'tmp_95' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 956 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%tmp_96 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 2, i6 %or_ln40_8)" [src/BMM_fonctions.c:40]   --->   Operation 956 'bitconcatenate' 'tmp_96' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 957 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%select_ln31_35 = select i1 %and_ln31_1, i64 %tmp_95, i64 %zext_ln31_5" [src/BMM_fonctions.c:31]   --->   Operation 957 'select' 'select_ln31_35' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 958 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%select_ln31_39 = select i1 %and_ln31_1, i64 %tmp_96, i64 %zext_ln31_8" [src/BMM_fonctions.c:31]   --->   Operation 958 'select' 'select_ln31_39' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 959 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%tmp_112 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_10, i6 %select_ln31_23)" [src/BMM_fonctions.c:40]   --->   Operation 959 'bitconcatenate' 'tmp_112' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 960 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%tmp_113 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_10, i6 %select_ln31_24)" [src/BMM_fonctions.c:40]   --->   Operation 960 'bitconcatenate' 'tmp_113' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_41 : Operation 961 [1/2] (3.25ns)   --->   "%mB_load_2 = load float* %mB_addr_3, align 4" [src/BMM_fonctions.c:32]   --->   Operation 961 'load' 'mB_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 962 [1/2] (3.25ns)   --->   "%mB_load_6 = load float* %mB_addr_7, align 4" [src/BMM_fonctions.c:32]   --->   Operation 962 'load' 'mB_load_6' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 963 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_12 = select i1 %and_ln31_2, i64 %tmp_112, i64 %select_ln31_35" [src/BMM_fonctions.c:32]   --->   Operation 963 'select' 'select_ln32_12' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 964 [1/1] (0.00ns)   --->   "%mB_addr_11 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_12" [src/BMM_fonctions.c:40]   --->   Operation 964 'getelementptr' 'mB_addr_11' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_41 : Operation 965 [2/2] (3.25ns)   --->   "%mB_load_10 = load float* %mB_addr_11, align 4" [src/BMM_fonctions.c:32]   --->   Operation 965 'load' 'mB_load_10' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 966 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_16 = select i1 %and_ln31_2, i64 %tmp_113, i64 %select_ln31_39" [src/BMM_fonctions.c:32]   --->   Operation 966 'select' 'select_ln32_16' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 967 [1/1] (0.00ns)   --->   "%mB_addr_15 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_16" [src/BMM_fonctions.c:40]   --->   Operation 967 'getelementptr' 'mB_addr_15' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_41 : Operation 968 [2/2] (3.25ns)   --->   "%mB_load_14 = load float* %mB_addr_15, align 4" [src/BMM_fonctions.c:32]   --->   Operation 968 'load' 'mB_load_14' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_41 : Operation 969 [1/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:40]   --->   Operation 969 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 970 [3/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:40]   --->   Operation 970 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 971 [1/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:40]   --->   Operation 971 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 972 [3/4] (5.70ns)   --->   "%tmp_112_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:40]   --->   Operation 972 'fmul' 'tmp_112_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 973 [2/4] (5.70ns)   --->   "%tmp_21 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:40]   --->   Operation 973 'fmul' 'tmp_21' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 974 [4/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:40]   --->   Operation 974 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 975 [2/4] (5.70ns)   --->   "%tmp_31 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:40]   --->   Operation 975 'fmul' 'tmp_31' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 976 [4/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:40]   --->   Operation 976 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 11> <Delay = 7.25>
ST_42 : Operation 977 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%select_ln31_11 = select i1 %icmp_ln31, i12 193, i12 %tmp_86" [src/BMM_fonctions.c:31]   --->   Operation 977 'select' 'select_ln31_11' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 978 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%zext_ln31_3 = zext i12 %select_ln31_11 to i64" [src/BMM_fonctions.c:31]   --->   Operation 978 'zext' 'zext_ln31_3' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_42 : Operation 979 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%tmp_97 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 3, i6 %or_ln40_6)" [src/BMM_fonctions.c:40]   --->   Operation 979 'bitconcatenate' 'tmp_97' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_42 : Operation 980 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%select_ln31_32 = select i1 %and_ln31_1, i64 %tmp_97, i64 %zext_ln31_3" [src/BMM_fonctions.c:31]   --->   Operation 980 'select' 'select_ln31_32' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 981 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%tmp_115 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_11, i6 %select_ln31_22)" [src/BMM_fonctions.c:40]   --->   Operation 981 'bitconcatenate' 'tmp_115' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_42 : Operation 982 [1/1] (0.00ns)   --->   "%zext_ln32_3 = zext i13 %select_ln32_5 to i64" [src/BMM_fonctions.c:32]   --->   Operation 982 'zext' 'zext_ln32_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_42 : Operation 983 [1/1] (0.00ns)   --->   "%mB_addr_4 = getelementptr [4096 x float]* %mB, i64 0, i64 %zext_ln32_3" [src/BMM_fonctions.c:40]   --->   Operation 983 'getelementptr' 'mB_addr_4' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_42 : Operation 984 [2/2] (3.25ns)   --->   "%mB_load_3 = load float* %mB_addr_4, align 4" [src/BMM_fonctions.c:32]   --->   Operation 984 'load' 'mB_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 985 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_9 = select i1 %and_ln31_2, i64 %tmp_115, i64 %select_ln31_32" [src/BMM_fonctions.c:32]   --->   Operation 985 'select' 'select_ln32_9' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 986 [1/1] (0.00ns)   --->   "%mB_addr_8 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_9" [src/BMM_fonctions.c:40]   --->   Operation 986 'getelementptr' 'mB_addr_8' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_42 : Operation 987 [2/2] (3.25ns)   --->   "%mB_load_7 = load float* %mB_addr_8, align 4" [src/BMM_fonctions.c:32]   --->   Operation 987 'load' 'mB_load_7' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 988 [1/2] (3.25ns)   --->   "%mB_load_10 = load float* %mB_addr_11, align 4" [src/BMM_fonctions.c:32]   --->   Operation 988 'load' 'mB_load_10' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 989 [1/2] (3.25ns)   --->   "%mB_load_14 = load float* %mB_addr_15, align 4" [src/BMM_fonctions.c:32]   --->   Operation 989 'load' 'mB_load_14' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_42 : Operation 990 [5/5] (7.25ns)   --->   "%tmp_73 = fadd float %mC_load_64, %tmp1" [src/BMM_fonctions.c:40]   --->   Operation 990 'fadd' 'tmp_73' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 991 [2/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:40]   --->   Operation 991 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 992 [4/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:40]   --->   Operation 992 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 993 [5/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_65, %tmp_s" [src/BMM_fonctions.c:40]   --->   Operation 993 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 994 [2/4] (5.70ns)   --->   "%tmp_112_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:40]   --->   Operation 994 'fmul' 'tmp_112_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 995 [4/4] (5.70ns)   --->   "%tmp_112_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:40]   --->   Operation 995 'fmul' 'tmp_112_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 996 [1/4] (5.70ns)   --->   "%tmp_21 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:40]   --->   Operation 996 'fmul' 'tmp_21' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 997 [3/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:40]   --->   Operation 997 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 998 [1/4] (5.70ns)   --->   "%tmp_31 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:40]   --->   Operation 998 'fmul' 'tmp_31' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 999 [3/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:40]   --->   Operation 999 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1000 [1/1] (0.69ns)   --->   "%select_ln31_44 = select i1 %icmp_ln31, i12 1, i12 %add_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 1000 'select' 'select_ln31_44' <Predicate = (!icmp_ln30)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 43 <SV = 12> <Delay = 7.25>
ST_43 : Operation 1001 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%select_ln31_15 = select i1 %icmp_ln31, i12 194, i12 %tmp_87" [src/BMM_fonctions.c:31]   --->   Operation 1001 'select' 'select_ln31_15' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1002 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%zext_ln31_6 = zext i12 %select_ln31_15 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1002 'zext' 'zext_ln31_6' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1003 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%select_ln31_19 = select i1 %icmp_ln31, i12 195, i12 %tmp_88" [src/BMM_fonctions.c:31]   --->   Operation 1003 'select' 'select_ln31_19' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1004 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%zext_ln31_9 = zext i12 %select_ln31_19 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1004 'zext' 'zext_ln31_9' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1005 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%tmp_98 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 3, i6 %or_ln40_7)" [src/BMM_fonctions.c:40]   --->   Operation 1005 'bitconcatenate' 'tmp_98' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1006 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%tmp_99 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 3, i6 %or_ln40_8)" [src/BMM_fonctions.c:40]   --->   Operation 1006 'bitconcatenate' 'tmp_99' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1007 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%select_ln31_36 = select i1 %and_ln31_1, i64 %tmp_98, i64 %zext_ln31_6" [src/BMM_fonctions.c:31]   --->   Operation 1007 'select' 'select_ln31_36' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1008 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%select_ln31_40 = select i1 %and_ln31_1, i64 %tmp_99, i64 %zext_ln31_9" [src/BMM_fonctions.c:31]   --->   Operation 1008 'select' 'select_ln31_40' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1009 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%tmp_116 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_11, i6 %select_ln31_23)" [src/BMM_fonctions.c:40]   --->   Operation 1009 'bitconcatenate' 'tmp_116' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1010 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%tmp_117 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i6.i6(i52 0, i6 %or_ln40_11, i6 %select_ln31_24)" [src/BMM_fonctions.c:40]   --->   Operation 1010 'bitconcatenate' 'tmp_117' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_43 : Operation 1011 [1/2] (3.25ns)   --->   "%mB_load_3 = load float* %mB_addr_4, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1011 'load' 'mB_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_43 : Operation 1012 [1/2] (3.25ns)   --->   "%mB_load_7 = load float* %mB_addr_8, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1012 'load' 'mB_load_7' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_43 : Operation 1013 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_13 = select i1 %and_ln31_2, i64 %tmp_116, i64 %select_ln31_36" [src/BMM_fonctions.c:32]   --->   Operation 1013 'select' 'select_ln32_13' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1014 [1/1] (0.00ns)   --->   "%mB_addr_12 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_13" [src/BMM_fonctions.c:40]   --->   Operation 1014 'getelementptr' 'mB_addr_12' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_43 : Operation 1015 [2/2] (3.25ns)   --->   "%mB_load_11 = load float* %mB_addr_12, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1015 'load' 'mB_load_11' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_43 : Operation 1016 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_17 = select i1 %and_ln31_2, i64 %tmp_117, i64 %select_ln31_40" [src/BMM_fonctions.c:32]   --->   Operation 1016 'select' 'select_ln32_17' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 1017 [1/1] (0.00ns)   --->   "%mB_addr_16 = getelementptr [4096 x float]* %mB, i64 0, i64 %select_ln32_17" [src/BMM_fonctions.c:40]   --->   Operation 1017 'getelementptr' 'mB_addr_16' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_43 : Operation 1018 [2/2] (3.25ns)   --->   "%mB_load_15 = load float* %mB_addr_16, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1018 'load' 'mB_load_15' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_43 : Operation 1019 [4/5] (7.25ns)   --->   "%tmp_73 = fadd float %mC_load_64, %tmp1" [src/BMM_fonctions.c:40]   --->   Operation 1019 'fadd' 'tmp_73' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1020 [1/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:40]   --->   Operation 1020 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1021 [3/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:40]   --->   Operation 1021 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1022 [4/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_65, %tmp_s" [src/BMM_fonctions.c:40]   --->   Operation 1022 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1023 [1/4] (5.70ns)   --->   "%tmp_112_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:40]   --->   Operation 1023 'fmul' 'tmp_112_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1024 [3/4] (5.70ns)   --->   "%tmp_112_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:40]   --->   Operation 1024 'fmul' 'tmp_112_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1025 [5/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_66, %tmp_21" [src/BMM_fonctions.c:40]   --->   Operation 1025 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1026 [2/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:40]   --->   Operation 1026 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1027 [4/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:40]   --->   Operation 1027 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1028 [5/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_67, %tmp_31" [src/BMM_fonctions.c:40]   --->   Operation 1028 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1029 [2/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:40]   --->   Operation 1029 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1030 [4/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:40]   --->   Operation 1030 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 13> <Delay = 7.25>
ST_44 : Operation 1031 [1/2] (3.25ns)   --->   "%mB_load_11 = load float* %mB_addr_12, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1031 'load' 'mB_load_11' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_44 : Operation 1032 [1/2] (3.25ns)   --->   "%mB_load_15 = load float* %mB_addr_16, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1032 'load' 'mB_load_15' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_44 : Operation 1033 [3/5] (7.25ns)   --->   "%tmp_73 = fadd float %mC_load_64, %tmp1" [src/BMM_fonctions.c:40]   --->   Operation 1033 'fadd' 'tmp_73' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1034 [2/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:40]   --->   Operation 1034 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1035 [4/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:40]   --->   Operation 1035 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1036 [3/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_65, %tmp_s" [src/BMM_fonctions.c:40]   --->   Operation 1036 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1037 [2/4] (5.70ns)   --->   "%tmp_112_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:40]   --->   Operation 1037 'fmul' 'tmp_112_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1038 [4/4] (5.70ns)   --->   "%tmp_112_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:40]   --->   Operation 1038 'fmul' 'tmp_112_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1039 [4/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_66, %tmp_21" [src/BMM_fonctions.c:40]   --->   Operation 1039 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1040 [1/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:40]   --->   Operation 1040 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1041 [3/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:40]   --->   Operation 1041 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1042 [4/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_67, %tmp_31" [src/BMM_fonctions.c:40]   --->   Operation 1042 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1043 [1/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:40]   --->   Operation 1043 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 1044 [3/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:40]   --->   Operation 1044 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 14> <Delay = 7.25>
ST_45 : Operation 1045 [2/5] (7.25ns)   --->   "%tmp_73 = fadd float %mC_load_64, %tmp1" [src/BMM_fonctions.c:40]   --->   Operation 1045 'fadd' 'tmp_73' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1046 [1/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:40]   --->   Operation 1046 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1047 [3/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:40]   --->   Operation 1047 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1048 [2/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_65, %tmp_s" [src/BMM_fonctions.c:40]   --->   Operation 1048 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1049 [1/4] (5.70ns)   --->   "%tmp_112_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:40]   --->   Operation 1049 'fmul' 'tmp_112_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1050 [3/4] (5.70ns)   --->   "%tmp_112_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:40]   --->   Operation 1050 'fmul' 'tmp_112_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1051 [3/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_66, %tmp_21" [src/BMM_fonctions.c:40]   --->   Operation 1051 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1052 [2/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:40]   --->   Operation 1052 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1053 [4/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:40]   --->   Operation 1053 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1054 [3/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_67, %tmp_31" [src/BMM_fonctions.c:40]   --->   Operation 1054 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1055 [2/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:40]   --->   Operation 1055 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 1056 [4/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:40]   --->   Operation 1056 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 15> <Delay = 7.25>
ST_46 : Operation 1057 [1/5] (7.25ns)   --->   "%tmp_73 = fadd float %mC_load_64, %tmp1" [src/BMM_fonctions.c:40]   --->   Operation 1057 'fadd' 'tmp_73' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1058 [2/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:40]   --->   Operation 1058 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1059 [1/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_65, %tmp_s" [src/BMM_fonctions.c:40]   --->   Operation 1059 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1060 [2/4] (5.70ns)   --->   "%tmp_112_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:40]   --->   Operation 1060 'fmul' 'tmp_112_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1061 [2/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_66, %tmp_21" [src/BMM_fonctions.c:40]   --->   Operation 1061 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1062 [1/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:40]   --->   Operation 1062 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1063 [3/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:40]   --->   Operation 1063 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1064 [2/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_67, %tmp_31" [src/BMM_fonctions.c:40]   --->   Operation 1064 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1065 [1/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:40]   --->   Operation 1065 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 1066 [3/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:40]   --->   Operation 1066 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 16> <Delay = 7.25>
ST_47 : Operation 1067 [5/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_73, %tmp_0_1" [src/BMM_fonctions.c:40]   --->   Operation 1067 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1068 [1/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:40]   --->   Operation 1068 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1069 [5/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_112_1" [src/BMM_fonctions.c:40]   --->   Operation 1069 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1070 [1/4] (5.70ns)   --->   "%tmp_112_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:40]   --->   Operation 1070 'fmul' 'tmp_112_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1071 [1/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_66, %tmp_21" [src/BMM_fonctions.c:40]   --->   Operation 1071 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1072 [2/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:40]   --->   Operation 1072 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1073 [1/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_67, %tmp_31" [src/BMM_fonctions.c:40]   --->   Operation 1073 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 1074 [2/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:40]   --->   Operation 1074 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 17> <Delay = 7.25>
ST_48 : Operation 1075 [4/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_73, %tmp_0_1" [src/BMM_fonctions.c:40]   --->   Operation 1075 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 1076 [4/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_112_1" [src/BMM_fonctions.c:40]   --->   Operation 1076 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 1077 [5/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:40]   --->   Operation 1077 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 1078 [1/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:40]   --->   Operation 1078 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 1079 [5/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:40]   --->   Operation 1079 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 1080 [1/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:40]   --->   Operation 1080 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 18> <Delay = 7.25>
ST_49 : Operation 1081 [3/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_73, %tmp_0_1" [src/BMM_fonctions.c:40]   --->   Operation 1081 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 1082 [3/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_112_1" [src/BMM_fonctions.c:40]   --->   Operation 1082 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 1083 [4/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:40]   --->   Operation 1083 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 1084 [4/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:40]   --->   Operation 1084 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 19> <Delay = 7.25>
ST_50 : Operation 1085 [2/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_73, %tmp_0_1" [src/BMM_fonctions.c:40]   --->   Operation 1085 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 1086 [2/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_112_1" [src/BMM_fonctions.c:40]   --->   Operation 1086 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 1087 [3/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:40]   --->   Operation 1087 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 1088 [3/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:40]   --->   Operation 1088 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 20> <Delay = 7.25>
ST_51 : Operation 1089 [1/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_73, %tmp_0_1" [src/BMM_fonctions.c:40]   --->   Operation 1089 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 1090 [1/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_112_1" [src/BMM_fonctions.c:40]   --->   Operation 1090 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 1091 [2/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:40]   --->   Operation 1091 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 1092 [2/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:40]   --->   Operation 1092 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 21> <Delay = 7.25>
ST_52 : Operation 1093 [5/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:40]   --->   Operation 1093 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 1094 [5/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_112_2" [src/BMM_fonctions.c:40]   --->   Operation 1094 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 1095 [1/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:40]   --->   Operation 1095 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 1096 [1/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:40]   --->   Operation 1096 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 22> <Delay = 7.25>
ST_53 : Operation 1097 [4/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:40]   --->   Operation 1097 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 1098 [4/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_112_2" [src/BMM_fonctions.c:40]   --->   Operation 1098 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 1099 [5/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:40]   --->   Operation 1099 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 1100 [5/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:40]   --->   Operation 1100 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 23> <Delay = 7.25>
ST_54 : Operation 1101 [3/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:40]   --->   Operation 1101 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 1102 [3/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_112_2" [src/BMM_fonctions.c:40]   --->   Operation 1102 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 1103 [4/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:40]   --->   Operation 1103 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 1104 [4/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:40]   --->   Operation 1104 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 24> <Delay = 7.25>
ST_55 : Operation 1105 [2/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:40]   --->   Operation 1105 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 1106 [2/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_112_2" [src/BMM_fonctions.c:40]   --->   Operation 1106 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 1107 [3/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:40]   --->   Operation 1107 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 1108 [3/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:40]   --->   Operation 1108 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 25> <Delay = 7.25>
ST_56 : Operation 1109 [1/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:40]   --->   Operation 1109 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 1110 [1/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_112_2" [src/BMM_fonctions.c:40]   --->   Operation 1110 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 1111 [2/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:40]   --->   Operation 1111 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 1112 [2/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:40]   --->   Operation 1112 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 26> <Delay = 7.25>
ST_57 : Operation 1113 [5/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:40]   --->   Operation 1113 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 1114 [5/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_112_3" [src/BMM_fonctions.c:40]   --->   Operation 1114 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 1115 [1/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:40]   --->   Operation 1115 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 1116 [1/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:40]   --->   Operation 1116 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 27> <Delay = 7.25>
ST_58 : Operation 1117 [4/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:40]   --->   Operation 1117 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 1118 [4/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_112_3" [src/BMM_fonctions.c:40]   --->   Operation 1118 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 28> <Delay = 7.25>
ST_59 : Operation 1119 [3/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:40]   --->   Operation 1119 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 1120 [3/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_112_3" [src/BMM_fonctions.c:40]   --->   Operation 1120 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 29> <Delay = 7.25>
ST_60 : Operation 1121 [2/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:40]   --->   Operation 1121 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 1122 [2/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_112_3" [src/BMM_fonctions.c:40]   --->   Operation 1122 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 30> <Delay = 7.25>
ST_61 : Operation 1123 [1/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:40]   --->   Operation 1123 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 1124 [1/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_112_3" [src/BMM_fonctions.c:40]   --->   Operation 1124 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 31> <Delay = 7.25>
ST_62 : Operation 1125 [1/1] (3.25ns)   --->   "store float %tmp_1_0_3, float* %mC_addr_4, align 16" [src/BMM_fonctions.c:40]   --->   Operation 1125 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_62 : Operation 1126 [1/1] (3.25ns)   --->   "store float %tmp_1_1_3, float* %mC_addr_5, align 4" [src/BMM_fonctions.c:40]   --->   Operation 1126 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_62 : Operation 1127 [5/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:40]   --->   Operation 1127 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 1128 [5/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:40]   --->   Operation 1128 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 32> <Delay = 7.25>
ST_63 : Operation 1129 [4/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:40]   --->   Operation 1129 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 1130 [4/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:40]   --->   Operation 1130 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 33> <Delay = 7.25>
ST_64 : Operation 1131 [3/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:40]   --->   Operation 1131 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 1132 [3/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:40]   --->   Operation 1132 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 34> <Delay = 7.25>
ST_65 : Operation 1133 [2/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:40]   --->   Operation 1133 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 1134 [2/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:40]   --->   Operation 1134 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 35> <Delay = 7.25>
ST_66 : Operation 1135 [1/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:40]   --->   Operation 1135 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 1136 [1/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:40]   --->   Operation 1136 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 36> <Delay = 3.25>
ST_67 : Operation 1137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @i_loop_k_loop_ii_loo)"   --->   Operation 1137 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1138 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16384, i64 16384, i64 16384) nounwind"   --->   Operation 1138 'speclooptripcount' 'empty_17' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @j_loop_k_loop_ii_loo)"   --->   Operation 1139 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @k_loop_ii_loop_str)"   --->   Operation 1140 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str13) nounwind" [src/BMM_fonctions.c:35]   --->   Operation 1141 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1142 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str13) nounwind" [src/BMM_fonctions.c:35]   --->   Operation 1142 'specregionbegin' 'tmp_9' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/BMM_fonctions.c:36]   --->   Operation 1143 'specpipeline' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1144 [1/1] (3.25ns)   --->   "store float %tmp_1_2_3, float* %mC_addr_6, align 8" [src/BMM_fonctions.c:40]   --->   Operation 1144 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_67 : Operation 1145 [1/1] (3.25ns)   --->   "store float %tmp_1_3_3, float* %mC_addr_7, align 4" [src/BMM_fonctions.c:40]   --->   Operation 1145 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_67 : Operation 1146 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str13, i32 %tmp_9) nounwind" [src/BMM_fonctions.c:43]   --->   Operation 1146 'specregionend' 'empty_18' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_67 : Operation 1147 [1/1] (0.00ns)   --->   "br label %.preheader1.preheader" [src/BMM_fonctions.c:35]   --->   Operation 1147 'br' <Predicate = (!icmp_ln30)> <Delay = 0.00>

State 68 <SV = 5> <Delay = 8.75>
ST_68 : Operation 1148 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1148 'specregionbegin' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 1149 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i30 %out_mC5 to i64" [src/BMM_fonctions.c:49]   --->   Operation 1149 'zext' 'zext_ln49_1' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 1150 [1/1] (0.00ns)   --->   "%OUTPUT_addr_1 = getelementptr float* %OUTPUT_r, i64 %zext_ln49_1" [src/BMM_fonctions.c:49]   --->   Operation 1150 'getelementptr' 'OUTPUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 1151 [1/1] (8.75ns)   --->   "%p_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 64)" [src/BMM_fonctions.c:49]   --->   Operation 1151 'writereq' 'p_wr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 1152 [1/1] (1.76ns)   --->   "br label %meminst17.0"   --->   Operation 1152 'br' <Predicate = true> <Delay = 1.76>

State 69 <SV = 6> <Delay = 3.25>
ST_69 : Operation 1153 [1/1] (0.00ns)   --->   "%phi_ln49 = phi i6 [ 0, %hls_label_0_begin ], [ %add_ln49, %meminst17.0 ]" [src/BMM_fonctions.c:49]   --->   Operation 1153 'phi' 'phi_ln49' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1154 [1/1] (1.82ns)   --->   "%add_ln49 = add i6 %phi_ln49, 1" [src/BMM_fonctions.c:49]   --->   Operation 1154 'add' 'add_ln49' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_69 : Operation 1155 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i6 %phi_ln49 to i64" [src/BMM_fonctions.c:49]   --->   Operation 1155 'zext' 'zext_ln49' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1156 [1/1] (0.00ns)   --->   "%mC_addr_1 = getelementptr [4096 x float]* %mC, i64 0, i64 %zext_ln49" [src/BMM_fonctions.c:49]   --->   Operation 1156 'getelementptr' 'mC_addr_1' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 1157 [2/2] (3.25ns)   --->   "%mC_load = load float* %mC_addr_1, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1157 'load' 'mC_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_69 : Operation 1158 [1/1] (1.42ns)   --->   "%icmp_ln49 = icmp eq i6 %phi_ln49, -1" [src/BMM_fonctions.c:49]   --->   Operation 1158 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 7> <Delay = 3.25>
ST_70 : Operation 1159 [1/2] (3.25ns)   --->   "%mC_load = load float* %mC_addr_1, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1159 'load' 'mC_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 71 <SV = 8> <Delay = 8.75>
ST_71 : Operation 1160 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_1, float %mC_load, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1160 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 1161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1161 'specloopname' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1162 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1162 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1163 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49, label %hls_label_0, label %meminst17.0" [src/BMM_fonctions.c:49]   --->   Operation 1163 'br' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 1164 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1164 'specregionbegin' 'tmp_6' <Predicate = (icmp_ln49)> <Delay = 0.00>

State 72 <SV = 9> <Delay = 8.75>
ST_72 : Operation 1165 [5/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:49]   --->   Operation 1165 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 10> <Delay = 8.75>
ST_73 : Operation 1166 [4/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:49]   --->   Operation 1166 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 11> <Delay = 8.75>
ST_74 : Operation 1167 [3/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:49]   --->   Operation 1167 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 12> <Delay = 8.75>
ST_75 : Operation 1168 [2/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:49]   --->   Operation 1168 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 13> <Delay = 8.75>
ST_76 : Operation 1169 [1/5] (8.75ns)   --->   "%p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:49]   --->   Operation 1169 'writeresp' 'p_wr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_76 : Operation 1170 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_4) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1170 'specregionend' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 1171 [1/1] (1.76ns)   --->   "br label %meminst17.1"   --->   Operation 1171 'br' <Predicate = true> <Delay = 1.76>

State 77 <SV = 14> <Delay = 3.52>
ST_77 : Operation 1172 [1/1] (0.00ns)   --->   "%empty_22 = phi i6 [ 0, %hls_label_0 ], [ %add_ln49_1, %meminst17.1 ]" [src/BMM_fonctions.c:49]   --->   Operation 1172 'phi' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1173 [1/1] (1.82ns)   --->   "%add_ln49_1 = add i6 %empty_22, 1" [src/BMM_fonctions.c:49]   --->   Operation 1173 'add' 'add_ln49_1' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 1174 [1/1] (0.00ns)   --->   "%tmp_125 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 1, i6 %empty_22)" [src/BMM_fonctions.c:49]   --->   Operation 1174 'bitconcatenate' 'tmp_125' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1175 [1/1] (3.52ns)   --->   "%add_ln49_64 = add i64 %empty, %tmp_125" [src/BMM_fonctions.c:49]   --->   Operation 1175 'add' 'add_ln49_64' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 1176 [1/1] (0.00ns)   --->   "%OUTPUT_addr_2 = getelementptr float* %OUTPUT_r, i64 %add_ln49_64" [src/BMM_fonctions.c:49]   --->   Operation 1176 'getelementptr' 'OUTPUT_addr_2' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1177 [1/1] (0.00ns)   --->   "%mC_addr_2 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_125" [src/BMM_fonctions.c:49]   --->   Operation 1177 'getelementptr' 'mC_addr_2' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 1178 [2/2] (3.25ns)   --->   "%mC_load_1 = load float* %mC_addr_2, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1178 'load' 'mC_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_77 : Operation 1179 [1/1] (1.42ns)   --->   "%icmp_ln49_1 = icmp eq i6 %empty_22, -1" [src/BMM_fonctions.c:49]   --->   Operation 1179 'icmp' 'icmp_ln49_1' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 15> <Delay = 8.75>
ST_78 : Operation 1180 [1/2] (3.25ns)   --->   "%mC_load_1 = load float* %mC_addr_2, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1180 'load' 'mC_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_78 : Operation 1181 [1/1] (8.75ns)   --->   "%p_req288 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1181 'writereq' 'p_req288' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 79 <SV = 16> <Delay = 8.75>
ST_79 : Operation 1182 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_2, float %mC_load_1, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1182 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 80 <SV = 17> <Delay = 8.75>
ST_80 : Operation 1183 [5/5] (8.75ns)   --->   "%p_resp289 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:49]   --->   Operation 1183 'writeresp' 'p_resp289' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 81 <SV = 18> <Delay = 8.75>
ST_81 : Operation 1184 [4/5] (8.75ns)   --->   "%p_resp289 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:49]   --->   Operation 1184 'writeresp' 'p_resp289' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 82 <SV = 19> <Delay = 8.75>
ST_82 : Operation 1185 [3/5] (8.75ns)   --->   "%p_resp289 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:49]   --->   Operation 1185 'writeresp' 'p_resp289' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 83 <SV = 20> <Delay = 8.75>
ST_83 : Operation 1186 [2/5] (8.75ns)   --->   "%p_resp289 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:49]   --->   Operation 1186 'writeresp' 'p_resp289' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 84 <SV = 21> <Delay = 8.75>
ST_84 : Operation 1187 [1/5] (8.75ns)   --->   "%p_resp289 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:49]   --->   Operation 1187 'writeresp' 'p_resp289' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_84 : Operation 1188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1188 'specloopname' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1189 [1/1] (0.00ns)   --->   "%empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1189 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1190 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_1, label %hls_label_01, label %meminst17.1" [src/BMM_fonctions.c:49]   --->   Operation 1190 'br' <Predicate = true> <Delay = 0.00>
ST_84 : Operation 1191 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_6) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1191 'specregionend' 'empty_21' <Predicate = (icmp_ln49_1)> <Delay = 0.00>
ST_84 : Operation 1192 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1192 'specregionbegin' 'tmp_8' <Predicate = (icmp_ln49_1)> <Delay = 0.00>
ST_84 : Operation 1193 [1/1] (1.76ns)   --->   "br label %meminst17.2"   --->   Operation 1193 'br' <Predicate = (icmp_ln49_1)> <Delay = 1.76>

State 85 <SV = 22> <Delay = 3.52>
ST_85 : Operation 1194 [1/1] (0.00ns)   --->   "%empty_25 = phi i6 [ 0, %hls_label_01 ], [ %add_ln49_2, %meminst17.2 ]" [src/BMM_fonctions.c:49]   --->   Operation 1194 'phi' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 1195 [1/1] (1.82ns)   --->   "%add_ln49_2 = add i6 %empty_25, 1" [src/BMM_fonctions.c:49]   --->   Operation 1195 'add' 'add_ln49_2' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1196 [1/1] (0.00ns)   --->   "%tmp_126 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 2, i6 %empty_25)" [src/BMM_fonctions.c:49]   --->   Operation 1196 'bitconcatenate' 'tmp_126' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 1197 [1/1] (3.52ns)   --->   "%add_ln49_65 = add i64 %empty, %tmp_126" [src/BMM_fonctions.c:49]   --->   Operation 1197 'add' 'add_ln49_65' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1198 [1/1] (0.00ns)   --->   "%OUTPUT_addr_3 = getelementptr float* %OUTPUT_r, i64 %add_ln49_65" [src/BMM_fonctions.c:49]   --->   Operation 1198 'getelementptr' 'OUTPUT_addr_3' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 1199 [1/1] (0.00ns)   --->   "%mC_addr_3 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_126" [src/BMM_fonctions.c:49]   --->   Operation 1199 'getelementptr' 'mC_addr_3' <Predicate = true> <Delay = 0.00>
ST_85 : Operation 1200 [2/2] (3.25ns)   --->   "%mC_load_2 = load float* %mC_addr_3, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1200 'load' 'mC_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_85 : Operation 1201 [1/1] (1.42ns)   --->   "%icmp_ln49_2 = icmp eq i6 %empty_25, -1" [src/BMM_fonctions.c:49]   --->   Operation 1201 'icmp' 'icmp_ln49_2' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 23> <Delay = 8.75>
ST_86 : Operation 1202 [1/2] (3.25ns)   --->   "%mC_load_2 = load float* %mC_addr_3, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1202 'load' 'mC_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_86 : Operation 1203 [1/1] (8.75ns)   --->   "%p_req286 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1203 'writereq' 'p_req286' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 87 <SV = 24> <Delay = 8.75>
ST_87 : Operation 1204 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_3, float %mC_load_2, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1204 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 88 <SV = 25> <Delay = 8.75>
ST_88 : Operation 1205 [5/5] (8.75ns)   --->   "%p_resp287 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:49]   --->   Operation 1205 'writeresp' 'p_resp287' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 89 <SV = 26> <Delay = 8.75>
ST_89 : Operation 1206 [4/5] (8.75ns)   --->   "%p_resp287 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:49]   --->   Operation 1206 'writeresp' 'p_resp287' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 90 <SV = 27> <Delay = 8.75>
ST_90 : Operation 1207 [3/5] (8.75ns)   --->   "%p_resp287 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:49]   --->   Operation 1207 'writeresp' 'p_resp287' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 91 <SV = 28> <Delay = 8.75>
ST_91 : Operation 1208 [2/5] (8.75ns)   --->   "%p_resp287 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:49]   --->   Operation 1208 'writeresp' 'p_resp287' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 92 <SV = 29> <Delay = 8.75>
ST_92 : Operation 1209 [1/5] (8.75ns)   --->   "%p_resp287 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:49]   --->   Operation 1209 'writeresp' 'p_resp287' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_92 : Operation 1210 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1210 'specloopname' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 1211 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1211 'speclooptripcount' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 1212 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_2, label %hls_label_02, label %meminst17.2" [src/BMM_fonctions.c:49]   --->   Operation 1212 'br' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 1213 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_8) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1213 'specregionend' 'empty_24' <Predicate = (icmp_ln49_2)> <Delay = 0.00>
ST_92 : Operation 1214 [1/1] (0.00ns)   --->   "%tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1214 'specregionbegin' 'tmp_10' <Predicate = (icmp_ln49_2)> <Delay = 0.00>
ST_92 : Operation 1215 [1/1] (1.76ns)   --->   "br label %meminst17.3"   --->   Operation 1215 'br' <Predicate = (icmp_ln49_2)> <Delay = 1.76>

State 93 <SV = 30> <Delay = 3.52>
ST_93 : Operation 1216 [1/1] (0.00ns)   --->   "%empty_28 = phi i6 [ 0, %hls_label_02 ], [ %add_ln49_3, %meminst17.3 ]" [src/BMM_fonctions.c:49]   --->   Operation 1216 'phi' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 1217 [1/1] (1.82ns)   --->   "%add_ln49_3 = add i6 %empty_28, 1" [src/BMM_fonctions.c:49]   --->   Operation 1217 'add' 'add_ln49_3' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1218 [1/1] (0.00ns)   --->   "%tmp_127 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 3, i6 %empty_28)" [src/BMM_fonctions.c:49]   --->   Operation 1218 'bitconcatenate' 'tmp_127' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 1219 [1/1] (3.52ns)   --->   "%add_ln49_66 = add i64 %empty, %tmp_127" [src/BMM_fonctions.c:49]   --->   Operation 1219 'add' 'add_ln49_66' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1220 [1/1] (0.00ns)   --->   "%OUTPUT_addr_4 = getelementptr float* %OUTPUT_r, i64 %add_ln49_66" [src/BMM_fonctions.c:49]   --->   Operation 1220 'getelementptr' 'OUTPUT_addr_4' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 1221 [1/1] (0.00ns)   --->   "%mC_addr_8 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_127" [src/BMM_fonctions.c:49]   --->   Operation 1221 'getelementptr' 'mC_addr_8' <Predicate = true> <Delay = 0.00>
ST_93 : Operation 1222 [2/2] (3.25ns)   --->   "%mC_load_3 = load float* %mC_addr_8, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1222 'load' 'mC_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_93 : Operation 1223 [1/1] (1.42ns)   --->   "%icmp_ln49_3 = icmp eq i6 %empty_28, -1" [src/BMM_fonctions.c:49]   --->   Operation 1223 'icmp' 'icmp_ln49_3' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 31> <Delay = 8.75>
ST_94 : Operation 1224 [1/2] (3.25ns)   --->   "%mC_load_3 = load float* %mC_addr_8, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1224 'load' 'mC_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_94 : Operation 1225 [1/1] (8.75ns)   --->   "%p_req284 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1225 'writereq' 'p_req284' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 95 <SV = 32> <Delay = 8.75>
ST_95 : Operation 1226 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_4, float %mC_load_3, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1226 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 96 <SV = 33> <Delay = 8.75>
ST_96 : Operation 1227 [5/5] (8.75ns)   --->   "%p_resp285 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:49]   --->   Operation 1227 'writeresp' 'p_resp285' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 97 <SV = 34> <Delay = 8.75>
ST_97 : Operation 1228 [4/5] (8.75ns)   --->   "%p_resp285 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:49]   --->   Operation 1228 'writeresp' 'p_resp285' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 98 <SV = 35> <Delay = 8.75>
ST_98 : Operation 1229 [3/5] (8.75ns)   --->   "%p_resp285 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:49]   --->   Operation 1229 'writeresp' 'p_resp285' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 99 <SV = 36> <Delay = 8.75>
ST_99 : Operation 1230 [2/5] (8.75ns)   --->   "%p_resp285 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:49]   --->   Operation 1230 'writeresp' 'p_resp285' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 100 <SV = 37> <Delay = 8.75>
ST_100 : Operation 1231 [1/5] (8.75ns)   --->   "%p_resp285 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:49]   --->   Operation 1231 'writeresp' 'p_resp285' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_100 : Operation 1232 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1232 'specloopname' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 1233 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1233 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 1234 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_3, label %hls_label_03, label %meminst17.3" [src/BMM_fonctions.c:49]   --->   Operation 1234 'br' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 1235 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_10) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1235 'specregionend' 'empty_27' <Predicate = (icmp_ln49_3)> <Delay = 0.00>
ST_100 : Operation 1236 [1/1] (0.00ns)   --->   "%tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1236 'specregionbegin' 'tmp_11' <Predicate = (icmp_ln49_3)> <Delay = 0.00>
ST_100 : Operation 1237 [1/1] (1.76ns)   --->   "br label %meminst17.4"   --->   Operation 1237 'br' <Predicate = (icmp_ln49_3)> <Delay = 1.76>

State 101 <SV = 38> <Delay = 3.52>
ST_101 : Operation 1238 [1/1] (0.00ns)   --->   "%empty_31 = phi i6 [ 0, %hls_label_03 ], [ %add_ln49_4, %meminst17.4 ]" [src/BMM_fonctions.c:49]   --->   Operation 1238 'phi' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1239 [1/1] (1.82ns)   --->   "%add_ln49_4 = add i6 %empty_31, 1" [src/BMM_fonctions.c:49]   --->   Operation 1239 'add' 'add_ln49_4' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 1240 [1/1] (0.00ns)   --->   "%tmp_128 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 4, i6 %empty_31)" [src/BMM_fonctions.c:49]   --->   Operation 1240 'bitconcatenate' 'tmp_128' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1241 [1/1] (3.52ns)   --->   "%add_ln49_67 = add i64 %empty, %tmp_128" [src/BMM_fonctions.c:49]   --->   Operation 1241 'add' 'add_ln49_67' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 1242 [1/1] (0.00ns)   --->   "%OUTPUT_addr_5 = getelementptr float* %OUTPUT_r, i64 %add_ln49_67" [src/BMM_fonctions.c:49]   --->   Operation 1242 'getelementptr' 'OUTPUT_addr_5' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1243 [1/1] (0.00ns)   --->   "%mC_addr_9 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_128" [src/BMM_fonctions.c:49]   --->   Operation 1243 'getelementptr' 'mC_addr_9' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 1244 [2/2] (3.25ns)   --->   "%mC_load_4 = load float* %mC_addr_9, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1244 'load' 'mC_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_101 : Operation 1245 [1/1] (1.42ns)   --->   "%icmp_ln49_4 = icmp eq i6 %empty_31, -1" [src/BMM_fonctions.c:49]   --->   Operation 1245 'icmp' 'icmp_ln49_4' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 102 <SV = 39> <Delay = 8.75>
ST_102 : Operation 1246 [1/2] (3.25ns)   --->   "%mC_load_4 = load float* %mC_addr_9, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1246 'load' 'mC_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_102 : Operation 1247 [1/1] (8.75ns)   --->   "%p_req282 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1247 'writereq' 'p_req282' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 103 <SV = 40> <Delay = 8.75>
ST_103 : Operation 1248 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_5, float %mC_load_4, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1248 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 104 <SV = 41> <Delay = 8.75>
ST_104 : Operation 1249 [5/5] (8.75ns)   --->   "%p_resp283 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:49]   --->   Operation 1249 'writeresp' 'p_resp283' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 105 <SV = 42> <Delay = 8.75>
ST_105 : Operation 1250 [4/5] (8.75ns)   --->   "%p_resp283 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:49]   --->   Operation 1250 'writeresp' 'p_resp283' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 106 <SV = 43> <Delay = 8.75>
ST_106 : Operation 1251 [3/5] (8.75ns)   --->   "%p_resp283 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:49]   --->   Operation 1251 'writeresp' 'p_resp283' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 107 <SV = 44> <Delay = 8.75>
ST_107 : Operation 1252 [2/5] (8.75ns)   --->   "%p_resp283 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:49]   --->   Operation 1252 'writeresp' 'p_resp283' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 108 <SV = 45> <Delay = 8.75>
ST_108 : Operation 1253 [1/5] (8.75ns)   --->   "%p_resp283 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:49]   --->   Operation 1253 'writeresp' 'p_resp283' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_108 : Operation 1254 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1254 'specloopname' <Predicate = true> <Delay = 0.00>
ST_108 : Operation 1255 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1255 'speclooptripcount' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_108 : Operation 1256 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_4, label %hls_label_04, label %meminst17.4" [src/BMM_fonctions.c:49]   --->   Operation 1256 'br' <Predicate = true> <Delay = 0.00>
ST_108 : Operation 1257 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_11) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1257 'specregionend' 'empty_30' <Predicate = (icmp_ln49_4)> <Delay = 0.00>
ST_108 : Operation 1258 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1258 'specregionbegin' 'tmp_12' <Predicate = (icmp_ln49_4)> <Delay = 0.00>
ST_108 : Operation 1259 [1/1] (1.76ns)   --->   "br label %meminst17.5"   --->   Operation 1259 'br' <Predicate = (icmp_ln49_4)> <Delay = 1.76>

State 109 <SV = 46> <Delay = 3.52>
ST_109 : Operation 1260 [1/1] (0.00ns)   --->   "%empty_34 = phi i6 [ 0, %hls_label_04 ], [ %add_ln49_5, %meminst17.5 ]" [src/BMM_fonctions.c:49]   --->   Operation 1260 'phi' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1261 [1/1] (1.82ns)   --->   "%add_ln49_5 = add i6 %empty_34, 1" [src/BMM_fonctions.c:49]   --->   Operation 1261 'add' 'add_ln49_5' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_109 : Operation 1262 [1/1] (0.00ns)   --->   "%tmp_129 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 5, i6 %empty_34)" [src/BMM_fonctions.c:49]   --->   Operation 1262 'bitconcatenate' 'tmp_129' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1263 [1/1] (3.52ns)   --->   "%add_ln49_68 = add i64 %empty, %tmp_129" [src/BMM_fonctions.c:49]   --->   Operation 1263 'add' 'add_ln49_68' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_109 : Operation 1264 [1/1] (0.00ns)   --->   "%OUTPUT_addr_6 = getelementptr float* %OUTPUT_r, i64 %add_ln49_68" [src/BMM_fonctions.c:49]   --->   Operation 1264 'getelementptr' 'OUTPUT_addr_6' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1265 [1/1] (0.00ns)   --->   "%mC_addr_10 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_129" [src/BMM_fonctions.c:49]   --->   Operation 1265 'getelementptr' 'mC_addr_10' <Predicate = true> <Delay = 0.00>
ST_109 : Operation 1266 [2/2] (3.25ns)   --->   "%mC_load_5 = load float* %mC_addr_10, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1266 'load' 'mC_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_109 : Operation 1267 [1/1] (1.42ns)   --->   "%icmp_ln49_5 = icmp eq i6 %empty_34, -1" [src/BMM_fonctions.c:49]   --->   Operation 1267 'icmp' 'icmp_ln49_5' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 110 <SV = 47> <Delay = 8.75>
ST_110 : Operation 1268 [1/2] (3.25ns)   --->   "%mC_load_5 = load float* %mC_addr_10, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1268 'load' 'mC_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_110 : Operation 1269 [1/1] (8.75ns)   --->   "%p_req280 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1269 'writereq' 'p_req280' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 111 <SV = 48> <Delay = 8.75>
ST_111 : Operation 1270 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_6, float %mC_load_5, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1270 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 112 <SV = 49> <Delay = 8.75>
ST_112 : Operation 1271 [5/5] (8.75ns)   --->   "%p_resp281 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:49]   --->   Operation 1271 'writeresp' 'p_resp281' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 113 <SV = 50> <Delay = 8.75>
ST_113 : Operation 1272 [4/5] (8.75ns)   --->   "%p_resp281 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:49]   --->   Operation 1272 'writeresp' 'p_resp281' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 114 <SV = 51> <Delay = 8.75>
ST_114 : Operation 1273 [3/5] (8.75ns)   --->   "%p_resp281 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:49]   --->   Operation 1273 'writeresp' 'p_resp281' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 115 <SV = 52> <Delay = 8.75>
ST_115 : Operation 1274 [2/5] (8.75ns)   --->   "%p_resp281 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:49]   --->   Operation 1274 'writeresp' 'p_resp281' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 116 <SV = 53> <Delay = 8.75>
ST_116 : Operation 1275 [1/5] (8.75ns)   --->   "%p_resp281 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:49]   --->   Operation 1275 'writeresp' 'p_resp281' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1276 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1276 'specloopname' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1277 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1277 'speclooptripcount' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1278 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_5, label %hls_label_05, label %meminst17.5" [src/BMM_fonctions.c:49]   --->   Operation 1278 'br' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1279 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_12) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1279 'specregionend' 'empty_33' <Predicate = (icmp_ln49_5)> <Delay = 0.00>
ST_116 : Operation 1280 [1/1] (0.00ns)   --->   "%tmp_13 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1280 'specregionbegin' 'tmp_13' <Predicate = (icmp_ln49_5)> <Delay = 0.00>
ST_116 : Operation 1281 [1/1] (1.76ns)   --->   "br label %meminst17.6"   --->   Operation 1281 'br' <Predicate = (icmp_ln49_5)> <Delay = 1.76>

State 117 <SV = 54> <Delay = 3.52>
ST_117 : Operation 1282 [1/1] (0.00ns)   --->   "%empty_37 = phi i6 [ 0, %hls_label_05 ], [ %add_ln49_6, %meminst17.6 ]" [src/BMM_fonctions.c:49]   --->   Operation 1282 'phi' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1283 [1/1] (1.82ns)   --->   "%add_ln49_6 = add i6 %empty_37, 1" [src/BMM_fonctions.c:49]   --->   Operation 1283 'add' 'add_ln49_6' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1284 [1/1] (0.00ns)   --->   "%tmp_130 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 6, i6 %empty_37)" [src/BMM_fonctions.c:49]   --->   Operation 1284 'bitconcatenate' 'tmp_130' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1285 [1/1] (3.52ns)   --->   "%add_ln49_69 = add i64 %empty, %tmp_130" [src/BMM_fonctions.c:49]   --->   Operation 1285 'add' 'add_ln49_69' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1286 [1/1] (0.00ns)   --->   "%OUTPUT_addr_7 = getelementptr float* %OUTPUT_r, i64 %add_ln49_69" [src/BMM_fonctions.c:49]   --->   Operation 1286 'getelementptr' 'OUTPUT_addr_7' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1287 [1/1] (0.00ns)   --->   "%mC_addr_11 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_130" [src/BMM_fonctions.c:49]   --->   Operation 1287 'getelementptr' 'mC_addr_11' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1288 [2/2] (3.25ns)   --->   "%mC_load_6 = load float* %mC_addr_11, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1288 'load' 'mC_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_117 : Operation 1289 [1/1] (1.42ns)   --->   "%icmp_ln49_6 = icmp eq i6 %empty_37, -1" [src/BMM_fonctions.c:49]   --->   Operation 1289 'icmp' 'icmp_ln49_6' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 118 <SV = 55> <Delay = 8.75>
ST_118 : Operation 1290 [1/2] (3.25ns)   --->   "%mC_load_6 = load float* %mC_addr_11, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1290 'load' 'mC_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_118 : Operation 1291 [1/1] (8.75ns)   --->   "%p_req278 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1291 'writereq' 'p_req278' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 119 <SV = 56> <Delay = 8.75>
ST_119 : Operation 1292 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_7, float %mC_load_6, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1292 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 120 <SV = 57> <Delay = 8.75>
ST_120 : Operation 1293 [5/5] (8.75ns)   --->   "%p_resp279 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:49]   --->   Operation 1293 'writeresp' 'p_resp279' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 121 <SV = 58> <Delay = 8.75>
ST_121 : Operation 1294 [4/5] (8.75ns)   --->   "%p_resp279 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:49]   --->   Operation 1294 'writeresp' 'p_resp279' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 122 <SV = 59> <Delay = 8.75>
ST_122 : Operation 1295 [3/5] (8.75ns)   --->   "%p_resp279 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:49]   --->   Operation 1295 'writeresp' 'p_resp279' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 123 <SV = 60> <Delay = 8.75>
ST_123 : Operation 1296 [2/5] (8.75ns)   --->   "%p_resp279 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:49]   --->   Operation 1296 'writeresp' 'p_resp279' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 124 <SV = 61> <Delay = 8.75>
ST_124 : Operation 1297 [1/5] (8.75ns)   --->   "%p_resp279 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:49]   --->   Operation 1297 'writeresp' 'p_resp279' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1298 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1298 'specloopname' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1299 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1299 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1300 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_6, label %hls_label_06, label %meminst17.6" [src/BMM_fonctions.c:49]   --->   Operation 1300 'br' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1301 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_13) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1301 'specregionend' 'empty_36' <Predicate = (icmp_ln49_6)> <Delay = 0.00>
ST_124 : Operation 1302 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1302 'specregionbegin' 'tmp_14' <Predicate = (icmp_ln49_6)> <Delay = 0.00>
ST_124 : Operation 1303 [1/1] (1.76ns)   --->   "br label %meminst17.7"   --->   Operation 1303 'br' <Predicate = (icmp_ln49_6)> <Delay = 1.76>

State 125 <SV = 62> <Delay = 3.52>
ST_125 : Operation 1304 [1/1] (0.00ns)   --->   "%empty_40 = phi i6 [ 0, %hls_label_06 ], [ %add_ln49_7, %meminst17.7 ]" [src/BMM_fonctions.c:49]   --->   Operation 1304 'phi' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1305 [1/1] (1.82ns)   --->   "%add_ln49_7 = add i6 %empty_40, 1" [src/BMM_fonctions.c:49]   --->   Operation 1305 'add' 'add_ln49_7' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_125 : Operation 1306 [1/1] (0.00ns)   --->   "%tmp_131 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 7, i6 %empty_40)" [src/BMM_fonctions.c:49]   --->   Operation 1306 'bitconcatenate' 'tmp_131' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1307 [1/1] (3.52ns)   --->   "%add_ln49_70 = add i64 %empty, %tmp_131" [src/BMM_fonctions.c:49]   --->   Operation 1307 'add' 'add_ln49_70' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_125 : Operation 1308 [1/1] (0.00ns)   --->   "%OUTPUT_addr_8 = getelementptr float* %OUTPUT_r, i64 %add_ln49_70" [src/BMM_fonctions.c:49]   --->   Operation 1308 'getelementptr' 'OUTPUT_addr_8' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1309 [1/1] (0.00ns)   --->   "%mC_addr_12 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_131" [src/BMM_fonctions.c:49]   --->   Operation 1309 'getelementptr' 'mC_addr_12' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1310 [2/2] (3.25ns)   --->   "%mC_load_7 = load float* %mC_addr_12, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1310 'load' 'mC_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_125 : Operation 1311 [1/1] (1.42ns)   --->   "%icmp_ln49_7 = icmp eq i6 %empty_40, -1" [src/BMM_fonctions.c:49]   --->   Operation 1311 'icmp' 'icmp_ln49_7' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 126 <SV = 63> <Delay = 8.75>
ST_126 : Operation 1312 [1/2] (3.25ns)   --->   "%mC_load_7 = load float* %mC_addr_12, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1312 'load' 'mC_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_126 : Operation 1313 [1/1] (8.75ns)   --->   "%p_req276 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1313 'writereq' 'p_req276' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 127 <SV = 64> <Delay = 8.75>
ST_127 : Operation 1314 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_8, float %mC_load_7, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1314 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 128 <SV = 65> <Delay = 8.75>
ST_128 : Operation 1315 [5/5] (8.75ns)   --->   "%p_resp277 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:49]   --->   Operation 1315 'writeresp' 'p_resp277' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 129 <SV = 66> <Delay = 8.75>
ST_129 : Operation 1316 [4/5] (8.75ns)   --->   "%p_resp277 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:49]   --->   Operation 1316 'writeresp' 'p_resp277' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 130 <SV = 67> <Delay = 8.75>
ST_130 : Operation 1317 [3/5] (8.75ns)   --->   "%p_resp277 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:49]   --->   Operation 1317 'writeresp' 'p_resp277' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 131 <SV = 68> <Delay = 8.75>
ST_131 : Operation 1318 [2/5] (8.75ns)   --->   "%p_resp277 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:49]   --->   Operation 1318 'writeresp' 'p_resp277' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 132 <SV = 69> <Delay = 8.75>
ST_132 : Operation 1319 [1/5] (8.75ns)   --->   "%p_resp277 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:49]   --->   Operation 1319 'writeresp' 'p_resp277' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_132 : Operation 1320 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1320 'specloopname' <Predicate = true> <Delay = 0.00>
ST_132 : Operation 1321 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1321 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_132 : Operation 1322 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_7, label %hls_label_07, label %meminst17.7" [src/BMM_fonctions.c:49]   --->   Operation 1322 'br' <Predicate = true> <Delay = 0.00>
ST_132 : Operation 1323 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_14) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1323 'specregionend' 'empty_39' <Predicate = (icmp_ln49_7)> <Delay = 0.00>
ST_132 : Operation 1324 [1/1] (0.00ns)   --->   "%tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1324 'specregionbegin' 'tmp_15' <Predicate = (icmp_ln49_7)> <Delay = 0.00>
ST_132 : Operation 1325 [1/1] (1.76ns)   --->   "br label %meminst17.8"   --->   Operation 1325 'br' <Predicate = (icmp_ln49_7)> <Delay = 1.76>

State 133 <SV = 70> <Delay = 3.52>
ST_133 : Operation 1326 [1/1] (0.00ns)   --->   "%empty_43 = phi i6 [ 0, %hls_label_07 ], [ %add_ln49_8, %meminst17.8 ]" [src/BMM_fonctions.c:49]   --->   Operation 1326 'phi' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_133 : Operation 1327 [1/1] (1.82ns)   --->   "%add_ln49_8 = add i6 %empty_43, 1" [src/BMM_fonctions.c:49]   --->   Operation 1327 'add' 'add_ln49_8' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_133 : Operation 1328 [1/1] (0.00ns)   --->   "%tmp_132 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 8, i6 %empty_43)" [src/BMM_fonctions.c:49]   --->   Operation 1328 'bitconcatenate' 'tmp_132' <Predicate = true> <Delay = 0.00>
ST_133 : Operation 1329 [1/1] (3.52ns)   --->   "%add_ln49_71 = add i64 %empty, %tmp_132" [src/BMM_fonctions.c:49]   --->   Operation 1329 'add' 'add_ln49_71' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_133 : Operation 1330 [1/1] (0.00ns)   --->   "%OUTPUT_addr_9 = getelementptr float* %OUTPUT_r, i64 %add_ln49_71" [src/BMM_fonctions.c:49]   --->   Operation 1330 'getelementptr' 'OUTPUT_addr_9' <Predicate = true> <Delay = 0.00>
ST_133 : Operation 1331 [1/1] (0.00ns)   --->   "%mC_addr_13 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_132" [src/BMM_fonctions.c:49]   --->   Operation 1331 'getelementptr' 'mC_addr_13' <Predicate = true> <Delay = 0.00>
ST_133 : Operation 1332 [2/2] (3.25ns)   --->   "%mC_load_8 = load float* %mC_addr_13, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1332 'load' 'mC_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_133 : Operation 1333 [1/1] (1.42ns)   --->   "%icmp_ln49_8 = icmp eq i6 %empty_43, -1" [src/BMM_fonctions.c:49]   --->   Operation 1333 'icmp' 'icmp_ln49_8' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 134 <SV = 71> <Delay = 8.75>
ST_134 : Operation 1334 [1/2] (3.25ns)   --->   "%mC_load_8 = load float* %mC_addr_13, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1334 'load' 'mC_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_134 : Operation 1335 [1/1] (8.75ns)   --->   "%p_req274 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1335 'writereq' 'p_req274' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 135 <SV = 72> <Delay = 8.75>
ST_135 : Operation 1336 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_9, float %mC_load_8, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1336 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 136 <SV = 73> <Delay = 8.75>
ST_136 : Operation 1337 [5/5] (8.75ns)   --->   "%p_resp275 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:49]   --->   Operation 1337 'writeresp' 'p_resp275' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 137 <SV = 74> <Delay = 8.75>
ST_137 : Operation 1338 [4/5] (8.75ns)   --->   "%p_resp275 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:49]   --->   Operation 1338 'writeresp' 'p_resp275' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 138 <SV = 75> <Delay = 8.75>
ST_138 : Operation 1339 [3/5] (8.75ns)   --->   "%p_resp275 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:49]   --->   Operation 1339 'writeresp' 'p_resp275' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 139 <SV = 76> <Delay = 8.75>
ST_139 : Operation 1340 [2/5] (8.75ns)   --->   "%p_resp275 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:49]   --->   Operation 1340 'writeresp' 'p_resp275' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 140 <SV = 77> <Delay = 8.75>
ST_140 : Operation 1341 [1/5] (8.75ns)   --->   "%p_resp275 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:49]   --->   Operation 1341 'writeresp' 'p_resp275' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_140 : Operation 1342 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1342 'specloopname' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1343 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1343 'speclooptripcount' 'empty_44' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1344 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_8, label %hls_label_08, label %meminst17.8" [src/BMM_fonctions.c:49]   --->   Operation 1344 'br' <Predicate = true> <Delay = 0.00>
ST_140 : Operation 1345 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_15) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1345 'specregionend' 'empty_42' <Predicate = (icmp_ln49_8)> <Delay = 0.00>
ST_140 : Operation 1346 [1/1] (0.00ns)   --->   "%tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1346 'specregionbegin' 'tmp_16' <Predicate = (icmp_ln49_8)> <Delay = 0.00>
ST_140 : Operation 1347 [1/1] (1.76ns)   --->   "br label %meminst17.9"   --->   Operation 1347 'br' <Predicate = (icmp_ln49_8)> <Delay = 1.76>

State 141 <SV = 78> <Delay = 3.52>
ST_141 : Operation 1348 [1/1] (0.00ns)   --->   "%empty_46 = phi i6 [ 0, %hls_label_08 ], [ %add_ln49_9, %meminst17.9 ]" [src/BMM_fonctions.c:49]   --->   Operation 1348 'phi' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1349 [1/1] (1.82ns)   --->   "%add_ln49_9 = add i6 %empty_46, 1" [src/BMM_fonctions.c:49]   --->   Operation 1349 'add' 'add_ln49_9' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_141 : Operation 1350 [1/1] (0.00ns)   --->   "%tmp_133 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 9, i6 %empty_46)" [src/BMM_fonctions.c:49]   --->   Operation 1350 'bitconcatenate' 'tmp_133' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1351 [1/1] (3.52ns)   --->   "%add_ln49_72 = add i64 %empty, %tmp_133" [src/BMM_fonctions.c:49]   --->   Operation 1351 'add' 'add_ln49_72' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_141 : Operation 1352 [1/1] (0.00ns)   --->   "%OUTPUT_addr_10 = getelementptr float* %OUTPUT_r, i64 %add_ln49_72" [src/BMM_fonctions.c:49]   --->   Operation 1352 'getelementptr' 'OUTPUT_addr_10' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1353 [1/1] (0.00ns)   --->   "%mC_addr_14 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_133" [src/BMM_fonctions.c:49]   --->   Operation 1353 'getelementptr' 'mC_addr_14' <Predicate = true> <Delay = 0.00>
ST_141 : Operation 1354 [2/2] (3.25ns)   --->   "%mC_load_9 = load float* %mC_addr_14, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1354 'load' 'mC_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_141 : Operation 1355 [1/1] (1.42ns)   --->   "%icmp_ln49_9 = icmp eq i6 %empty_46, -1" [src/BMM_fonctions.c:49]   --->   Operation 1355 'icmp' 'icmp_ln49_9' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 142 <SV = 79> <Delay = 8.75>
ST_142 : Operation 1356 [1/2] (3.25ns)   --->   "%mC_load_9 = load float* %mC_addr_14, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1356 'load' 'mC_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_142 : Operation 1357 [1/1] (8.75ns)   --->   "%p_req272 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1357 'writereq' 'p_req272' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 143 <SV = 80> <Delay = 8.75>
ST_143 : Operation 1358 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_10, float %mC_load_9, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1358 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 144 <SV = 81> <Delay = 8.75>
ST_144 : Operation 1359 [5/5] (8.75ns)   --->   "%p_resp273 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:49]   --->   Operation 1359 'writeresp' 'p_resp273' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 145 <SV = 82> <Delay = 8.75>
ST_145 : Operation 1360 [4/5] (8.75ns)   --->   "%p_resp273 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:49]   --->   Operation 1360 'writeresp' 'p_resp273' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 146 <SV = 83> <Delay = 8.75>
ST_146 : Operation 1361 [3/5] (8.75ns)   --->   "%p_resp273 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:49]   --->   Operation 1361 'writeresp' 'p_resp273' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 147 <SV = 84> <Delay = 8.75>
ST_147 : Operation 1362 [2/5] (8.75ns)   --->   "%p_resp273 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:49]   --->   Operation 1362 'writeresp' 'p_resp273' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 148 <SV = 85> <Delay = 8.75>
ST_148 : Operation 1363 [1/5] (8.75ns)   --->   "%p_resp273 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:49]   --->   Operation 1363 'writeresp' 'p_resp273' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_148 : Operation 1364 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1364 'specloopname' <Predicate = true> <Delay = 0.00>
ST_148 : Operation 1365 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1365 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_148 : Operation 1366 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_9, label %hls_label_09, label %meminst17.9" [src/BMM_fonctions.c:49]   --->   Operation 1366 'br' <Predicate = true> <Delay = 0.00>
ST_148 : Operation 1367 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1367 'specregionend' 'empty_45' <Predicate = (icmp_ln49_9)> <Delay = 0.00>
ST_148 : Operation 1368 [1/1] (0.00ns)   --->   "%tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1368 'specregionbegin' 'tmp_17' <Predicate = (icmp_ln49_9)> <Delay = 0.00>
ST_148 : Operation 1369 [1/1] (1.76ns)   --->   "br label %meminst17.10"   --->   Operation 1369 'br' <Predicate = (icmp_ln49_9)> <Delay = 1.76>

State 149 <SV = 86> <Delay = 3.52>
ST_149 : Operation 1370 [1/1] (0.00ns)   --->   "%empty_49 = phi i6 [ 0, %hls_label_09 ], [ %add_ln49_10, %meminst17.10 ]" [src/BMM_fonctions.c:49]   --->   Operation 1370 'phi' 'empty_49' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1371 [1/1] (1.82ns)   --->   "%add_ln49_10 = add i6 %empty_49, 1" [src/BMM_fonctions.c:49]   --->   Operation 1371 'add' 'add_ln49_10' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_149 : Operation 1372 [1/1] (0.00ns)   --->   "%tmp_134 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 10, i6 %empty_49)" [src/BMM_fonctions.c:49]   --->   Operation 1372 'bitconcatenate' 'tmp_134' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1373 [1/1] (3.52ns)   --->   "%add_ln49_73 = add i64 %empty, %tmp_134" [src/BMM_fonctions.c:49]   --->   Operation 1373 'add' 'add_ln49_73' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_149 : Operation 1374 [1/1] (0.00ns)   --->   "%OUTPUT_addr_11 = getelementptr float* %OUTPUT_r, i64 %add_ln49_73" [src/BMM_fonctions.c:49]   --->   Operation 1374 'getelementptr' 'OUTPUT_addr_11' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1375 [1/1] (0.00ns)   --->   "%mC_addr_15 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_134" [src/BMM_fonctions.c:49]   --->   Operation 1375 'getelementptr' 'mC_addr_15' <Predicate = true> <Delay = 0.00>
ST_149 : Operation 1376 [2/2] (3.25ns)   --->   "%mC_load_10 = load float* %mC_addr_15, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1376 'load' 'mC_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_149 : Operation 1377 [1/1] (1.42ns)   --->   "%icmp_ln49_10 = icmp eq i6 %empty_49, -1" [src/BMM_fonctions.c:49]   --->   Operation 1377 'icmp' 'icmp_ln49_10' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 150 <SV = 87> <Delay = 8.75>
ST_150 : Operation 1378 [1/2] (3.25ns)   --->   "%mC_load_10 = load float* %mC_addr_15, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1378 'load' 'mC_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_150 : Operation 1379 [1/1] (8.75ns)   --->   "%p_req270 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1379 'writereq' 'p_req270' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 151 <SV = 88> <Delay = 8.75>
ST_151 : Operation 1380 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_11, float %mC_load_10, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1380 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 152 <SV = 89> <Delay = 8.75>
ST_152 : Operation 1381 [5/5] (8.75ns)   --->   "%p_resp271 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:49]   --->   Operation 1381 'writeresp' 'p_resp271' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 153 <SV = 90> <Delay = 8.75>
ST_153 : Operation 1382 [4/5] (8.75ns)   --->   "%p_resp271 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:49]   --->   Operation 1382 'writeresp' 'p_resp271' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 154 <SV = 91> <Delay = 8.75>
ST_154 : Operation 1383 [3/5] (8.75ns)   --->   "%p_resp271 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:49]   --->   Operation 1383 'writeresp' 'p_resp271' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 155 <SV = 92> <Delay = 8.75>
ST_155 : Operation 1384 [2/5] (8.75ns)   --->   "%p_resp271 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:49]   --->   Operation 1384 'writeresp' 'p_resp271' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 156 <SV = 93> <Delay = 8.75>
ST_156 : Operation 1385 [1/5] (8.75ns)   --->   "%p_resp271 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:49]   --->   Operation 1385 'writeresp' 'p_resp271' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_156 : Operation 1386 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1386 'specloopname' <Predicate = true> <Delay = 0.00>
ST_156 : Operation 1387 [1/1] (0.00ns)   --->   "%empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1387 'speclooptripcount' 'empty_50' <Predicate = true> <Delay = 0.00>
ST_156 : Operation 1388 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_10, label %hls_label_010, label %meminst17.10" [src/BMM_fonctions.c:49]   --->   Operation 1388 'br' <Predicate = true> <Delay = 0.00>
ST_156 : Operation 1389 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_17) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1389 'specregionend' 'empty_48' <Predicate = (icmp_ln49_10)> <Delay = 0.00>
ST_156 : Operation 1390 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1390 'specregionbegin' 'tmp_18' <Predicate = (icmp_ln49_10)> <Delay = 0.00>
ST_156 : Operation 1391 [1/1] (1.76ns)   --->   "br label %meminst17.11"   --->   Operation 1391 'br' <Predicate = (icmp_ln49_10)> <Delay = 1.76>

State 157 <SV = 94> <Delay = 3.52>
ST_157 : Operation 1392 [1/1] (0.00ns)   --->   "%empty_52 = phi i6 [ 0, %hls_label_010 ], [ %add_ln49_11, %meminst17.11 ]" [src/BMM_fonctions.c:49]   --->   Operation 1392 'phi' 'empty_52' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1393 [1/1] (1.82ns)   --->   "%add_ln49_11 = add i6 %empty_52, 1" [src/BMM_fonctions.c:49]   --->   Operation 1393 'add' 'add_ln49_11' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_157 : Operation 1394 [1/1] (0.00ns)   --->   "%tmp_135 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 11, i6 %empty_52)" [src/BMM_fonctions.c:49]   --->   Operation 1394 'bitconcatenate' 'tmp_135' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1395 [1/1] (3.52ns)   --->   "%add_ln49_74 = add i64 %empty, %tmp_135" [src/BMM_fonctions.c:49]   --->   Operation 1395 'add' 'add_ln49_74' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_157 : Operation 1396 [1/1] (0.00ns)   --->   "%OUTPUT_addr_12 = getelementptr float* %OUTPUT_r, i64 %add_ln49_74" [src/BMM_fonctions.c:49]   --->   Operation 1396 'getelementptr' 'OUTPUT_addr_12' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1397 [1/1] (0.00ns)   --->   "%mC_addr_16 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_135" [src/BMM_fonctions.c:49]   --->   Operation 1397 'getelementptr' 'mC_addr_16' <Predicate = true> <Delay = 0.00>
ST_157 : Operation 1398 [2/2] (3.25ns)   --->   "%mC_load_11 = load float* %mC_addr_16, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1398 'load' 'mC_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_157 : Operation 1399 [1/1] (1.42ns)   --->   "%icmp_ln49_11 = icmp eq i6 %empty_52, -1" [src/BMM_fonctions.c:49]   --->   Operation 1399 'icmp' 'icmp_ln49_11' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 158 <SV = 95> <Delay = 8.75>
ST_158 : Operation 1400 [1/2] (3.25ns)   --->   "%mC_load_11 = load float* %mC_addr_16, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1400 'load' 'mC_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_158 : Operation 1401 [1/1] (8.75ns)   --->   "%p_req268 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1401 'writereq' 'p_req268' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 159 <SV = 96> <Delay = 8.75>
ST_159 : Operation 1402 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_12, float %mC_load_11, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1402 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 160 <SV = 97> <Delay = 8.75>
ST_160 : Operation 1403 [5/5] (8.75ns)   --->   "%p_resp269 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:49]   --->   Operation 1403 'writeresp' 'p_resp269' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 161 <SV = 98> <Delay = 8.75>
ST_161 : Operation 1404 [4/5] (8.75ns)   --->   "%p_resp269 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:49]   --->   Operation 1404 'writeresp' 'p_resp269' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 162 <SV = 99> <Delay = 8.75>
ST_162 : Operation 1405 [3/5] (8.75ns)   --->   "%p_resp269 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:49]   --->   Operation 1405 'writeresp' 'p_resp269' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 163 <SV = 100> <Delay = 8.75>
ST_163 : Operation 1406 [2/5] (8.75ns)   --->   "%p_resp269 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:49]   --->   Operation 1406 'writeresp' 'p_resp269' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 164 <SV = 101> <Delay = 8.75>
ST_164 : Operation 1407 [1/5] (8.75ns)   --->   "%p_resp269 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:49]   --->   Operation 1407 'writeresp' 'p_resp269' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_164 : Operation 1408 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1408 'specloopname' <Predicate = true> <Delay = 0.00>
ST_164 : Operation 1409 [1/1] (0.00ns)   --->   "%empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1409 'speclooptripcount' 'empty_53' <Predicate = true> <Delay = 0.00>
ST_164 : Operation 1410 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_11, label %hls_label_011, label %meminst17.11" [src/BMM_fonctions.c:49]   --->   Operation 1410 'br' <Predicate = true> <Delay = 0.00>
ST_164 : Operation 1411 [1/1] (0.00ns)   --->   "%empty_51 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_18) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1411 'specregionend' 'empty_51' <Predicate = (icmp_ln49_11)> <Delay = 0.00>
ST_164 : Operation 1412 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1412 'specregionbegin' 'tmp_19' <Predicate = (icmp_ln49_11)> <Delay = 0.00>
ST_164 : Operation 1413 [1/1] (1.76ns)   --->   "br label %meminst17.12"   --->   Operation 1413 'br' <Predicate = (icmp_ln49_11)> <Delay = 1.76>

State 165 <SV = 102> <Delay = 3.52>
ST_165 : Operation 1414 [1/1] (0.00ns)   --->   "%empty_55 = phi i6 [ 0, %hls_label_011 ], [ %add_ln49_12, %meminst17.12 ]" [src/BMM_fonctions.c:49]   --->   Operation 1414 'phi' 'empty_55' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1415 [1/1] (1.82ns)   --->   "%add_ln49_12 = add i6 %empty_55, 1" [src/BMM_fonctions.c:49]   --->   Operation 1415 'add' 'add_ln49_12' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1416 [1/1] (0.00ns)   --->   "%tmp_136 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 12, i6 %empty_55)" [src/BMM_fonctions.c:49]   --->   Operation 1416 'bitconcatenate' 'tmp_136' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1417 [1/1] (3.52ns)   --->   "%add_ln49_75 = add i64 %empty, %tmp_136" [src/BMM_fonctions.c:49]   --->   Operation 1417 'add' 'add_ln49_75' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_165 : Operation 1418 [1/1] (0.00ns)   --->   "%OUTPUT_addr_13 = getelementptr float* %OUTPUT_r, i64 %add_ln49_75" [src/BMM_fonctions.c:49]   --->   Operation 1418 'getelementptr' 'OUTPUT_addr_13' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1419 [1/1] (0.00ns)   --->   "%mC_addr_17 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_136" [src/BMM_fonctions.c:49]   --->   Operation 1419 'getelementptr' 'mC_addr_17' <Predicate = true> <Delay = 0.00>
ST_165 : Operation 1420 [2/2] (3.25ns)   --->   "%mC_load_12 = load float* %mC_addr_17, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1420 'load' 'mC_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_165 : Operation 1421 [1/1] (1.42ns)   --->   "%icmp_ln49_12 = icmp eq i6 %empty_55, -1" [src/BMM_fonctions.c:49]   --->   Operation 1421 'icmp' 'icmp_ln49_12' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 166 <SV = 103> <Delay = 8.75>
ST_166 : Operation 1422 [1/2] (3.25ns)   --->   "%mC_load_12 = load float* %mC_addr_17, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1422 'load' 'mC_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_166 : Operation 1423 [1/1] (8.75ns)   --->   "%p_req266 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1423 'writereq' 'p_req266' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 167 <SV = 104> <Delay = 8.75>
ST_167 : Operation 1424 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_13, float %mC_load_12, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1424 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 168 <SV = 105> <Delay = 8.75>
ST_168 : Operation 1425 [5/5] (8.75ns)   --->   "%p_resp267 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:49]   --->   Operation 1425 'writeresp' 'p_resp267' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 169 <SV = 106> <Delay = 8.75>
ST_169 : Operation 1426 [4/5] (8.75ns)   --->   "%p_resp267 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:49]   --->   Operation 1426 'writeresp' 'p_resp267' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 170 <SV = 107> <Delay = 8.75>
ST_170 : Operation 1427 [3/5] (8.75ns)   --->   "%p_resp267 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:49]   --->   Operation 1427 'writeresp' 'p_resp267' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 171 <SV = 108> <Delay = 8.75>
ST_171 : Operation 1428 [2/5] (8.75ns)   --->   "%p_resp267 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:49]   --->   Operation 1428 'writeresp' 'p_resp267' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 172 <SV = 109> <Delay = 8.75>
ST_172 : Operation 1429 [1/5] (8.75ns)   --->   "%p_resp267 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:49]   --->   Operation 1429 'writeresp' 'p_resp267' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_172 : Operation 1430 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1430 'specloopname' <Predicate = true> <Delay = 0.00>
ST_172 : Operation 1431 [1/1] (0.00ns)   --->   "%empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1431 'speclooptripcount' 'empty_56' <Predicate = true> <Delay = 0.00>
ST_172 : Operation 1432 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_12, label %hls_label_012, label %meminst17.12" [src/BMM_fonctions.c:49]   --->   Operation 1432 'br' <Predicate = true> <Delay = 0.00>
ST_172 : Operation 1433 [1/1] (0.00ns)   --->   "%empty_54 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_19) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1433 'specregionend' 'empty_54' <Predicate = (icmp_ln49_12)> <Delay = 0.00>
ST_172 : Operation 1434 [1/1] (0.00ns)   --->   "%tmp_20 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1434 'specregionbegin' 'tmp_20' <Predicate = (icmp_ln49_12)> <Delay = 0.00>
ST_172 : Operation 1435 [1/1] (1.76ns)   --->   "br label %meminst17.13"   --->   Operation 1435 'br' <Predicate = (icmp_ln49_12)> <Delay = 1.76>

State 173 <SV = 110> <Delay = 3.52>
ST_173 : Operation 1436 [1/1] (0.00ns)   --->   "%empty_58 = phi i6 [ 0, %hls_label_012 ], [ %add_ln49_13, %meminst17.13 ]" [src/BMM_fonctions.c:49]   --->   Operation 1436 'phi' 'empty_58' <Predicate = true> <Delay = 0.00>
ST_173 : Operation 1437 [1/1] (1.82ns)   --->   "%add_ln49_13 = add i6 %empty_58, 1" [src/BMM_fonctions.c:49]   --->   Operation 1437 'add' 'add_ln49_13' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_173 : Operation 1438 [1/1] (0.00ns)   --->   "%tmp_137 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 13, i6 %empty_58)" [src/BMM_fonctions.c:49]   --->   Operation 1438 'bitconcatenate' 'tmp_137' <Predicate = true> <Delay = 0.00>
ST_173 : Operation 1439 [1/1] (3.52ns)   --->   "%add_ln49_76 = add i64 %empty, %tmp_137" [src/BMM_fonctions.c:49]   --->   Operation 1439 'add' 'add_ln49_76' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_173 : Operation 1440 [1/1] (0.00ns)   --->   "%OUTPUT_addr_14 = getelementptr float* %OUTPUT_r, i64 %add_ln49_76" [src/BMM_fonctions.c:49]   --->   Operation 1440 'getelementptr' 'OUTPUT_addr_14' <Predicate = true> <Delay = 0.00>
ST_173 : Operation 1441 [1/1] (0.00ns)   --->   "%mC_addr_18 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_137" [src/BMM_fonctions.c:49]   --->   Operation 1441 'getelementptr' 'mC_addr_18' <Predicate = true> <Delay = 0.00>
ST_173 : Operation 1442 [2/2] (3.25ns)   --->   "%mC_load_13 = load float* %mC_addr_18, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1442 'load' 'mC_load_13' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_173 : Operation 1443 [1/1] (1.42ns)   --->   "%icmp_ln49_13 = icmp eq i6 %empty_58, -1" [src/BMM_fonctions.c:49]   --->   Operation 1443 'icmp' 'icmp_ln49_13' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 174 <SV = 111> <Delay = 8.75>
ST_174 : Operation 1444 [1/2] (3.25ns)   --->   "%mC_load_13 = load float* %mC_addr_18, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1444 'load' 'mC_load_13' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_174 : Operation 1445 [1/1] (8.75ns)   --->   "%p_req264 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1445 'writereq' 'p_req264' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 175 <SV = 112> <Delay = 8.75>
ST_175 : Operation 1446 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_14, float %mC_load_13, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1446 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 176 <SV = 113> <Delay = 8.75>
ST_176 : Operation 1447 [5/5] (8.75ns)   --->   "%p_resp265 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:49]   --->   Operation 1447 'writeresp' 'p_resp265' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 177 <SV = 114> <Delay = 8.75>
ST_177 : Operation 1448 [4/5] (8.75ns)   --->   "%p_resp265 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:49]   --->   Operation 1448 'writeresp' 'p_resp265' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 178 <SV = 115> <Delay = 8.75>
ST_178 : Operation 1449 [3/5] (8.75ns)   --->   "%p_resp265 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:49]   --->   Operation 1449 'writeresp' 'p_resp265' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 179 <SV = 116> <Delay = 8.75>
ST_179 : Operation 1450 [2/5] (8.75ns)   --->   "%p_resp265 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:49]   --->   Operation 1450 'writeresp' 'p_resp265' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 180 <SV = 117> <Delay = 8.75>
ST_180 : Operation 1451 [1/5] (8.75ns)   --->   "%p_resp265 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:49]   --->   Operation 1451 'writeresp' 'p_resp265' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_180 : Operation 1452 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1452 'specloopname' <Predicate = true> <Delay = 0.00>
ST_180 : Operation 1453 [1/1] (0.00ns)   --->   "%empty_59 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1453 'speclooptripcount' 'empty_59' <Predicate = true> <Delay = 0.00>
ST_180 : Operation 1454 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_13, label %hls_label_013, label %meminst17.13" [src/BMM_fonctions.c:49]   --->   Operation 1454 'br' <Predicate = true> <Delay = 0.00>
ST_180 : Operation 1455 [1/1] (0.00ns)   --->   "%empty_57 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_20) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1455 'specregionend' 'empty_57' <Predicate = (icmp_ln49_13)> <Delay = 0.00>
ST_180 : Operation 1456 [1/1] (0.00ns)   --->   "%tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1456 'specregionbegin' 'tmp_22' <Predicate = (icmp_ln49_13)> <Delay = 0.00>
ST_180 : Operation 1457 [1/1] (1.76ns)   --->   "br label %meminst17.14"   --->   Operation 1457 'br' <Predicate = (icmp_ln49_13)> <Delay = 1.76>

State 181 <SV = 118> <Delay = 3.52>
ST_181 : Operation 1458 [1/1] (0.00ns)   --->   "%empty_61 = phi i6 [ 0, %hls_label_013 ], [ %add_ln49_14, %meminst17.14 ]" [src/BMM_fonctions.c:49]   --->   Operation 1458 'phi' 'empty_61' <Predicate = true> <Delay = 0.00>
ST_181 : Operation 1459 [1/1] (1.82ns)   --->   "%add_ln49_14 = add i6 %empty_61, 1" [src/BMM_fonctions.c:49]   --->   Operation 1459 'add' 'add_ln49_14' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_181 : Operation 1460 [1/1] (0.00ns)   --->   "%tmp_138 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 14, i6 %empty_61)" [src/BMM_fonctions.c:49]   --->   Operation 1460 'bitconcatenate' 'tmp_138' <Predicate = true> <Delay = 0.00>
ST_181 : Operation 1461 [1/1] (3.52ns)   --->   "%add_ln49_77 = add i64 %empty, %tmp_138" [src/BMM_fonctions.c:49]   --->   Operation 1461 'add' 'add_ln49_77' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_181 : Operation 1462 [1/1] (0.00ns)   --->   "%OUTPUT_addr_15 = getelementptr float* %OUTPUT_r, i64 %add_ln49_77" [src/BMM_fonctions.c:49]   --->   Operation 1462 'getelementptr' 'OUTPUT_addr_15' <Predicate = true> <Delay = 0.00>
ST_181 : Operation 1463 [1/1] (0.00ns)   --->   "%mC_addr_19 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_138" [src/BMM_fonctions.c:49]   --->   Operation 1463 'getelementptr' 'mC_addr_19' <Predicate = true> <Delay = 0.00>
ST_181 : Operation 1464 [2/2] (3.25ns)   --->   "%mC_load_14 = load float* %mC_addr_19, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1464 'load' 'mC_load_14' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_181 : Operation 1465 [1/1] (1.42ns)   --->   "%icmp_ln49_14 = icmp eq i6 %empty_61, -1" [src/BMM_fonctions.c:49]   --->   Operation 1465 'icmp' 'icmp_ln49_14' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 182 <SV = 119> <Delay = 8.75>
ST_182 : Operation 1466 [1/2] (3.25ns)   --->   "%mC_load_14 = load float* %mC_addr_19, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1466 'load' 'mC_load_14' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_182 : Operation 1467 [1/1] (8.75ns)   --->   "%p_req262 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1467 'writereq' 'p_req262' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 183 <SV = 120> <Delay = 8.75>
ST_183 : Operation 1468 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_15, float %mC_load_14, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1468 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 184 <SV = 121> <Delay = 8.75>
ST_184 : Operation 1469 [5/5] (8.75ns)   --->   "%p_resp263 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:49]   --->   Operation 1469 'writeresp' 'p_resp263' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 185 <SV = 122> <Delay = 8.75>
ST_185 : Operation 1470 [4/5] (8.75ns)   --->   "%p_resp263 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:49]   --->   Operation 1470 'writeresp' 'p_resp263' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 186 <SV = 123> <Delay = 8.75>
ST_186 : Operation 1471 [3/5] (8.75ns)   --->   "%p_resp263 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:49]   --->   Operation 1471 'writeresp' 'p_resp263' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 187 <SV = 124> <Delay = 8.75>
ST_187 : Operation 1472 [2/5] (8.75ns)   --->   "%p_resp263 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:49]   --->   Operation 1472 'writeresp' 'p_resp263' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 188 <SV = 125> <Delay = 8.75>
ST_188 : Operation 1473 [1/5] (8.75ns)   --->   "%p_resp263 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:49]   --->   Operation 1473 'writeresp' 'p_resp263' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_188 : Operation 1474 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1474 'specloopname' <Predicate = true> <Delay = 0.00>
ST_188 : Operation 1475 [1/1] (0.00ns)   --->   "%empty_62 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1475 'speclooptripcount' 'empty_62' <Predicate = true> <Delay = 0.00>
ST_188 : Operation 1476 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_14, label %hls_label_014, label %meminst17.14" [src/BMM_fonctions.c:49]   --->   Operation 1476 'br' <Predicate = true> <Delay = 0.00>
ST_188 : Operation 1477 [1/1] (0.00ns)   --->   "%empty_60 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_22) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1477 'specregionend' 'empty_60' <Predicate = (icmp_ln49_14)> <Delay = 0.00>
ST_188 : Operation 1478 [1/1] (0.00ns)   --->   "%tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1478 'specregionbegin' 'tmp_23' <Predicate = (icmp_ln49_14)> <Delay = 0.00>
ST_188 : Operation 1479 [1/1] (1.76ns)   --->   "br label %meminst17.15"   --->   Operation 1479 'br' <Predicate = (icmp_ln49_14)> <Delay = 1.76>

State 189 <SV = 126> <Delay = 3.52>
ST_189 : Operation 1480 [1/1] (0.00ns)   --->   "%empty_64 = phi i6 [ 0, %hls_label_014 ], [ %add_ln49_15, %meminst17.15 ]" [src/BMM_fonctions.c:49]   --->   Operation 1480 'phi' 'empty_64' <Predicate = true> <Delay = 0.00>
ST_189 : Operation 1481 [1/1] (1.82ns)   --->   "%add_ln49_15 = add i6 %empty_64, 1" [src/BMM_fonctions.c:49]   --->   Operation 1481 'add' 'add_ln49_15' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_189 : Operation 1482 [1/1] (0.00ns)   --->   "%tmp_139 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 15, i6 %empty_64)" [src/BMM_fonctions.c:49]   --->   Operation 1482 'bitconcatenate' 'tmp_139' <Predicate = true> <Delay = 0.00>
ST_189 : Operation 1483 [1/1] (3.52ns)   --->   "%add_ln49_78 = add i64 %empty, %tmp_139" [src/BMM_fonctions.c:49]   --->   Operation 1483 'add' 'add_ln49_78' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_189 : Operation 1484 [1/1] (0.00ns)   --->   "%OUTPUT_addr_16 = getelementptr float* %OUTPUT_r, i64 %add_ln49_78" [src/BMM_fonctions.c:49]   --->   Operation 1484 'getelementptr' 'OUTPUT_addr_16' <Predicate = true> <Delay = 0.00>
ST_189 : Operation 1485 [1/1] (0.00ns)   --->   "%mC_addr_20 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_139" [src/BMM_fonctions.c:49]   --->   Operation 1485 'getelementptr' 'mC_addr_20' <Predicate = true> <Delay = 0.00>
ST_189 : Operation 1486 [2/2] (3.25ns)   --->   "%mC_load_15 = load float* %mC_addr_20, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1486 'load' 'mC_load_15' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_189 : Operation 1487 [1/1] (1.42ns)   --->   "%icmp_ln49_15 = icmp eq i6 %empty_64, -1" [src/BMM_fonctions.c:49]   --->   Operation 1487 'icmp' 'icmp_ln49_15' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 190 <SV = 127> <Delay = 8.75>
ST_190 : Operation 1488 [1/2] (3.25ns)   --->   "%mC_load_15 = load float* %mC_addr_20, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1488 'load' 'mC_load_15' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_190 : Operation 1489 [1/1] (8.75ns)   --->   "%p_req260 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_16, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1489 'writereq' 'p_req260' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 191 <SV = 128> <Delay = 8.75>
ST_191 : Operation 1490 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_16, float %mC_load_15, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1490 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 192 <SV = 129> <Delay = 8.75>
ST_192 : Operation 1491 [5/5] (8.75ns)   --->   "%p_resp261 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:49]   --->   Operation 1491 'writeresp' 'p_resp261' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 193 <SV = 130> <Delay = 8.75>
ST_193 : Operation 1492 [4/5] (8.75ns)   --->   "%p_resp261 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:49]   --->   Operation 1492 'writeresp' 'p_resp261' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 194 <SV = 131> <Delay = 8.75>
ST_194 : Operation 1493 [3/5] (8.75ns)   --->   "%p_resp261 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:49]   --->   Operation 1493 'writeresp' 'p_resp261' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 195 <SV = 132> <Delay = 8.75>
ST_195 : Operation 1494 [2/5] (8.75ns)   --->   "%p_resp261 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:49]   --->   Operation 1494 'writeresp' 'p_resp261' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 196 <SV = 133> <Delay = 8.75>
ST_196 : Operation 1495 [1/5] (8.75ns)   --->   "%p_resp261 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:49]   --->   Operation 1495 'writeresp' 'p_resp261' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_196 : Operation 1496 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1496 'specloopname' <Predicate = true> <Delay = 0.00>
ST_196 : Operation 1497 [1/1] (0.00ns)   --->   "%empty_65 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1497 'speclooptripcount' 'empty_65' <Predicate = true> <Delay = 0.00>
ST_196 : Operation 1498 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_15, label %hls_label_015, label %meminst17.15" [src/BMM_fonctions.c:49]   --->   Operation 1498 'br' <Predicate = true> <Delay = 0.00>
ST_196 : Operation 1499 [1/1] (0.00ns)   --->   "%empty_63 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_23) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1499 'specregionend' 'empty_63' <Predicate = (icmp_ln49_15)> <Delay = 0.00>
ST_196 : Operation 1500 [1/1] (0.00ns)   --->   "%tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1500 'specregionbegin' 'tmp_24' <Predicate = (icmp_ln49_15)> <Delay = 0.00>
ST_196 : Operation 1501 [1/1] (1.76ns)   --->   "br label %meminst17.16"   --->   Operation 1501 'br' <Predicate = (icmp_ln49_15)> <Delay = 1.76>

State 197 <SV = 134> <Delay = 3.52>
ST_197 : Operation 1502 [1/1] (0.00ns)   --->   "%empty_67 = phi i6 [ 0, %hls_label_015 ], [ %add_ln49_16, %meminst17.16 ]" [src/BMM_fonctions.c:49]   --->   Operation 1502 'phi' 'empty_67' <Predicate = true> <Delay = 0.00>
ST_197 : Operation 1503 [1/1] (1.82ns)   --->   "%add_ln49_16 = add i6 %empty_67, 1" [src/BMM_fonctions.c:49]   --->   Operation 1503 'add' 'add_ln49_16' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_197 : Operation 1504 [1/1] (0.00ns)   --->   "%tmp_140 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 16, i6 %empty_67)" [src/BMM_fonctions.c:49]   --->   Operation 1504 'bitconcatenate' 'tmp_140' <Predicate = true> <Delay = 0.00>
ST_197 : Operation 1505 [1/1] (3.52ns)   --->   "%add_ln49_79 = add i64 %empty, %tmp_140" [src/BMM_fonctions.c:49]   --->   Operation 1505 'add' 'add_ln49_79' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_197 : Operation 1506 [1/1] (0.00ns)   --->   "%OUTPUT_addr_17 = getelementptr float* %OUTPUT_r, i64 %add_ln49_79" [src/BMM_fonctions.c:49]   --->   Operation 1506 'getelementptr' 'OUTPUT_addr_17' <Predicate = true> <Delay = 0.00>
ST_197 : Operation 1507 [1/1] (0.00ns)   --->   "%mC_addr_21 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_140" [src/BMM_fonctions.c:49]   --->   Operation 1507 'getelementptr' 'mC_addr_21' <Predicate = true> <Delay = 0.00>
ST_197 : Operation 1508 [2/2] (3.25ns)   --->   "%mC_load_16 = load float* %mC_addr_21, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1508 'load' 'mC_load_16' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_197 : Operation 1509 [1/1] (1.42ns)   --->   "%icmp_ln49_16 = icmp eq i6 %empty_67, -1" [src/BMM_fonctions.c:49]   --->   Operation 1509 'icmp' 'icmp_ln49_16' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 198 <SV = 135> <Delay = 8.75>
ST_198 : Operation 1510 [1/2] (3.25ns)   --->   "%mC_load_16 = load float* %mC_addr_21, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1510 'load' 'mC_load_16' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_198 : Operation 1511 [1/1] (8.75ns)   --->   "%p_req258 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_17, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1511 'writereq' 'p_req258' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 199 <SV = 136> <Delay = 8.75>
ST_199 : Operation 1512 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_17, float %mC_load_16, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1512 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 200 <SV = 137> <Delay = 8.75>
ST_200 : Operation 1513 [5/5] (8.75ns)   --->   "%p_resp259 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:49]   --->   Operation 1513 'writeresp' 'p_resp259' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 201 <SV = 138> <Delay = 8.75>
ST_201 : Operation 1514 [4/5] (8.75ns)   --->   "%p_resp259 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:49]   --->   Operation 1514 'writeresp' 'p_resp259' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 202 <SV = 139> <Delay = 8.75>
ST_202 : Operation 1515 [3/5] (8.75ns)   --->   "%p_resp259 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:49]   --->   Operation 1515 'writeresp' 'p_resp259' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 203 <SV = 140> <Delay = 8.75>
ST_203 : Operation 1516 [2/5] (8.75ns)   --->   "%p_resp259 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:49]   --->   Operation 1516 'writeresp' 'p_resp259' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 204 <SV = 141> <Delay = 8.75>
ST_204 : Operation 1517 [1/5] (8.75ns)   --->   "%p_resp259 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:49]   --->   Operation 1517 'writeresp' 'p_resp259' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_204 : Operation 1518 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1518 'specloopname' <Predicate = true> <Delay = 0.00>
ST_204 : Operation 1519 [1/1] (0.00ns)   --->   "%empty_68 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1519 'speclooptripcount' 'empty_68' <Predicate = true> <Delay = 0.00>
ST_204 : Operation 1520 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_16, label %hls_label_016, label %meminst17.16" [src/BMM_fonctions.c:49]   --->   Operation 1520 'br' <Predicate = true> <Delay = 0.00>
ST_204 : Operation 1521 [1/1] (0.00ns)   --->   "%empty_66 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_24) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1521 'specregionend' 'empty_66' <Predicate = (icmp_ln49_16)> <Delay = 0.00>
ST_204 : Operation 1522 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1522 'specregionbegin' 'tmp_25' <Predicate = (icmp_ln49_16)> <Delay = 0.00>
ST_204 : Operation 1523 [1/1] (1.76ns)   --->   "br label %meminst17.17"   --->   Operation 1523 'br' <Predicate = (icmp_ln49_16)> <Delay = 1.76>

State 205 <SV = 142> <Delay = 3.52>
ST_205 : Operation 1524 [1/1] (0.00ns)   --->   "%empty_70 = phi i6 [ 0, %hls_label_016 ], [ %add_ln49_17, %meminst17.17 ]" [src/BMM_fonctions.c:49]   --->   Operation 1524 'phi' 'empty_70' <Predicate = true> <Delay = 0.00>
ST_205 : Operation 1525 [1/1] (1.82ns)   --->   "%add_ln49_17 = add i6 %empty_70, 1" [src/BMM_fonctions.c:49]   --->   Operation 1525 'add' 'add_ln49_17' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_205 : Operation 1526 [1/1] (0.00ns)   --->   "%tmp_141 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 17, i6 %empty_70)" [src/BMM_fonctions.c:49]   --->   Operation 1526 'bitconcatenate' 'tmp_141' <Predicate = true> <Delay = 0.00>
ST_205 : Operation 1527 [1/1] (3.52ns)   --->   "%add_ln49_80 = add i64 %empty, %tmp_141" [src/BMM_fonctions.c:49]   --->   Operation 1527 'add' 'add_ln49_80' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_205 : Operation 1528 [1/1] (0.00ns)   --->   "%OUTPUT_addr_18 = getelementptr float* %OUTPUT_r, i64 %add_ln49_80" [src/BMM_fonctions.c:49]   --->   Operation 1528 'getelementptr' 'OUTPUT_addr_18' <Predicate = true> <Delay = 0.00>
ST_205 : Operation 1529 [1/1] (0.00ns)   --->   "%mC_addr_22 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_141" [src/BMM_fonctions.c:49]   --->   Operation 1529 'getelementptr' 'mC_addr_22' <Predicate = true> <Delay = 0.00>
ST_205 : Operation 1530 [2/2] (3.25ns)   --->   "%mC_load_17 = load float* %mC_addr_22, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1530 'load' 'mC_load_17' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_205 : Operation 1531 [1/1] (1.42ns)   --->   "%icmp_ln49_17 = icmp eq i6 %empty_70, -1" [src/BMM_fonctions.c:49]   --->   Operation 1531 'icmp' 'icmp_ln49_17' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 206 <SV = 143> <Delay = 8.75>
ST_206 : Operation 1532 [1/2] (3.25ns)   --->   "%mC_load_17 = load float* %mC_addr_22, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1532 'load' 'mC_load_17' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_206 : Operation 1533 [1/1] (8.75ns)   --->   "%p_req256 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_18, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1533 'writereq' 'p_req256' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 207 <SV = 144> <Delay = 8.75>
ST_207 : Operation 1534 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_18, float %mC_load_17, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1534 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 208 <SV = 145> <Delay = 8.75>
ST_208 : Operation 1535 [5/5] (8.75ns)   --->   "%p_resp257 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:49]   --->   Operation 1535 'writeresp' 'p_resp257' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 209 <SV = 146> <Delay = 8.75>
ST_209 : Operation 1536 [4/5] (8.75ns)   --->   "%p_resp257 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:49]   --->   Operation 1536 'writeresp' 'p_resp257' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 210 <SV = 147> <Delay = 8.75>
ST_210 : Operation 1537 [3/5] (8.75ns)   --->   "%p_resp257 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:49]   --->   Operation 1537 'writeresp' 'p_resp257' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 211 <SV = 148> <Delay = 8.75>
ST_211 : Operation 1538 [2/5] (8.75ns)   --->   "%p_resp257 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:49]   --->   Operation 1538 'writeresp' 'p_resp257' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 212 <SV = 149> <Delay = 8.75>
ST_212 : Operation 1539 [1/5] (8.75ns)   --->   "%p_resp257 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:49]   --->   Operation 1539 'writeresp' 'p_resp257' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_212 : Operation 1540 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1540 'specloopname' <Predicate = true> <Delay = 0.00>
ST_212 : Operation 1541 [1/1] (0.00ns)   --->   "%empty_71 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1541 'speclooptripcount' 'empty_71' <Predicate = true> <Delay = 0.00>
ST_212 : Operation 1542 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_17, label %hls_label_017, label %meminst17.17" [src/BMM_fonctions.c:49]   --->   Operation 1542 'br' <Predicate = true> <Delay = 0.00>
ST_212 : Operation 1543 [1/1] (0.00ns)   --->   "%empty_69 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_25) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1543 'specregionend' 'empty_69' <Predicate = (icmp_ln49_17)> <Delay = 0.00>
ST_212 : Operation 1544 [1/1] (0.00ns)   --->   "%tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1544 'specregionbegin' 'tmp_26' <Predicate = (icmp_ln49_17)> <Delay = 0.00>
ST_212 : Operation 1545 [1/1] (1.76ns)   --->   "br label %meminst17.18"   --->   Operation 1545 'br' <Predicate = (icmp_ln49_17)> <Delay = 1.76>

State 213 <SV = 150> <Delay = 3.52>
ST_213 : Operation 1546 [1/1] (0.00ns)   --->   "%empty_73 = phi i6 [ 0, %hls_label_017 ], [ %add_ln49_18, %meminst17.18 ]" [src/BMM_fonctions.c:49]   --->   Operation 1546 'phi' 'empty_73' <Predicate = true> <Delay = 0.00>
ST_213 : Operation 1547 [1/1] (1.82ns)   --->   "%add_ln49_18 = add i6 %empty_73, 1" [src/BMM_fonctions.c:49]   --->   Operation 1547 'add' 'add_ln49_18' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_213 : Operation 1548 [1/1] (0.00ns)   --->   "%tmp_142 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 18, i6 %empty_73)" [src/BMM_fonctions.c:49]   --->   Operation 1548 'bitconcatenate' 'tmp_142' <Predicate = true> <Delay = 0.00>
ST_213 : Operation 1549 [1/1] (3.52ns)   --->   "%add_ln49_81 = add i64 %empty, %tmp_142" [src/BMM_fonctions.c:49]   --->   Operation 1549 'add' 'add_ln49_81' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_213 : Operation 1550 [1/1] (0.00ns)   --->   "%OUTPUT_addr_19 = getelementptr float* %OUTPUT_r, i64 %add_ln49_81" [src/BMM_fonctions.c:49]   --->   Operation 1550 'getelementptr' 'OUTPUT_addr_19' <Predicate = true> <Delay = 0.00>
ST_213 : Operation 1551 [1/1] (0.00ns)   --->   "%mC_addr_23 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_142" [src/BMM_fonctions.c:49]   --->   Operation 1551 'getelementptr' 'mC_addr_23' <Predicate = true> <Delay = 0.00>
ST_213 : Operation 1552 [2/2] (3.25ns)   --->   "%mC_load_18 = load float* %mC_addr_23, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1552 'load' 'mC_load_18' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_213 : Operation 1553 [1/1] (1.42ns)   --->   "%icmp_ln49_18 = icmp eq i6 %empty_73, -1" [src/BMM_fonctions.c:49]   --->   Operation 1553 'icmp' 'icmp_ln49_18' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 214 <SV = 151> <Delay = 8.75>
ST_214 : Operation 1554 [1/2] (3.25ns)   --->   "%mC_load_18 = load float* %mC_addr_23, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1554 'load' 'mC_load_18' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_214 : Operation 1555 [1/1] (8.75ns)   --->   "%p_req254 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_19, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1555 'writereq' 'p_req254' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 215 <SV = 152> <Delay = 8.75>
ST_215 : Operation 1556 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_19, float %mC_load_18, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1556 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 216 <SV = 153> <Delay = 8.75>
ST_216 : Operation 1557 [5/5] (8.75ns)   --->   "%p_resp255 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:49]   --->   Operation 1557 'writeresp' 'p_resp255' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 217 <SV = 154> <Delay = 8.75>
ST_217 : Operation 1558 [4/5] (8.75ns)   --->   "%p_resp255 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:49]   --->   Operation 1558 'writeresp' 'p_resp255' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 218 <SV = 155> <Delay = 8.75>
ST_218 : Operation 1559 [3/5] (8.75ns)   --->   "%p_resp255 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:49]   --->   Operation 1559 'writeresp' 'p_resp255' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 219 <SV = 156> <Delay = 8.75>
ST_219 : Operation 1560 [2/5] (8.75ns)   --->   "%p_resp255 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:49]   --->   Operation 1560 'writeresp' 'p_resp255' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 220 <SV = 157> <Delay = 8.75>
ST_220 : Operation 1561 [1/5] (8.75ns)   --->   "%p_resp255 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:49]   --->   Operation 1561 'writeresp' 'p_resp255' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_220 : Operation 1562 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1562 'specloopname' <Predicate = true> <Delay = 0.00>
ST_220 : Operation 1563 [1/1] (0.00ns)   --->   "%empty_74 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1563 'speclooptripcount' 'empty_74' <Predicate = true> <Delay = 0.00>
ST_220 : Operation 1564 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_18, label %hls_label_018, label %meminst17.18" [src/BMM_fonctions.c:49]   --->   Operation 1564 'br' <Predicate = true> <Delay = 0.00>
ST_220 : Operation 1565 [1/1] (0.00ns)   --->   "%empty_72 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_26) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1565 'specregionend' 'empty_72' <Predicate = (icmp_ln49_18)> <Delay = 0.00>
ST_220 : Operation 1566 [1/1] (0.00ns)   --->   "%tmp_27 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1566 'specregionbegin' 'tmp_27' <Predicate = (icmp_ln49_18)> <Delay = 0.00>
ST_220 : Operation 1567 [1/1] (1.76ns)   --->   "br label %meminst17.19"   --->   Operation 1567 'br' <Predicate = (icmp_ln49_18)> <Delay = 1.76>

State 221 <SV = 158> <Delay = 3.52>
ST_221 : Operation 1568 [1/1] (0.00ns)   --->   "%empty_76 = phi i6 [ 0, %hls_label_018 ], [ %add_ln49_19, %meminst17.19 ]" [src/BMM_fonctions.c:49]   --->   Operation 1568 'phi' 'empty_76' <Predicate = true> <Delay = 0.00>
ST_221 : Operation 1569 [1/1] (1.82ns)   --->   "%add_ln49_19 = add i6 %empty_76, 1" [src/BMM_fonctions.c:49]   --->   Operation 1569 'add' 'add_ln49_19' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_221 : Operation 1570 [1/1] (0.00ns)   --->   "%tmp_143 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 19, i6 %empty_76)" [src/BMM_fonctions.c:49]   --->   Operation 1570 'bitconcatenate' 'tmp_143' <Predicate = true> <Delay = 0.00>
ST_221 : Operation 1571 [1/1] (3.52ns)   --->   "%add_ln49_82 = add i64 %empty, %tmp_143" [src/BMM_fonctions.c:49]   --->   Operation 1571 'add' 'add_ln49_82' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_221 : Operation 1572 [1/1] (0.00ns)   --->   "%OUTPUT_addr_20 = getelementptr float* %OUTPUT_r, i64 %add_ln49_82" [src/BMM_fonctions.c:49]   --->   Operation 1572 'getelementptr' 'OUTPUT_addr_20' <Predicate = true> <Delay = 0.00>
ST_221 : Operation 1573 [1/1] (0.00ns)   --->   "%mC_addr_24 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_143" [src/BMM_fonctions.c:49]   --->   Operation 1573 'getelementptr' 'mC_addr_24' <Predicate = true> <Delay = 0.00>
ST_221 : Operation 1574 [2/2] (3.25ns)   --->   "%mC_load_19 = load float* %mC_addr_24, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1574 'load' 'mC_load_19' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_221 : Operation 1575 [1/1] (1.42ns)   --->   "%icmp_ln49_19 = icmp eq i6 %empty_76, -1" [src/BMM_fonctions.c:49]   --->   Operation 1575 'icmp' 'icmp_ln49_19' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 222 <SV = 159> <Delay = 8.75>
ST_222 : Operation 1576 [1/2] (3.25ns)   --->   "%mC_load_19 = load float* %mC_addr_24, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1576 'load' 'mC_load_19' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_222 : Operation 1577 [1/1] (8.75ns)   --->   "%p_req252 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_20, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1577 'writereq' 'p_req252' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 223 <SV = 160> <Delay = 8.75>
ST_223 : Operation 1578 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_20, float %mC_load_19, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1578 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 224 <SV = 161> <Delay = 8.75>
ST_224 : Operation 1579 [5/5] (8.75ns)   --->   "%p_resp253 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:49]   --->   Operation 1579 'writeresp' 'p_resp253' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 225 <SV = 162> <Delay = 8.75>
ST_225 : Operation 1580 [4/5] (8.75ns)   --->   "%p_resp253 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:49]   --->   Operation 1580 'writeresp' 'p_resp253' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 226 <SV = 163> <Delay = 8.75>
ST_226 : Operation 1581 [3/5] (8.75ns)   --->   "%p_resp253 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:49]   --->   Operation 1581 'writeresp' 'p_resp253' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 227 <SV = 164> <Delay = 8.75>
ST_227 : Operation 1582 [2/5] (8.75ns)   --->   "%p_resp253 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:49]   --->   Operation 1582 'writeresp' 'p_resp253' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 228 <SV = 165> <Delay = 8.75>
ST_228 : Operation 1583 [1/5] (8.75ns)   --->   "%p_resp253 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:49]   --->   Operation 1583 'writeresp' 'p_resp253' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_228 : Operation 1584 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1584 'specloopname' <Predicate = true> <Delay = 0.00>
ST_228 : Operation 1585 [1/1] (0.00ns)   --->   "%empty_77 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1585 'speclooptripcount' 'empty_77' <Predicate = true> <Delay = 0.00>
ST_228 : Operation 1586 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_19, label %hls_label_019, label %meminst17.19" [src/BMM_fonctions.c:49]   --->   Operation 1586 'br' <Predicate = true> <Delay = 0.00>
ST_228 : Operation 1587 [1/1] (0.00ns)   --->   "%empty_75 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_27) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1587 'specregionend' 'empty_75' <Predicate = (icmp_ln49_19)> <Delay = 0.00>
ST_228 : Operation 1588 [1/1] (0.00ns)   --->   "%tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1588 'specregionbegin' 'tmp_28' <Predicate = (icmp_ln49_19)> <Delay = 0.00>
ST_228 : Operation 1589 [1/1] (1.76ns)   --->   "br label %meminst17.20"   --->   Operation 1589 'br' <Predicate = (icmp_ln49_19)> <Delay = 1.76>

State 229 <SV = 166> <Delay = 3.52>
ST_229 : Operation 1590 [1/1] (0.00ns)   --->   "%empty_79 = phi i6 [ 0, %hls_label_019 ], [ %add_ln49_20, %meminst17.20 ]" [src/BMM_fonctions.c:49]   --->   Operation 1590 'phi' 'empty_79' <Predicate = true> <Delay = 0.00>
ST_229 : Operation 1591 [1/1] (1.82ns)   --->   "%add_ln49_20 = add i6 %empty_79, 1" [src/BMM_fonctions.c:49]   --->   Operation 1591 'add' 'add_ln49_20' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_229 : Operation 1592 [1/1] (0.00ns)   --->   "%tmp_144 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 20, i6 %empty_79)" [src/BMM_fonctions.c:49]   --->   Operation 1592 'bitconcatenate' 'tmp_144' <Predicate = true> <Delay = 0.00>
ST_229 : Operation 1593 [1/1] (3.52ns)   --->   "%add_ln49_83 = add i64 %empty, %tmp_144" [src/BMM_fonctions.c:49]   --->   Operation 1593 'add' 'add_ln49_83' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_229 : Operation 1594 [1/1] (0.00ns)   --->   "%OUTPUT_addr_21 = getelementptr float* %OUTPUT_r, i64 %add_ln49_83" [src/BMM_fonctions.c:49]   --->   Operation 1594 'getelementptr' 'OUTPUT_addr_21' <Predicate = true> <Delay = 0.00>
ST_229 : Operation 1595 [1/1] (0.00ns)   --->   "%mC_addr_25 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_144" [src/BMM_fonctions.c:49]   --->   Operation 1595 'getelementptr' 'mC_addr_25' <Predicate = true> <Delay = 0.00>
ST_229 : Operation 1596 [2/2] (3.25ns)   --->   "%mC_load_20 = load float* %mC_addr_25, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1596 'load' 'mC_load_20' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_229 : Operation 1597 [1/1] (1.42ns)   --->   "%icmp_ln49_20 = icmp eq i6 %empty_79, -1" [src/BMM_fonctions.c:49]   --->   Operation 1597 'icmp' 'icmp_ln49_20' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 230 <SV = 167> <Delay = 8.75>
ST_230 : Operation 1598 [1/2] (3.25ns)   --->   "%mC_load_20 = load float* %mC_addr_25, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1598 'load' 'mC_load_20' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_230 : Operation 1599 [1/1] (8.75ns)   --->   "%p_req250 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_21, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1599 'writereq' 'p_req250' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 231 <SV = 168> <Delay = 8.75>
ST_231 : Operation 1600 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_21, float %mC_load_20, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1600 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 232 <SV = 169> <Delay = 8.75>
ST_232 : Operation 1601 [5/5] (8.75ns)   --->   "%p_resp251 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:49]   --->   Operation 1601 'writeresp' 'p_resp251' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 233 <SV = 170> <Delay = 8.75>
ST_233 : Operation 1602 [4/5] (8.75ns)   --->   "%p_resp251 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:49]   --->   Operation 1602 'writeresp' 'p_resp251' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 234 <SV = 171> <Delay = 8.75>
ST_234 : Operation 1603 [3/5] (8.75ns)   --->   "%p_resp251 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:49]   --->   Operation 1603 'writeresp' 'p_resp251' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 235 <SV = 172> <Delay = 8.75>
ST_235 : Operation 1604 [2/5] (8.75ns)   --->   "%p_resp251 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:49]   --->   Operation 1604 'writeresp' 'p_resp251' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 236 <SV = 173> <Delay = 8.75>
ST_236 : Operation 1605 [1/5] (8.75ns)   --->   "%p_resp251 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:49]   --->   Operation 1605 'writeresp' 'p_resp251' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_236 : Operation 1606 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1606 'specloopname' <Predicate = true> <Delay = 0.00>
ST_236 : Operation 1607 [1/1] (0.00ns)   --->   "%empty_80 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1607 'speclooptripcount' 'empty_80' <Predicate = true> <Delay = 0.00>
ST_236 : Operation 1608 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_20, label %hls_label_020, label %meminst17.20" [src/BMM_fonctions.c:49]   --->   Operation 1608 'br' <Predicate = true> <Delay = 0.00>
ST_236 : Operation 1609 [1/1] (0.00ns)   --->   "%empty_78 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_28) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1609 'specregionend' 'empty_78' <Predicate = (icmp_ln49_20)> <Delay = 0.00>
ST_236 : Operation 1610 [1/1] (0.00ns)   --->   "%tmp_29 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1610 'specregionbegin' 'tmp_29' <Predicate = (icmp_ln49_20)> <Delay = 0.00>
ST_236 : Operation 1611 [1/1] (1.76ns)   --->   "br label %meminst17.21"   --->   Operation 1611 'br' <Predicate = (icmp_ln49_20)> <Delay = 1.76>

State 237 <SV = 174> <Delay = 3.52>
ST_237 : Operation 1612 [1/1] (0.00ns)   --->   "%empty_82 = phi i6 [ 0, %hls_label_020 ], [ %add_ln49_21, %meminst17.21 ]" [src/BMM_fonctions.c:49]   --->   Operation 1612 'phi' 'empty_82' <Predicate = true> <Delay = 0.00>
ST_237 : Operation 1613 [1/1] (1.82ns)   --->   "%add_ln49_21 = add i6 %empty_82, 1" [src/BMM_fonctions.c:49]   --->   Operation 1613 'add' 'add_ln49_21' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_237 : Operation 1614 [1/1] (0.00ns)   --->   "%tmp_145 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 21, i6 %empty_82)" [src/BMM_fonctions.c:49]   --->   Operation 1614 'bitconcatenate' 'tmp_145' <Predicate = true> <Delay = 0.00>
ST_237 : Operation 1615 [1/1] (3.52ns)   --->   "%add_ln49_84 = add i64 %empty, %tmp_145" [src/BMM_fonctions.c:49]   --->   Operation 1615 'add' 'add_ln49_84' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_237 : Operation 1616 [1/1] (0.00ns)   --->   "%OUTPUT_addr_22 = getelementptr float* %OUTPUT_r, i64 %add_ln49_84" [src/BMM_fonctions.c:49]   --->   Operation 1616 'getelementptr' 'OUTPUT_addr_22' <Predicate = true> <Delay = 0.00>
ST_237 : Operation 1617 [1/1] (0.00ns)   --->   "%mC_addr_26 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_145" [src/BMM_fonctions.c:49]   --->   Operation 1617 'getelementptr' 'mC_addr_26' <Predicate = true> <Delay = 0.00>
ST_237 : Operation 1618 [2/2] (3.25ns)   --->   "%mC_load_21 = load float* %mC_addr_26, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1618 'load' 'mC_load_21' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_237 : Operation 1619 [1/1] (1.42ns)   --->   "%icmp_ln49_21 = icmp eq i6 %empty_82, -1" [src/BMM_fonctions.c:49]   --->   Operation 1619 'icmp' 'icmp_ln49_21' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 238 <SV = 175> <Delay = 8.75>
ST_238 : Operation 1620 [1/2] (3.25ns)   --->   "%mC_load_21 = load float* %mC_addr_26, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1620 'load' 'mC_load_21' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_238 : Operation 1621 [1/1] (8.75ns)   --->   "%p_req248 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_22, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1621 'writereq' 'p_req248' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 239 <SV = 176> <Delay = 8.75>
ST_239 : Operation 1622 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_22, float %mC_load_21, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1622 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 240 <SV = 177> <Delay = 8.75>
ST_240 : Operation 1623 [5/5] (8.75ns)   --->   "%p_resp249 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:49]   --->   Operation 1623 'writeresp' 'p_resp249' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 241 <SV = 178> <Delay = 8.75>
ST_241 : Operation 1624 [4/5] (8.75ns)   --->   "%p_resp249 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:49]   --->   Operation 1624 'writeresp' 'p_resp249' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 242 <SV = 179> <Delay = 8.75>
ST_242 : Operation 1625 [3/5] (8.75ns)   --->   "%p_resp249 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:49]   --->   Operation 1625 'writeresp' 'p_resp249' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 243 <SV = 180> <Delay = 8.75>
ST_243 : Operation 1626 [2/5] (8.75ns)   --->   "%p_resp249 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:49]   --->   Operation 1626 'writeresp' 'p_resp249' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 244 <SV = 181> <Delay = 8.75>
ST_244 : Operation 1627 [1/5] (8.75ns)   --->   "%p_resp249 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:49]   --->   Operation 1627 'writeresp' 'p_resp249' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_244 : Operation 1628 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1628 'specloopname' <Predicate = true> <Delay = 0.00>
ST_244 : Operation 1629 [1/1] (0.00ns)   --->   "%empty_83 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1629 'speclooptripcount' 'empty_83' <Predicate = true> <Delay = 0.00>
ST_244 : Operation 1630 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_21, label %hls_label_021, label %meminst17.21" [src/BMM_fonctions.c:49]   --->   Operation 1630 'br' <Predicate = true> <Delay = 0.00>
ST_244 : Operation 1631 [1/1] (0.00ns)   --->   "%empty_81 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_29) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1631 'specregionend' 'empty_81' <Predicate = (icmp_ln49_21)> <Delay = 0.00>
ST_244 : Operation 1632 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1632 'specregionbegin' 'tmp_30' <Predicate = (icmp_ln49_21)> <Delay = 0.00>
ST_244 : Operation 1633 [1/1] (1.76ns)   --->   "br label %meminst17.22"   --->   Operation 1633 'br' <Predicate = (icmp_ln49_21)> <Delay = 1.76>

State 245 <SV = 182> <Delay = 3.52>
ST_245 : Operation 1634 [1/1] (0.00ns)   --->   "%empty_85 = phi i6 [ 0, %hls_label_021 ], [ %add_ln49_22, %meminst17.22 ]" [src/BMM_fonctions.c:49]   --->   Operation 1634 'phi' 'empty_85' <Predicate = true> <Delay = 0.00>
ST_245 : Operation 1635 [1/1] (1.82ns)   --->   "%add_ln49_22 = add i6 %empty_85, 1" [src/BMM_fonctions.c:49]   --->   Operation 1635 'add' 'add_ln49_22' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_245 : Operation 1636 [1/1] (0.00ns)   --->   "%tmp_146 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 22, i6 %empty_85)" [src/BMM_fonctions.c:49]   --->   Operation 1636 'bitconcatenate' 'tmp_146' <Predicate = true> <Delay = 0.00>
ST_245 : Operation 1637 [1/1] (3.52ns)   --->   "%add_ln49_85 = add i64 %empty, %tmp_146" [src/BMM_fonctions.c:49]   --->   Operation 1637 'add' 'add_ln49_85' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_245 : Operation 1638 [1/1] (0.00ns)   --->   "%OUTPUT_addr_23 = getelementptr float* %OUTPUT_r, i64 %add_ln49_85" [src/BMM_fonctions.c:49]   --->   Operation 1638 'getelementptr' 'OUTPUT_addr_23' <Predicate = true> <Delay = 0.00>
ST_245 : Operation 1639 [1/1] (0.00ns)   --->   "%mC_addr_27 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_146" [src/BMM_fonctions.c:49]   --->   Operation 1639 'getelementptr' 'mC_addr_27' <Predicate = true> <Delay = 0.00>
ST_245 : Operation 1640 [2/2] (3.25ns)   --->   "%mC_load_22 = load float* %mC_addr_27, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1640 'load' 'mC_load_22' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_245 : Operation 1641 [1/1] (1.42ns)   --->   "%icmp_ln49_22 = icmp eq i6 %empty_85, -1" [src/BMM_fonctions.c:49]   --->   Operation 1641 'icmp' 'icmp_ln49_22' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 246 <SV = 183> <Delay = 8.75>
ST_246 : Operation 1642 [1/2] (3.25ns)   --->   "%mC_load_22 = load float* %mC_addr_27, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1642 'load' 'mC_load_22' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_246 : Operation 1643 [1/1] (8.75ns)   --->   "%p_req246 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_23, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1643 'writereq' 'p_req246' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 247 <SV = 184> <Delay = 8.75>
ST_247 : Operation 1644 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_23, float %mC_load_22, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1644 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 248 <SV = 185> <Delay = 8.75>
ST_248 : Operation 1645 [5/5] (8.75ns)   --->   "%p_resp247 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:49]   --->   Operation 1645 'writeresp' 'p_resp247' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 249 <SV = 186> <Delay = 8.75>
ST_249 : Operation 1646 [4/5] (8.75ns)   --->   "%p_resp247 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:49]   --->   Operation 1646 'writeresp' 'p_resp247' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 250 <SV = 187> <Delay = 8.75>
ST_250 : Operation 1647 [3/5] (8.75ns)   --->   "%p_resp247 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:49]   --->   Operation 1647 'writeresp' 'p_resp247' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 251 <SV = 188> <Delay = 8.75>
ST_251 : Operation 1648 [2/5] (8.75ns)   --->   "%p_resp247 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:49]   --->   Operation 1648 'writeresp' 'p_resp247' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 252 <SV = 189> <Delay = 8.75>
ST_252 : Operation 1649 [1/5] (8.75ns)   --->   "%p_resp247 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:49]   --->   Operation 1649 'writeresp' 'p_resp247' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_252 : Operation 1650 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1650 'specloopname' <Predicate = true> <Delay = 0.00>
ST_252 : Operation 1651 [1/1] (0.00ns)   --->   "%empty_86 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1651 'speclooptripcount' 'empty_86' <Predicate = true> <Delay = 0.00>
ST_252 : Operation 1652 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_22, label %hls_label_022, label %meminst17.22" [src/BMM_fonctions.c:49]   --->   Operation 1652 'br' <Predicate = true> <Delay = 0.00>
ST_252 : Operation 1653 [1/1] (0.00ns)   --->   "%empty_84 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_30) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1653 'specregionend' 'empty_84' <Predicate = (icmp_ln49_22)> <Delay = 0.00>
ST_252 : Operation 1654 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1654 'specregionbegin' 'tmp_32' <Predicate = (icmp_ln49_22)> <Delay = 0.00>
ST_252 : Operation 1655 [1/1] (1.76ns)   --->   "br label %meminst17.23"   --->   Operation 1655 'br' <Predicate = (icmp_ln49_22)> <Delay = 1.76>

State 253 <SV = 190> <Delay = 3.52>
ST_253 : Operation 1656 [1/1] (0.00ns)   --->   "%empty_88 = phi i6 [ 0, %hls_label_022 ], [ %add_ln49_23, %meminst17.23 ]" [src/BMM_fonctions.c:49]   --->   Operation 1656 'phi' 'empty_88' <Predicate = true> <Delay = 0.00>
ST_253 : Operation 1657 [1/1] (1.82ns)   --->   "%add_ln49_23 = add i6 %empty_88, 1" [src/BMM_fonctions.c:49]   --->   Operation 1657 'add' 'add_ln49_23' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_253 : Operation 1658 [1/1] (0.00ns)   --->   "%tmp_147 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 23, i6 %empty_88)" [src/BMM_fonctions.c:49]   --->   Operation 1658 'bitconcatenate' 'tmp_147' <Predicate = true> <Delay = 0.00>
ST_253 : Operation 1659 [1/1] (3.52ns)   --->   "%add_ln49_86 = add i64 %empty, %tmp_147" [src/BMM_fonctions.c:49]   --->   Operation 1659 'add' 'add_ln49_86' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_253 : Operation 1660 [1/1] (0.00ns)   --->   "%OUTPUT_addr_24 = getelementptr float* %OUTPUT_r, i64 %add_ln49_86" [src/BMM_fonctions.c:49]   --->   Operation 1660 'getelementptr' 'OUTPUT_addr_24' <Predicate = true> <Delay = 0.00>
ST_253 : Operation 1661 [1/1] (0.00ns)   --->   "%mC_addr_28 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_147" [src/BMM_fonctions.c:49]   --->   Operation 1661 'getelementptr' 'mC_addr_28' <Predicate = true> <Delay = 0.00>
ST_253 : Operation 1662 [2/2] (3.25ns)   --->   "%mC_load_23 = load float* %mC_addr_28, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1662 'load' 'mC_load_23' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_253 : Operation 1663 [1/1] (1.42ns)   --->   "%icmp_ln49_23 = icmp eq i6 %empty_88, -1" [src/BMM_fonctions.c:49]   --->   Operation 1663 'icmp' 'icmp_ln49_23' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 254 <SV = 191> <Delay = 8.75>
ST_254 : Operation 1664 [1/2] (3.25ns)   --->   "%mC_load_23 = load float* %mC_addr_28, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1664 'load' 'mC_load_23' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_254 : Operation 1665 [1/1] (8.75ns)   --->   "%p_req244 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_24, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1665 'writereq' 'p_req244' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 255 <SV = 192> <Delay = 8.75>
ST_255 : Operation 1666 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_24, float %mC_load_23, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1666 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 256 <SV = 193> <Delay = 8.75>
ST_256 : Operation 1667 [5/5] (8.75ns)   --->   "%p_resp245 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:49]   --->   Operation 1667 'writeresp' 'p_resp245' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 257 <SV = 194> <Delay = 8.75>
ST_257 : Operation 1668 [4/5] (8.75ns)   --->   "%p_resp245 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:49]   --->   Operation 1668 'writeresp' 'p_resp245' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 258 <SV = 195> <Delay = 8.75>
ST_258 : Operation 1669 [3/5] (8.75ns)   --->   "%p_resp245 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:49]   --->   Operation 1669 'writeresp' 'p_resp245' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 259 <SV = 196> <Delay = 8.75>
ST_259 : Operation 1670 [2/5] (8.75ns)   --->   "%p_resp245 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:49]   --->   Operation 1670 'writeresp' 'p_resp245' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 260 <SV = 197> <Delay = 8.75>
ST_260 : Operation 1671 [1/5] (8.75ns)   --->   "%p_resp245 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:49]   --->   Operation 1671 'writeresp' 'p_resp245' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_260 : Operation 1672 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1672 'specloopname' <Predicate = true> <Delay = 0.00>
ST_260 : Operation 1673 [1/1] (0.00ns)   --->   "%empty_89 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1673 'speclooptripcount' 'empty_89' <Predicate = true> <Delay = 0.00>
ST_260 : Operation 1674 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_23, label %hls_label_023, label %meminst17.23" [src/BMM_fonctions.c:49]   --->   Operation 1674 'br' <Predicate = true> <Delay = 0.00>
ST_260 : Operation 1675 [1/1] (0.00ns)   --->   "%empty_87 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_32) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1675 'specregionend' 'empty_87' <Predicate = (icmp_ln49_23)> <Delay = 0.00>
ST_260 : Operation 1676 [1/1] (0.00ns)   --->   "%tmp_33 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1676 'specregionbegin' 'tmp_33' <Predicate = (icmp_ln49_23)> <Delay = 0.00>
ST_260 : Operation 1677 [1/1] (1.76ns)   --->   "br label %meminst17.24"   --->   Operation 1677 'br' <Predicate = (icmp_ln49_23)> <Delay = 1.76>

State 261 <SV = 198> <Delay = 3.52>
ST_261 : Operation 1678 [1/1] (0.00ns)   --->   "%empty_91 = phi i6 [ 0, %hls_label_023 ], [ %add_ln49_24, %meminst17.24 ]" [src/BMM_fonctions.c:49]   --->   Operation 1678 'phi' 'empty_91' <Predicate = true> <Delay = 0.00>
ST_261 : Operation 1679 [1/1] (1.82ns)   --->   "%add_ln49_24 = add i6 %empty_91, 1" [src/BMM_fonctions.c:49]   --->   Operation 1679 'add' 'add_ln49_24' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_261 : Operation 1680 [1/1] (0.00ns)   --->   "%tmp_148 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 24, i6 %empty_91)" [src/BMM_fonctions.c:49]   --->   Operation 1680 'bitconcatenate' 'tmp_148' <Predicate = true> <Delay = 0.00>
ST_261 : Operation 1681 [1/1] (3.52ns)   --->   "%add_ln49_87 = add i64 %empty, %tmp_148" [src/BMM_fonctions.c:49]   --->   Operation 1681 'add' 'add_ln49_87' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_261 : Operation 1682 [1/1] (0.00ns)   --->   "%OUTPUT_addr_25 = getelementptr float* %OUTPUT_r, i64 %add_ln49_87" [src/BMM_fonctions.c:49]   --->   Operation 1682 'getelementptr' 'OUTPUT_addr_25' <Predicate = true> <Delay = 0.00>
ST_261 : Operation 1683 [1/1] (0.00ns)   --->   "%mC_addr_29 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_148" [src/BMM_fonctions.c:49]   --->   Operation 1683 'getelementptr' 'mC_addr_29' <Predicate = true> <Delay = 0.00>
ST_261 : Operation 1684 [2/2] (3.25ns)   --->   "%mC_load_24 = load float* %mC_addr_29, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1684 'load' 'mC_load_24' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_261 : Operation 1685 [1/1] (1.42ns)   --->   "%icmp_ln49_24 = icmp eq i6 %empty_91, -1" [src/BMM_fonctions.c:49]   --->   Operation 1685 'icmp' 'icmp_ln49_24' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 262 <SV = 199> <Delay = 8.75>
ST_262 : Operation 1686 [1/2] (3.25ns)   --->   "%mC_load_24 = load float* %mC_addr_29, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1686 'load' 'mC_load_24' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_262 : Operation 1687 [1/1] (8.75ns)   --->   "%p_req242 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_25, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1687 'writereq' 'p_req242' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 263 <SV = 200> <Delay = 8.75>
ST_263 : Operation 1688 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_25, float %mC_load_24, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1688 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 264 <SV = 201> <Delay = 8.75>
ST_264 : Operation 1689 [5/5] (8.75ns)   --->   "%p_resp243 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:49]   --->   Operation 1689 'writeresp' 'p_resp243' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 265 <SV = 202> <Delay = 8.75>
ST_265 : Operation 1690 [4/5] (8.75ns)   --->   "%p_resp243 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:49]   --->   Operation 1690 'writeresp' 'p_resp243' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 266 <SV = 203> <Delay = 8.75>
ST_266 : Operation 1691 [3/5] (8.75ns)   --->   "%p_resp243 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:49]   --->   Operation 1691 'writeresp' 'p_resp243' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 267 <SV = 204> <Delay = 8.75>
ST_267 : Operation 1692 [2/5] (8.75ns)   --->   "%p_resp243 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:49]   --->   Operation 1692 'writeresp' 'p_resp243' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 268 <SV = 205> <Delay = 8.75>
ST_268 : Operation 1693 [1/5] (8.75ns)   --->   "%p_resp243 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:49]   --->   Operation 1693 'writeresp' 'p_resp243' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_268 : Operation 1694 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1694 'specloopname' <Predicate = true> <Delay = 0.00>
ST_268 : Operation 1695 [1/1] (0.00ns)   --->   "%empty_92 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1695 'speclooptripcount' 'empty_92' <Predicate = true> <Delay = 0.00>
ST_268 : Operation 1696 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_24, label %hls_label_024, label %meminst17.24" [src/BMM_fonctions.c:49]   --->   Operation 1696 'br' <Predicate = true> <Delay = 0.00>
ST_268 : Operation 1697 [1/1] (0.00ns)   --->   "%empty_90 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_33) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1697 'specregionend' 'empty_90' <Predicate = (icmp_ln49_24)> <Delay = 0.00>
ST_268 : Operation 1698 [1/1] (0.00ns)   --->   "%tmp_34 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1698 'specregionbegin' 'tmp_34' <Predicate = (icmp_ln49_24)> <Delay = 0.00>
ST_268 : Operation 1699 [1/1] (1.76ns)   --->   "br label %meminst17.25"   --->   Operation 1699 'br' <Predicate = (icmp_ln49_24)> <Delay = 1.76>

State 269 <SV = 206> <Delay = 3.52>
ST_269 : Operation 1700 [1/1] (0.00ns)   --->   "%empty_94 = phi i6 [ 0, %hls_label_024 ], [ %add_ln49_25, %meminst17.25 ]" [src/BMM_fonctions.c:49]   --->   Operation 1700 'phi' 'empty_94' <Predicate = true> <Delay = 0.00>
ST_269 : Operation 1701 [1/1] (1.82ns)   --->   "%add_ln49_25 = add i6 %empty_94, 1" [src/BMM_fonctions.c:49]   --->   Operation 1701 'add' 'add_ln49_25' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_269 : Operation 1702 [1/1] (0.00ns)   --->   "%tmp_149 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 25, i6 %empty_94)" [src/BMM_fonctions.c:49]   --->   Operation 1702 'bitconcatenate' 'tmp_149' <Predicate = true> <Delay = 0.00>
ST_269 : Operation 1703 [1/1] (3.52ns)   --->   "%add_ln49_88 = add i64 %empty, %tmp_149" [src/BMM_fonctions.c:49]   --->   Operation 1703 'add' 'add_ln49_88' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_269 : Operation 1704 [1/1] (0.00ns)   --->   "%OUTPUT_addr_26 = getelementptr float* %OUTPUT_r, i64 %add_ln49_88" [src/BMM_fonctions.c:49]   --->   Operation 1704 'getelementptr' 'OUTPUT_addr_26' <Predicate = true> <Delay = 0.00>
ST_269 : Operation 1705 [1/1] (0.00ns)   --->   "%mC_addr_30 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_149" [src/BMM_fonctions.c:49]   --->   Operation 1705 'getelementptr' 'mC_addr_30' <Predicate = true> <Delay = 0.00>
ST_269 : Operation 1706 [2/2] (3.25ns)   --->   "%mC_load_25 = load float* %mC_addr_30, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1706 'load' 'mC_load_25' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_269 : Operation 1707 [1/1] (1.42ns)   --->   "%icmp_ln49_25 = icmp eq i6 %empty_94, -1" [src/BMM_fonctions.c:49]   --->   Operation 1707 'icmp' 'icmp_ln49_25' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 270 <SV = 207> <Delay = 8.75>
ST_270 : Operation 1708 [1/2] (3.25ns)   --->   "%mC_load_25 = load float* %mC_addr_30, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1708 'load' 'mC_load_25' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_270 : Operation 1709 [1/1] (8.75ns)   --->   "%p_req240 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_26, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1709 'writereq' 'p_req240' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 271 <SV = 208> <Delay = 8.75>
ST_271 : Operation 1710 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_26, float %mC_load_25, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1710 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 272 <SV = 209> <Delay = 8.75>
ST_272 : Operation 1711 [5/5] (8.75ns)   --->   "%p_resp241 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:49]   --->   Operation 1711 'writeresp' 'p_resp241' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 273 <SV = 210> <Delay = 8.75>
ST_273 : Operation 1712 [4/5] (8.75ns)   --->   "%p_resp241 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:49]   --->   Operation 1712 'writeresp' 'p_resp241' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 274 <SV = 211> <Delay = 8.75>
ST_274 : Operation 1713 [3/5] (8.75ns)   --->   "%p_resp241 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:49]   --->   Operation 1713 'writeresp' 'p_resp241' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 275 <SV = 212> <Delay = 8.75>
ST_275 : Operation 1714 [2/5] (8.75ns)   --->   "%p_resp241 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:49]   --->   Operation 1714 'writeresp' 'p_resp241' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 276 <SV = 213> <Delay = 8.75>
ST_276 : Operation 1715 [1/5] (8.75ns)   --->   "%p_resp241 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:49]   --->   Operation 1715 'writeresp' 'p_resp241' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_276 : Operation 1716 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1716 'specloopname' <Predicate = true> <Delay = 0.00>
ST_276 : Operation 1717 [1/1] (0.00ns)   --->   "%empty_95 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1717 'speclooptripcount' 'empty_95' <Predicate = true> <Delay = 0.00>
ST_276 : Operation 1718 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_25, label %hls_label_025, label %meminst17.25" [src/BMM_fonctions.c:49]   --->   Operation 1718 'br' <Predicate = true> <Delay = 0.00>
ST_276 : Operation 1719 [1/1] (0.00ns)   --->   "%empty_93 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_34) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1719 'specregionend' 'empty_93' <Predicate = (icmp_ln49_25)> <Delay = 0.00>
ST_276 : Operation 1720 [1/1] (0.00ns)   --->   "%tmp_35 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1720 'specregionbegin' 'tmp_35' <Predicate = (icmp_ln49_25)> <Delay = 0.00>
ST_276 : Operation 1721 [1/1] (1.76ns)   --->   "br label %meminst17.26"   --->   Operation 1721 'br' <Predicate = (icmp_ln49_25)> <Delay = 1.76>

State 277 <SV = 214> <Delay = 3.52>
ST_277 : Operation 1722 [1/1] (0.00ns)   --->   "%empty_97 = phi i6 [ 0, %hls_label_025 ], [ %add_ln49_26, %meminst17.26 ]" [src/BMM_fonctions.c:49]   --->   Operation 1722 'phi' 'empty_97' <Predicate = true> <Delay = 0.00>
ST_277 : Operation 1723 [1/1] (1.82ns)   --->   "%add_ln49_26 = add i6 %empty_97, 1" [src/BMM_fonctions.c:49]   --->   Operation 1723 'add' 'add_ln49_26' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_277 : Operation 1724 [1/1] (0.00ns)   --->   "%tmp_150 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 26, i6 %empty_97)" [src/BMM_fonctions.c:49]   --->   Operation 1724 'bitconcatenate' 'tmp_150' <Predicate = true> <Delay = 0.00>
ST_277 : Operation 1725 [1/1] (3.52ns)   --->   "%add_ln49_89 = add i64 %empty, %tmp_150" [src/BMM_fonctions.c:49]   --->   Operation 1725 'add' 'add_ln49_89' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_277 : Operation 1726 [1/1] (0.00ns)   --->   "%OUTPUT_addr_27 = getelementptr float* %OUTPUT_r, i64 %add_ln49_89" [src/BMM_fonctions.c:49]   --->   Operation 1726 'getelementptr' 'OUTPUT_addr_27' <Predicate = true> <Delay = 0.00>
ST_277 : Operation 1727 [1/1] (0.00ns)   --->   "%mC_addr_31 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_150" [src/BMM_fonctions.c:49]   --->   Operation 1727 'getelementptr' 'mC_addr_31' <Predicate = true> <Delay = 0.00>
ST_277 : Operation 1728 [2/2] (3.25ns)   --->   "%mC_load_26 = load float* %mC_addr_31, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1728 'load' 'mC_load_26' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_277 : Operation 1729 [1/1] (1.42ns)   --->   "%icmp_ln49_26 = icmp eq i6 %empty_97, -1" [src/BMM_fonctions.c:49]   --->   Operation 1729 'icmp' 'icmp_ln49_26' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 278 <SV = 215> <Delay = 8.75>
ST_278 : Operation 1730 [1/2] (3.25ns)   --->   "%mC_load_26 = load float* %mC_addr_31, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1730 'load' 'mC_load_26' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_278 : Operation 1731 [1/1] (8.75ns)   --->   "%p_req238 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_27, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1731 'writereq' 'p_req238' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 279 <SV = 216> <Delay = 8.75>
ST_279 : Operation 1732 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_27, float %mC_load_26, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1732 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 280 <SV = 217> <Delay = 8.75>
ST_280 : Operation 1733 [5/5] (8.75ns)   --->   "%p_resp239 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:49]   --->   Operation 1733 'writeresp' 'p_resp239' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 281 <SV = 218> <Delay = 8.75>
ST_281 : Operation 1734 [4/5] (8.75ns)   --->   "%p_resp239 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:49]   --->   Operation 1734 'writeresp' 'p_resp239' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 282 <SV = 219> <Delay = 8.75>
ST_282 : Operation 1735 [3/5] (8.75ns)   --->   "%p_resp239 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:49]   --->   Operation 1735 'writeresp' 'p_resp239' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 283 <SV = 220> <Delay = 8.75>
ST_283 : Operation 1736 [2/5] (8.75ns)   --->   "%p_resp239 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:49]   --->   Operation 1736 'writeresp' 'p_resp239' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 284 <SV = 221> <Delay = 8.75>
ST_284 : Operation 1737 [1/5] (8.75ns)   --->   "%p_resp239 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:49]   --->   Operation 1737 'writeresp' 'p_resp239' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_284 : Operation 1738 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1738 'specloopname' <Predicate = true> <Delay = 0.00>
ST_284 : Operation 1739 [1/1] (0.00ns)   --->   "%empty_98 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1739 'speclooptripcount' 'empty_98' <Predicate = true> <Delay = 0.00>
ST_284 : Operation 1740 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_26, label %hls_label_026, label %meminst17.26" [src/BMM_fonctions.c:49]   --->   Operation 1740 'br' <Predicate = true> <Delay = 0.00>
ST_284 : Operation 1741 [1/1] (0.00ns)   --->   "%empty_96 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_35) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1741 'specregionend' 'empty_96' <Predicate = (icmp_ln49_26)> <Delay = 0.00>
ST_284 : Operation 1742 [1/1] (0.00ns)   --->   "%tmp_36 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1742 'specregionbegin' 'tmp_36' <Predicate = (icmp_ln49_26)> <Delay = 0.00>
ST_284 : Operation 1743 [1/1] (1.76ns)   --->   "br label %meminst17.27"   --->   Operation 1743 'br' <Predicate = (icmp_ln49_26)> <Delay = 1.76>

State 285 <SV = 222> <Delay = 3.52>
ST_285 : Operation 1744 [1/1] (0.00ns)   --->   "%empty_100 = phi i6 [ 0, %hls_label_026 ], [ %add_ln49_27, %meminst17.27 ]" [src/BMM_fonctions.c:49]   --->   Operation 1744 'phi' 'empty_100' <Predicate = true> <Delay = 0.00>
ST_285 : Operation 1745 [1/1] (1.82ns)   --->   "%add_ln49_27 = add i6 %empty_100, 1" [src/BMM_fonctions.c:49]   --->   Operation 1745 'add' 'add_ln49_27' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_285 : Operation 1746 [1/1] (0.00ns)   --->   "%tmp_151 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 27, i6 %empty_100)" [src/BMM_fonctions.c:49]   --->   Operation 1746 'bitconcatenate' 'tmp_151' <Predicate = true> <Delay = 0.00>
ST_285 : Operation 1747 [1/1] (3.52ns)   --->   "%add_ln49_90 = add i64 %empty, %tmp_151" [src/BMM_fonctions.c:49]   --->   Operation 1747 'add' 'add_ln49_90' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_285 : Operation 1748 [1/1] (0.00ns)   --->   "%OUTPUT_addr_28 = getelementptr float* %OUTPUT_r, i64 %add_ln49_90" [src/BMM_fonctions.c:49]   --->   Operation 1748 'getelementptr' 'OUTPUT_addr_28' <Predicate = true> <Delay = 0.00>
ST_285 : Operation 1749 [1/1] (0.00ns)   --->   "%mC_addr_32 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_151" [src/BMM_fonctions.c:49]   --->   Operation 1749 'getelementptr' 'mC_addr_32' <Predicate = true> <Delay = 0.00>
ST_285 : Operation 1750 [2/2] (3.25ns)   --->   "%mC_load_27 = load float* %mC_addr_32, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1750 'load' 'mC_load_27' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_285 : Operation 1751 [1/1] (1.42ns)   --->   "%icmp_ln49_27 = icmp eq i6 %empty_100, -1" [src/BMM_fonctions.c:49]   --->   Operation 1751 'icmp' 'icmp_ln49_27' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 286 <SV = 223> <Delay = 8.75>
ST_286 : Operation 1752 [1/2] (3.25ns)   --->   "%mC_load_27 = load float* %mC_addr_32, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1752 'load' 'mC_load_27' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_286 : Operation 1753 [1/1] (8.75ns)   --->   "%p_req236 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_28, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1753 'writereq' 'p_req236' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 287 <SV = 224> <Delay = 8.75>
ST_287 : Operation 1754 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_28, float %mC_load_27, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1754 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 288 <SV = 225> <Delay = 8.75>
ST_288 : Operation 1755 [5/5] (8.75ns)   --->   "%p_resp237 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:49]   --->   Operation 1755 'writeresp' 'p_resp237' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 289 <SV = 226> <Delay = 8.75>
ST_289 : Operation 1756 [4/5] (8.75ns)   --->   "%p_resp237 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:49]   --->   Operation 1756 'writeresp' 'p_resp237' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 290 <SV = 227> <Delay = 8.75>
ST_290 : Operation 1757 [3/5] (8.75ns)   --->   "%p_resp237 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:49]   --->   Operation 1757 'writeresp' 'p_resp237' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 291 <SV = 228> <Delay = 8.75>
ST_291 : Operation 1758 [2/5] (8.75ns)   --->   "%p_resp237 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:49]   --->   Operation 1758 'writeresp' 'p_resp237' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 292 <SV = 229> <Delay = 8.75>
ST_292 : Operation 1759 [1/5] (8.75ns)   --->   "%p_resp237 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:49]   --->   Operation 1759 'writeresp' 'p_resp237' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_292 : Operation 1760 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1760 'specloopname' <Predicate = true> <Delay = 0.00>
ST_292 : Operation 1761 [1/1] (0.00ns)   --->   "%empty_101 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1761 'speclooptripcount' 'empty_101' <Predicate = true> <Delay = 0.00>
ST_292 : Operation 1762 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_27, label %hls_label_027, label %meminst17.27" [src/BMM_fonctions.c:49]   --->   Operation 1762 'br' <Predicate = true> <Delay = 0.00>
ST_292 : Operation 1763 [1/1] (0.00ns)   --->   "%empty_99 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_36) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1763 'specregionend' 'empty_99' <Predicate = (icmp_ln49_27)> <Delay = 0.00>
ST_292 : Operation 1764 [1/1] (0.00ns)   --->   "%tmp_37 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1764 'specregionbegin' 'tmp_37' <Predicate = (icmp_ln49_27)> <Delay = 0.00>
ST_292 : Operation 1765 [1/1] (1.76ns)   --->   "br label %meminst17.28"   --->   Operation 1765 'br' <Predicate = (icmp_ln49_27)> <Delay = 1.76>

State 293 <SV = 230> <Delay = 3.52>
ST_293 : Operation 1766 [1/1] (0.00ns)   --->   "%empty_103 = phi i6 [ 0, %hls_label_027 ], [ %add_ln49_28, %meminst17.28 ]" [src/BMM_fonctions.c:49]   --->   Operation 1766 'phi' 'empty_103' <Predicate = true> <Delay = 0.00>
ST_293 : Operation 1767 [1/1] (1.82ns)   --->   "%add_ln49_28 = add i6 %empty_103, 1" [src/BMM_fonctions.c:49]   --->   Operation 1767 'add' 'add_ln49_28' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_293 : Operation 1768 [1/1] (0.00ns)   --->   "%tmp_152 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 28, i6 %empty_103)" [src/BMM_fonctions.c:49]   --->   Operation 1768 'bitconcatenate' 'tmp_152' <Predicate = true> <Delay = 0.00>
ST_293 : Operation 1769 [1/1] (3.52ns)   --->   "%add_ln49_91 = add i64 %empty, %tmp_152" [src/BMM_fonctions.c:49]   --->   Operation 1769 'add' 'add_ln49_91' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_293 : Operation 1770 [1/1] (0.00ns)   --->   "%OUTPUT_addr_29 = getelementptr float* %OUTPUT_r, i64 %add_ln49_91" [src/BMM_fonctions.c:49]   --->   Operation 1770 'getelementptr' 'OUTPUT_addr_29' <Predicate = true> <Delay = 0.00>
ST_293 : Operation 1771 [1/1] (0.00ns)   --->   "%mC_addr_33 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_152" [src/BMM_fonctions.c:49]   --->   Operation 1771 'getelementptr' 'mC_addr_33' <Predicate = true> <Delay = 0.00>
ST_293 : Operation 1772 [2/2] (3.25ns)   --->   "%mC_load_28 = load float* %mC_addr_33, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1772 'load' 'mC_load_28' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_293 : Operation 1773 [1/1] (1.42ns)   --->   "%icmp_ln49_28 = icmp eq i6 %empty_103, -1" [src/BMM_fonctions.c:49]   --->   Operation 1773 'icmp' 'icmp_ln49_28' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 294 <SV = 231> <Delay = 8.75>
ST_294 : Operation 1774 [1/2] (3.25ns)   --->   "%mC_load_28 = load float* %mC_addr_33, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1774 'load' 'mC_load_28' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_294 : Operation 1775 [1/1] (8.75ns)   --->   "%p_req234 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_29, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1775 'writereq' 'p_req234' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 295 <SV = 232> <Delay = 8.75>
ST_295 : Operation 1776 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_29, float %mC_load_28, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1776 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 296 <SV = 233> <Delay = 8.75>
ST_296 : Operation 1777 [5/5] (8.75ns)   --->   "%p_resp235 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:49]   --->   Operation 1777 'writeresp' 'p_resp235' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 297 <SV = 234> <Delay = 8.75>
ST_297 : Operation 1778 [4/5] (8.75ns)   --->   "%p_resp235 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:49]   --->   Operation 1778 'writeresp' 'p_resp235' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 298 <SV = 235> <Delay = 8.75>
ST_298 : Operation 1779 [3/5] (8.75ns)   --->   "%p_resp235 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:49]   --->   Operation 1779 'writeresp' 'p_resp235' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 299 <SV = 236> <Delay = 8.75>
ST_299 : Operation 1780 [2/5] (8.75ns)   --->   "%p_resp235 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:49]   --->   Operation 1780 'writeresp' 'p_resp235' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 300 <SV = 237> <Delay = 8.75>
ST_300 : Operation 1781 [1/5] (8.75ns)   --->   "%p_resp235 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:49]   --->   Operation 1781 'writeresp' 'p_resp235' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_300 : Operation 1782 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1782 'specloopname' <Predicate = true> <Delay = 0.00>
ST_300 : Operation 1783 [1/1] (0.00ns)   --->   "%empty_104 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1783 'speclooptripcount' 'empty_104' <Predicate = true> <Delay = 0.00>
ST_300 : Operation 1784 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_28, label %hls_label_028, label %meminst17.28" [src/BMM_fonctions.c:49]   --->   Operation 1784 'br' <Predicate = true> <Delay = 0.00>
ST_300 : Operation 1785 [1/1] (0.00ns)   --->   "%empty_102 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_37) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1785 'specregionend' 'empty_102' <Predicate = (icmp_ln49_28)> <Delay = 0.00>
ST_300 : Operation 1786 [1/1] (0.00ns)   --->   "%tmp_38 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1786 'specregionbegin' 'tmp_38' <Predicate = (icmp_ln49_28)> <Delay = 0.00>
ST_300 : Operation 1787 [1/1] (1.76ns)   --->   "br label %meminst17.29"   --->   Operation 1787 'br' <Predicate = (icmp_ln49_28)> <Delay = 1.76>

State 301 <SV = 238> <Delay = 3.52>
ST_301 : Operation 1788 [1/1] (0.00ns)   --->   "%empty_106 = phi i6 [ 0, %hls_label_028 ], [ %add_ln49_29, %meminst17.29 ]" [src/BMM_fonctions.c:49]   --->   Operation 1788 'phi' 'empty_106' <Predicate = true> <Delay = 0.00>
ST_301 : Operation 1789 [1/1] (1.82ns)   --->   "%add_ln49_29 = add i6 %empty_106, 1" [src/BMM_fonctions.c:49]   --->   Operation 1789 'add' 'add_ln49_29' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_301 : Operation 1790 [1/1] (0.00ns)   --->   "%tmp_153 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 29, i6 %empty_106)" [src/BMM_fonctions.c:49]   --->   Operation 1790 'bitconcatenate' 'tmp_153' <Predicate = true> <Delay = 0.00>
ST_301 : Operation 1791 [1/1] (3.52ns)   --->   "%add_ln49_92 = add i64 %empty, %tmp_153" [src/BMM_fonctions.c:49]   --->   Operation 1791 'add' 'add_ln49_92' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_301 : Operation 1792 [1/1] (0.00ns)   --->   "%OUTPUT_addr_30 = getelementptr float* %OUTPUT_r, i64 %add_ln49_92" [src/BMM_fonctions.c:49]   --->   Operation 1792 'getelementptr' 'OUTPUT_addr_30' <Predicate = true> <Delay = 0.00>
ST_301 : Operation 1793 [1/1] (0.00ns)   --->   "%mC_addr_34 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_153" [src/BMM_fonctions.c:49]   --->   Operation 1793 'getelementptr' 'mC_addr_34' <Predicate = true> <Delay = 0.00>
ST_301 : Operation 1794 [2/2] (3.25ns)   --->   "%mC_load_29 = load float* %mC_addr_34, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1794 'load' 'mC_load_29' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_301 : Operation 1795 [1/1] (1.42ns)   --->   "%icmp_ln49_29 = icmp eq i6 %empty_106, -1" [src/BMM_fonctions.c:49]   --->   Operation 1795 'icmp' 'icmp_ln49_29' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 302 <SV = 239> <Delay = 8.75>
ST_302 : Operation 1796 [1/2] (3.25ns)   --->   "%mC_load_29 = load float* %mC_addr_34, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1796 'load' 'mC_load_29' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_302 : Operation 1797 [1/1] (8.75ns)   --->   "%p_req232 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_30, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1797 'writereq' 'p_req232' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 303 <SV = 240> <Delay = 8.75>
ST_303 : Operation 1798 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_30, float %mC_load_29, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1798 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 304 <SV = 241> <Delay = 8.75>
ST_304 : Operation 1799 [5/5] (8.75ns)   --->   "%p_resp233 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:49]   --->   Operation 1799 'writeresp' 'p_resp233' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 305 <SV = 242> <Delay = 8.75>
ST_305 : Operation 1800 [4/5] (8.75ns)   --->   "%p_resp233 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:49]   --->   Operation 1800 'writeresp' 'p_resp233' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 306 <SV = 243> <Delay = 8.75>
ST_306 : Operation 1801 [3/5] (8.75ns)   --->   "%p_resp233 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:49]   --->   Operation 1801 'writeresp' 'p_resp233' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 307 <SV = 244> <Delay = 8.75>
ST_307 : Operation 1802 [2/5] (8.75ns)   --->   "%p_resp233 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:49]   --->   Operation 1802 'writeresp' 'p_resp233' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 308 <SV = 245> <Delay = 8.75>
ST_308 : Operation 1803 [1/5] (8.75ns)   --->   "%p_resp233 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:49]   --->   Operation 1803 'writeresp' 'p_resp233' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_308 : Operation 1804 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1804 'specloopname' <Predicate = true> <Delay = 0.00>
ST_308 : Operation 1805 [1/1] (0.00ns)   --->   "%empty_107 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1805 'speclooptripcount' 'empty_107' <Predicate = true> <Delay = 0.00>
ST_308 : Operation 1806 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_29, label %hls_label_029, label %meminst17.29" [src/BMM_fonctions.c:49]   --->   Operation 1806 'br' <Predicate = true> <Delay = 0.00>
ST_308 : Operation 1807 [1/1] (0.00ns)   --->   "%empty_105 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_38) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1807 'specregionend' 'empty_105' <Predicate = (icmp_ln49_29)> <Delay = 0.00>
ST_308 : Operation 1808 [1/1] (0.00ns)   --->   "%tmp_39 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1808 'specregionbegin' 'tmp_39' <Predicate = (icmp_ln49_29)> <Delay = 0.00>
ST_308 : Operation 1809 [1/1] (1.76ns)   --->   "br label %meminst17.30"   --->   Operation 1809 'br' <Predicate = (icmp_ln49_29)> <Delay = 1.76>

State 309 <SV = 246> <Delay = 3.52>
ST_309 : Operation 1810 [1/1] (0.00ns)   --->   "%empty_109 = phi i6 [ 0, %hls_label_029 ], [ %add_ln49_30, %meminst17.30 ]" [src/BMM_fonctions.c:49]   --->   Operation 1810 'phi' 'empty_109' <Predicate = true> <Delay = 0.00>
ST_309 : Operation 1811 [1/1] (1.82ns)   --->   "%add_ln49_30 = add i6 %empty_109, 1" [src/BMM_fonctions.c:49]   --->   Operation 1811 'add' 'add_ln49_30' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_309 : Operation 1812 [1/1] (0.00ns)   --->   "%tmp_154 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 30, i6 %empty_109)" [src/BMM_fonctions.c:49]   --->   Operation 1812 'bitconcatenate' 'tmp_154' <Predicate = true> <Delay = 0.00>
ST_309 : Operation 1813 [1/1] (3.52ns)   --->   "%add_ln49_93 = add i64 %empty, %tmp_154" [src/BMM_fonctions.c:49]   --->   Operation 1813 'add' 'add_ln49_93' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_309 : Operation 1814 [1/1] (0.00ns)   --->   "%OUTPUT_addr_31 = getelementptr float* %OUTPUT_r, i64 %add_ln49_93" [src/BMM_fonctions.c:49]   --->   Operation 1814 'getelementptr' 'OUTPUT_addr_31' <Predicate = true> <Delay = 0.00>
ST_309 : Operation 1815 [1/1] (0.00ns)   --->   "%mC_addr_35 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_154" [src/BMM_fonctions.c:49]   --->   Operation 1815 'getelementptr' 'mC_addr_35' <Predicate = true> <Delay = 0.00>
ST_309 : Operation 1816 [2/2] (3.25ns)   --->   "%mC_load_30 = load float* %mC_addr_35, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1816 'load' 'mC_load_30' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_309 : Operation 1817 [1/1] (1.42ns)   --->   "%icmp_ln49_30 = icmp eq i6 %empty_109, -1" [src/BMM_fonctions.c:49]   --->   Operation 1817 'icmp' 'icmp_ln49_30' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 310 <SV = 247> <Delay = 8.75>
ST_310 : Operation 1818 [1/2] (3.25ns)   --->   "%mC_load_30 = load float* %mC_addr_35, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1818 'load' 'mC_load_30' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_310 : Operation 1819 [1/1] (8.75ns)   --->   "%p_req230 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_31, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1819 'writereq' 'p_req230' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 311 <SV = 248> <Delay = 8.75>
ST_311 : Operation 1820 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_31, float %mC_load_30, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1820 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 312 <SV = 249> <Delay = 8.75>
ST_312 : Operation 1821 [5/5] (8.75ns)   --->   "%p_resp231 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:49]   --->   Operation 1821 'writeresp' 'p_resp231' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 313 <SV = 250> <Delay = 8.75>
ST_313 : Operation 1822 [4/5] (8.75ns)   --->   "%p_resp231 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:49]   --->   Operation 1822 'writeresp' 'p_resp231' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 314 <SV = 251> <Delay = 8.75>
ST_314 : Operation 1823 [3/5] (8.75ns)   --->   "%p_resp231 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:49]   --->   Operation 1823 'writeresp' 'p_resp231' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 315 <SV = 252> <Delay = 8.75>
ST_315 : Operation 1824 [2/5] (8.75ns)   --->   "%p_resp231 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:49]   --->   Operation 1824 'writeresp' 'p_resp231' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 316 <SV = 253> <Delay = 8.75>
ST_316 : Operation 1825 [1/5] (8.75ns)   --->   "%p_resp231 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:49]   --->   Operation 1825 'writeresp' 'p_resp231' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_316 : Operation 1826 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1826 'specloopname' <Predicate = true> <Delay = 0.00>
ST_316 : Operation 1827 [1/1] (0.00ns)   --->   "%empty_110 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1827 'speclooptripcount' 'empty_110' <Predicate = true> <Delay = 0.00>
ST_316 : Operation 1828 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_30, label %hls_label_030, label %meminst17.30" [src/BMM_fonctions.c:49]   --->   Operation 1828 'br' <Predicate = true> <Delay = 0.00>
ST_316 : Operation 1829 [1/1] (0.00ns)   --->   "%empty_108 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_39) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1829 'specregionend' 'empty_108' <Predicate = (icmp_ln49_30)> <Delay = 0.00>
ST_316 : Operation 1830 [1/1] (0.00ns)   --->   "%tmp_40 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1830 'specregionbegin' 'tmp_40' <Predicate = (icmp_ln49_30)> <Delay = 0.00>
ST_316 : Operation 1831 [1/1] (1.76ns)   --->   "br label %meminst17.31"   --->   Operation 1831 'br' <Predicate = (icmp_ln49_30)> <Delay = 1.76>

State 317 <SV = 254> <Delay = 3.52>
ST_317 : Operation 1832 [1/1] (0.00ns)   --->   "%empty_112 = phi i6 [ 0, %hls_label_030 ], [ %add_ln49_31, %meminst17.31 ]" [src/BMM_fonctions.c:49]   --->   Operation 1832 'phi' 'empty_112' <Predicate = true> <Delay = 0.00>
ST_317 : Operation 1833 [1/1] (1.82ns)   --->   "%add_ln49_31 = add i6 %empty_112, 1" [src/BMM_fonctions.c:49]   --->   Operation 1833 'add' 'add_ln49_31' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_317 : Operation 1834 [1/1] (0.00ns)   --->   "%tmp_155 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 31, i6 %empty_112)" [src/BMM_fonctions.c:49]   --->   Operation 1834 'bitconcatenate' 'tmp_155' <Predicate = true> <Delay = 0.00>
ST_317 : Operation 1835 [1/1] (3.52ns)   --->   "%add_ln49_94 = add i64 %empty, %tmp_155" [src/BMM_fonctions.c:49]   --->   Operation 1835 'add' 'add_ln49_94' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_317 : Operation 1836 [1/1] (0.00ns)   --->   "%OUTPUT_addr_32 = getelementptr float* %OUTPUT_r, i64 %add_ln49_94" [src/BMM_fonctions.c:49]   --->   Operation 1836 'getelementptr' 'OUTPUT_addr_32' <Predicate = true> <Delay = 0.00>
ST_317 : Operation 1837 [1/1] (0.00ns)   --->   "%mC_addr_36 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_155" [src/BMM_fonctions.c:49]   --->   Operation 1837 'getelementptr' 'mC_addr_36' <Predicate = true> <Delay = 0.00>
ST_317 : Operation 1838 [2/2] (3.25ns)   --->   "%mC_load_31 = load float* %mC_addr_36, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1838 'load' 'mC_load_31' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_317 : Operation 1839 [1/1] (1.42ns)   --->   "%icmp_ln49_31 = icmp eq i6 %empty_112, -1" [src/BMM_fonctions.c:49]   --->   Operation 1839 'icmp' 'icmp_ln49_31' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 318 <SV = 255> <Delay = 8.75>
ST_318 : Operation 1840 [1/2] (3.25ns)   --->   "%mC_load_31 = load float* %mC_addr_36, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1840 'load' 'mC_load_31' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_318 : Operation 1841 [1/1] (8.75ns)   --->   "%p_req228 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_32, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1841 'writereq' 'p_req228' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 319 <SV = 256> <Delay = 8.75>
ST_319 : Operation 1842 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_32, float %mC_load_31, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1842 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 320 <SV = 257> <Delay = 8.75>
ST_320 : Operation 1843 [5/5] (8.75ns)   --->   "%p_resp229 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_32)" [src/BMM_fonctions.c:49]   --->   Operation 1843 'writeresp' 'p_resp229' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 321 <SV = 258> <Delay = 8.75>
ST_321 : Operation 1844 [4/5] (8.75ns)   --->   "%p_resp229 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_32)" [src/BMM_fonctions.c:49]   --->   Operation 1844 'writeresp' 'p_resp229' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 322 <SV = 259> <Delay = 8.75>
ST_322 : Operation 1845 [3/5] (8.75ns)   --->   "%p_resp229 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_32)" [src/BMM_fonctions.c:49]   --->   Operation 1845 'writeresp' 'p_resp229' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 323 <SV = 260> <Delay = 8.75>
ST_323 : Operation 1846 [2/5] (8.75ns)   --->   "%p_resp229 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_32)" [src/BMM_fonctions.c:49]   --->   Operation 1846 'writeresp' 'p_resp229' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 324 <SV = 261> <Delay = 8.75>
ST_324 : Operation 1847 [1/5] (8.75ns)   --->   "%p_resp229 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_32)" [src/BMM_fonctions.c:49]   --->   Operation 1847 'writeresp' 'p_resp229' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_324 : Operation 1848 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1848 'specloopname' <Predicate = true> <Delay = 0.00>
ST_324 : Operation 1849 [1/1] (0.00ns)   --->   "%empty_113 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1849 'speclooptripcount' 'empty_113' <Predicate = true> <Delay = 0.00>
ST_324 : Operation 1850 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_31, label %hls_label_031, label %meminst17.31" [src/BMM_fonctions.c:49]   --->   Operation 1850 'br' <Predicate = true> <Delay = 0.00>
ST_324 : Operation 1851 [1/1] (0.00ns)   --->   "%empty_111 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_40) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1851 'specregionend' 'empty_111' <Predicate = (icmp_ln49_31)> <Delay = 0.00>
ST_324 : Operation 1852 [1/1] (0.00ns)   --->   "%tmp_41 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1852 'specregionbegin' 'tmp_41' <Predicate = (icmp_ln49_31)> <Delay = 0.00>
ST_324 : Operation 1853 [1/1] (1.76ns)   --->   "br label %meminst17.32"   --->   Operation 1853 'br' <Predicate = (icmp_ln49_31)> <Delay = 1.76>

State 325 <SV = 262> <Delay = 3.52>
ST_325 : Operation 1854 [1/1] (0.00ns)   --->   "%empty_115 = phi i6 [ 0, %hls_label_031 ], [ %add_ln49_32, %meminst17.32 ]" [src/BMM_fonctions.c:49]   --->   Operation 1854 'phi' 'empty_115' <Predicate = true> <Delay = 0.00>
ST_325 : Operation 1855 [1/1] (1.82ns)   --->   "%add_ln49_32 = add i6 %empty_115, 1" [src/BMM_fonctions.c:49]   --->   Operation 1855 'add' 'add_ln49_32' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_325 : Operation 1856 [1/1] (0.00ns)   --->   "%tmp_156 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 32, i6 %empty_115)" [src/BMM_fonctions.c:49]   --->   Operation 1856 'bitconcatenate' 'tmp_156' <Predicate = true> <Delay = 0.00>
ST_325 : Operation 1857 [1/1] (3.52ns)   --->   "%add_ln49_95 = add i64 %empty, %tmp_156" [src/BMM_fonctions.c:49]   --->   Operation 1857 'add' 'add_ln49_95' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_325 : Operation 1858 [1/1] (0.00ns)   --->   "%OUTPUT_addr_33 = getelementptr float* %OUTPUT_r, i64 %add_ln49_95" [src/BMM_fonctions.c:49]   --->   Operation 1858 'getelementptr' 'OUTPUT_addr_33' <Predicate = true> <Delay = 0.00>
ST_325 : Operation 1859 [1/1] (0.00ns)   --->   "%mC_addr_37 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_156" [src/BMM_fonctions.c:49]   --->   Operation 1859 'getelementptr' 'mC_addr_37' <Predicate = true> <Delay = 0.00>
ST_325 : Operation 1860 [2/2] (3.25ns)   --->   "%mC_load_32 = load float* %mC_addr_37, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1860 'load' 'mC_load_32' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_325 : Operation 1861 [1/1] (1.42ns)   --->   "%icmp_ln49_32 = icmp eq i6 %empty_115, -1" [src/BMM_fonctions.c:49]   --->   Operation 1861 'icmp' 'icmp_ln49_32' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 326 <SV = 263> <Delay = 8.75>
ST_326 : Operation 1862 [1/2] (3.25ns)   --->   "%mC_load_32 = load float* %mC_addr_37, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1862 'load' 'mC_load_32' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_326 : Operation 1863 [1/1] (8.75ns)   --->   "%p_req226 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_33, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1863 'writereq' 'p_req226' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 327 <SV = 264> <Delay = 8.75>
ST_327 : Operation 1864 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_33, float %mC_load_32, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1864 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 328 <SV = 265> <Delay = 8.75>
ST_328 : Operation 1865 [5/5] (8.75ns)   --->   "%p_resp227 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_33)" [src/BMM_fonctions.c:49]   --->   Operation 1865 'writeresp' 'p_resp227' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 329 <SV = 266> <Delay = 8.75>
ST_329 : Operation 1866 [4/5] (8.75ns)   --->   "%p_resp227 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_33)" [src/BMM_fonctions.c:49]   --->   Operation 1866 'writeresp' 'p_resp227' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 330 <SV = 267> <Delay = 8.75>
ST_330 : Operation 1867 [3/5] (8.75ns)   --->   "%p_resp227 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_33)" [src/BMM_fonctions.c:49]   --->   Operation 1867 'writeresp' 'p_resp227' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 331 <SV = 268> <Delay = 8.75>
ST_331 : Operation 1868 [2/5] (8.75ns)   --->   "%p_resp227 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_33)" [src/BMM_fonctions.c:49]   --->   Operation 1868 'writeresp' 'p_resp227' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 332 <SV = 269> <Delay = 8.75>
ST_332 : Operation 1869 [1/5] (8.75ns)   --->   "%p_resp227 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_33)" [src/BMM_fonctions.c:49]   --->   Operation 1869 'writeresp' 'p_resp227' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_332 : Operation 1870 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1870 'specloopname' <Predicate = true> <Delay = 0.00>
ST_332 : Operation 1871 [1/1] (0.00ns)   --->   "%empty_116 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1871 'speclooptripcount' 'empty_116' <Predicate = true> <Delay = 0.00>
ST_332 : Operation 1872 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_32, label %hls_label_032, label %meminst17.32" [src/BMM_fonctions.c:49]   --->   Operation 1872 'br' <Predicate = true> <Delay = 0.00>
ST_332 : Operation 1873 [1/1] (0.00ns)   --->   "%empty_114 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_41) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1873 'specregionend' 'empty_114' <Predicate = (icmp_ln49_32)> <Delay = 0.00>
ST_332 : Operation 1874 [1/1] (0.00ns)   --->   "%tmp_42 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1874 'specregionbegin' 'tmp_42' <Predicate = (icmp_ln49_32)> <Delay = 0.00>
ST_332 : Operation 1875 [1/1] (1.76ns)   --->   "br label %meminst17.33"   --->   Operation 1875 'br' <Predicate = (icmp_ln49_32)> <Delay = 1.76>

State 333 <SV = 270> <Delay = 3.52>
ST_333 : Operation 1876 [1/1] (0.00ns)   --->   "%empty_118 = phi i6 [ 0, %hls_label_032 ], [ %add_ln49_33, %meminst17.33 ]" [src/BMM_fonctions.c:49]   --->   Operation 1876 'phi' 'empty_118' <Predicate = true> <Delay = 0.00>
ST_333 : Operation 1877 [1/1] (1.82ns)   --->   "%add_ln49_33 = add i6 %empty_118, 1" [src/BMM_fonctions.c:49]   --->   Operation 1877 'add' 'add_ln49_33' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_333 : Operation 1878 [1/1] (0.00ns)   --->   "%tmp_157 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 33, i6 %empty_118)" [src/BMM_fonctions.c:49]   --->   Operation 1878 'bitconcatenate' 'tmp_157' <Predicate = true> <Delay = 0.00>
ST_333 : Operation 1879 [1/1] (3.52ns)   --->   "%add_ln49_96 = add i64 %empty, %tmp_157" [src/BMM_fonctions.c:49]   --->   Operation 1879 'add' 'add_ln49_96' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_333 : Operation 1880 [1/1] (0.00ns)   --->   "%OUTPUT_addr_34 = getelementptr float* %OUTPUT_r, i64 %add_ln49_96" [src/BMM_fonctions.c:49]   --->   Operation 1880 'getelementptr' 'OUTPUT_addr_34' <Predicate = true> <Delay = 0.00>
ST_333 : Operation 1881 [1/1] (0.00ns)   --->   "%mC_addr_38 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_157" [src/BMM_fonctions.c:49]   --->   Operation 1881 'getelementptr' 'mC_addr_38' <Predicate = true> <Delay = 0.00>
ST_333 : Operation 1882 [2/2] (3.25ns)   --->   "%mC_load_33 = load float* %mC_addr_38, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1882 'load' 'mC_load_33' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_333 : Operation 1883 [1/1] (1.42ns)   --->   "%icmp_ln49_33 = icmp eq i6 %empty_118, -1" [src/BMM_fonctions.c:49]   --->   Operation 1883 'icmp' 'icmp_ln49_33' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 334 <SV = 271> <Delay = 8.75>
ST_334 : Operation 1884 [1/2] (3.25ns)   --->   "%mC_load_33 = load float* %mC_addr_38, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1884 'load' 'mC_load_33' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_334 : Operation 1885 [1/1] (8.75ns)   --->   "%p_req224 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_34, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1885 'writereq' 'p_req224' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 335 <SV = 272> <Delay = 8.75>
ST_335 : Operation 1886 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_34, float %mC_load_33, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1886 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 336 <SV = 273> <Delay = 8.75>
ST_336 : Operation 1887 [5/5] (8.75ns)   --->   "%p_resp225 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_34)" [src/BMM_fonctions.c:49]   --->   Operation 1887 'writeresp' 'p_resp225' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 337 <SV = 274> <Delay = 8.75>
ST_337 : Operation 1888 [4/5] (8.75ns)   --->   "%p_resp225 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_34)" [src/BMM_fonctions.c:49]   --->   Operation 1888 'writeresp' 'p_resp225' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 338 <SV = 275> <Delay = 8.75>
ST_338 : Operation 1889 [3/5] (8.75ns)   --->   "%p_resp225 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_34)" [src/BMM_fonctions.c:49]   --->   Operation 1889 'writeresp' 'p_resp225' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 339 <SV = 276> <Delay = 8.75>
ST_339 : Operation 1890 [2/5] (8.75ns)   --->   "%p_resp225 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_34)" [src/BMM_fonctions.c:49]   --->   Operation 1890 'writeresp' 'p_resp225' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 340 <SV = 277> <Delay = 8.75>
ST_340 : Operation 1891 [1/5] (8.75ns)   --->   "%p_resp225 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_34)" [src/BMM_fonctions.c:49]   --->   Operation 1891 'writeresp' 'p_resp225' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_340 : Operation 1892 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1892 'specloopname' <Predicate = true> <Delay = 0.00>
ST_340 : Operation 1893 [1/1] (0.00ns)   --->   "%empty_119 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1893 'speclooptripcount' 'empty_119' <Predicate = true> <Delay = 0.00>
ST_340 : Operation 1894 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_33, label %hls_label_033, label %meminst17.33" [src/BMM_fonctions.c:49]   --->   Operation 1894 'br' <Predicate = true> <Delay = 0.00>
ST_340 : Operation 1895 [1/1] (0.00ns)   --->   "%empty_117 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_42) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1895 'specregionend' 'empty_117' <Predicate = (icmp_ln49_33)> <Delay = 0.00>
ST_340 : Operation 1896 [1/1] (0.00ns)   --->   "%tmp_43 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1896 'specregionbegin' 'tmp_43' <Predicate = (icmp_ln49_33)> <Delay = 0.00>
ST_340 : Operation 1897 [1/1] (1.76ns)   --->   "br label %meminst17.34"   --->   Operation 1897 'br' <Predicate = (icmp_ln49_33)> <Delay = 1.76>

State 341 <SV = 278> <Delay = 3.52>
ST_341 : Operation 1898 [1/1] (0.00ns)   --->   "%empty_121 = phi i6 [ 0, %hls_label_033 ], [ %add_ln49_34, %meminst17.34 ]" [src/BMM_fonctions.c:49]   --->   Operation 1898 'phi' 'empty_121' <Predicate = true> <Delay = 0.00>
ST_341 : Operation 1899 [1/1] (1.82ns)   --->   "%add_ln49_34 = add i6 %empty_121, 1" [src/BMM_fonctions.c:49]   --->   Operation 1899 'add' 'add_ln49_34' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_341 : Operation 1900 [1/1] (0.00ns)   --->   "%tmp_158 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 34, i6 %empty_121)" [src/BMM_fonctions.c:49]   --->   Operation 1900 'bitconcatenate' 'tmp_158' <Predicate = true> <Delay = 0.00>
ST_341 : Operation 1901 [1/1] (3.52ns)   --->   "%add_ln49_97 = add i64 %empty, %tmp_158" [src/BMM_fonctions.c:49]   --->   Operation 1901 'add' 'add_ln49_97' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_341 : Operation 1902 [1/1] (0.00ns)   --->   "%OUTPUT_addr_35 = getelementptr float* %OUTPUT_r, i64 %add_ln49_97" [src/BMM_fonctions.c:49]   --->   Operation 1902 'getelementptr' 'OUTPUT_addr_35' <Predicate = true> <Delay = 0.00>
ST_341 : Operation 1903 [1/1] (0.00ns)   --->   "%mC_addr_39 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_158" [src/BMM_fonctions.c:49]   --->   Operation 1903 'getelementptr' 'mC_addr_39' <Predicate = true> <Delay = 0.00>
ST_341 : Operation 1904 [2/2] (3.25ns)   --->   "%mC_load_34 = load float* %mC_addr_39, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1904 'load' 'mC_load_34' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_341 : Operation 1905 [1/1] (1.42ns)   --->   "%icmp_ln49_34 = icmp eq i6 %empty_121, -1" [src/BMM_fonctions.c:49]   --->   Operation 1905 'icmp' 'icmp_ln49_34' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 342 <SV = 279> <Delay = 8.75>
ST_342 : Operation 1906 [1/2] (3.25ns)   --->   "%mC_load_34 = load float* %mC_addr_39, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1906 'load' 'mC_load_34' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_342 : Operation 1907 [1/1] (8.75ns)   --->   "%p_req222 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_35, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1907 'writereq' 'p_req222' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 343 <SV = 280> <Delay = 8.75>
ST_343 : Operation 1908 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_35, float %mC_load_34, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1908 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 344 <SV = 281> <Delay = 8.75>
ST_344 : Operation 1909 [5/5] (8.75ns)   --->   "%p_resp223 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_35)" [src/BMM_fonctions.c:49]   --->   Operation 1909 'writeresp' 'p_resp223' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 345 <SV = 282> <Delay = 8.75>
ST_345 : Operation 1910 [4/5] (8.75ns)   --->   "%p_resp223 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_35)" [src/BMM_fonctions.c:49]   --->   Operation 1910 'writeresp' 'p_resp223' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 346 <SV = 283> <Delay = 8.75>
ST_346 : Operation 1911 [3/5] (8.75ns)   --->   "%p_resp223 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_35)" [src/BMM_fonctions.c:49]   --->   Operation 1911 'writeresp' 'p_resp223' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 347 <SV = 284> <Delay = 8.75>
ST_347 : Operation 1912 [2/5] (8.75ns)   --->   "%p_resp223 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_35)" [src/BMM_fonctions.c:49]   --->   Operation 1912 'writeresp' 'p_resp223' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 348 <SV = 285> <Delay = 8.75>
ST_348 : Operation 1913 [1/5] (8.75ns)   --->   "%p_resp223 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_35)" [src/BMM_fonctions.c:49]   --->   Operation 1913 'writeresp' 'p_resp223' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_348 : Operation 1914 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1914 'specloopname' <Predicate = true> <Delay = 0.00>
ST_348 : Operation 1915 [1/1] (0.00ns)   --->   "%empty_122 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1915 'speclooptripcount' 'empty_122' <Predicate = true> <Delay = 0.00>
ST_348 : Operation 1916 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_34, label %hls_label_034, label %meminst17.34" [src/BMM_fonctions.c:49]   --->   Operation 1916 'br' <Predicate = true> <Delay = 0.00>
ST_348 : Operation 1917 [1/1] (0.00ns)   --->   "%empty_120 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_43) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1917 'specregionend' 'empty_120' <Predicate = (icmp_ln49_34)> <Delay = 0.00>
ST_348 : Operation 1918 [1/1] (0.00ns)   --->   "%tmp_44 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1918 'specregionbegin' 'tmp_44' <Predicate = (icmp_ln49_34)> <Delay = 0.00>
ST_348 : Operation 1919 [1/1] (1.76ns)   --->   "br label %meminst17.35"   --->   Operation 1919 'br' <Predicate = (icmp_ln49_34)> <Delay = 1.76>

State 349 <SV = 286> <Delay = 3.52>
ST_349 : Operation 1920 [1/1] (0.00ns)   --->   "%empty_124 = phi i6 [ 0, %hls_label_034 ], [ %add_ln49_35, %meminst17.35 ]" [src/BMM_fonctions.c:49]   --->   Operation 1920 'phi' 'empty_124' <Predicate = true> <Delay = 0.00>
ST_349 : Operation 1921 [1/1] (1.82ns)   --->   "%add_ln49_35 = add i6 %empty_124, 1" [src/BMM_fonctions.c:49]   --->   Operation 1921 'add' 'add_ln49_35' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_349 : Operation 1922 [1/1] (0.00ns)   --->   "%tmp_159 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 35, i6 %empty_124)" [src/BMM_fonctions.c:49]   --->   Operation 1922 'bitconcatenate' 'tmp_159' <Predicate = true> <Delay = 0.00>
ST_349 : Operation 1923 [1/1] (3.52ns)   --->   "%add_ln49_98 = add i64 %empty, %tmp_159" [src/BMM_fonctions.c:49]   --->   Operation 1923 'add' 'add_ln49_98' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_349 : Operation 1924 [1/1] (0.00ns)   --->   "%OUTPUT_addr_36 = getelementptr float* %OUTPUT_r, i64 %add_ln49_98" [src/BMM_fonctions.c:49]   --->   Operation 1924 'getelementptr' 'OUTPUT_addr_36' <Predicate = true> <Delay = 0.00>
ST_349 : Operation 1925 [1/1] (0.00ns)   --->   "%mC_addr_40 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_159" [src/BMM_fonctions.c:49]   --->   Operation 1925 'getelementptr' 'mC_addr_40' <Predicate = true> <Delay = 0.00>
ST_349 : Operation 1926 [2/2] (3.25ns)   --->   "%mC_load_35 = load float* %mC_addr_40, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1926 'load' 'mC_load_35' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_349 : Operation 1927 [1/1] (1.42ns)   --->   "%icmp_ln49_35 = icmp eq i6 %empty_124, -1" [src/BMM_fonctions.c:49]   --->   Operation 1927 'icmp' 'icmp_ln49_35' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 350 <SV = 287> <Delay = 8.75>
ST_350 : Operation 1928 [1/2] (3.25ns)   --->   "%mC_load_35 = load float* %mC_addr_40, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1928 'load' 'mC_load_35' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_350 : Operation 1929 [1/1] (8.75ns)   --->   "%p_req220 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_36, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1929 'writereq' 'p_req220' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 351 <SV = 288> <Delay = 8.75>
ST_351 : Operation 1930 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_36, float %mC_load_35, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1930 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 352 <SV = 289> <Delay = 8.75>
ST_352 : Operation 1931 [5/5] (8.75ns)   --->   "%p_resp221 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_36)" [src/BMM_fonctions.c:49]   --->   Operation 1931 'writeresp' 'p_resp221' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 353 <SV = 290> <Delay = 8.75>
ST_353 : Operation 1932 [4/5] (8.75ns)   --->   "%p_resp221 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_36)" [src/BMM_fonctions.c:49]   --->   Operation 1932 'writeresp' 'p_resp221' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 354 <SV = 291> <Delay = 8.75>
ST_354 : Operation 1933 [3/5] (8.75ns)   --->   "%p_resp221 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_36)" [src/BMM_fonctions.c:49]   --->   Operation 1933 'writeresp' 'p_resp221' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 355 <SV = 292> <Delay = 8.75>
ST_355 : Operation 1934 [2/5] (8.75ns)   --->   "%p_resp221 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_36)" [src/BMM_fonctions.c:49]   --->   Operation 1934 'writeresp' 'p_resp221' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 356 <SV = 293> <Delay = 8.75>
ST_356 : Operation 1935 [1/5] (8.75ns)   --->   "%p_resp221 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_36)" [src/BMM_fonctions.c:49]   --->   Operation 1935 'writeresp' 'p_resp221' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_356 : Operation 1936 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1936 'specloopname' <Predicate = true> <Delay = 0.00>
ST_356 : Operation 1937 [1/1] (0.00ns)   --->   "%empty_125 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1937 'speclooptripcount' 'empty_125' <Predicate = true> <Delay = 0.00>
ST_356 : Operation 1938 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_35, label %hls_label_035, label %meminst17.35" [src/BMM_fonctions.c:49]   --->   Operation 1938 'br' <Predicate = true> <Delay = 0.00>
ST_356 : Operation 1939 [1/1] (0.00ns)   --->   "%empty_123 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_44) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1939 'specregionend' 'empty_123' <Predicate = (icmp_ln49_35)> <Delay = 0.00>
ST_356 : Operation 1940 [1/1] (0.00ns)   --->   "%tmp_45 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1940 'specregionbegin' 'tmp_45' <Predicate = (icmp_ln49_35)> <Delay = 0.00>
ST_356 : Operation 1941 [1/1] (1.76ns)   --->   "br label %meminst17.36"   --->   Operation 1941 'br' <Predicate = (icmp_ln49_35)> <Delay = 1.76>

State 357 <SV = 294> <Delay = 3.52>
ST_357 : Operation 1942 [1/1] (0.00ns)   --->   "%empty_127 = phi i6 [ 0, %hls_label_035 ], [ %add_ln49_36, %meminst17.36 ]" [src/BMM_fonctions.c:49]   --->   Operation 1942 'phi' 'empty_127' <Predicate = true> <Delay = 0.00>
ST_357 : Operation 1943 [1/1] (1.82ns)   --->   "%add_ln49_36 = add i6 %empty_127, 1" [src/BMM_fonctions.c:49]   --->   Operation 1943 'add' 'add_ln49_36' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_357 : Operation 1944 [1/1] (0.00ns)   --->   "%tmp_160 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 36, i6 %empty_127)" [src/BMM_fonctions.c:49]   --->   Operation 1944 'bitconcatenate' 'tmp_160' <Predicate = true> <Delay = 0.00>
ST_357 : Operation 1945 [1/1] (3.52ns)   --->   "%add_ln49_99 = add i64 %empty, %tmp_160" [src/BMM_fonctions.c:49]   --->   Operation 1945 'add' 'add_ln49_99' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_357 : Operation 1946 [1/1] (0.00ns)   --->   "%OUTPUT_addr_37 = getelementptr float* %OUTPUT_r, i64 %add_ln49_99" [src/BMM_fonctions.c:49]   --->   Operation 1946 'getelementptr' 'OUTPUT_addr_37' <Predicate = true> <Delay = 0.00>
ST_357 : Operation 1947 [1/1] (0.00ns)   --->   "%mC_addr_41 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_160" [src/BMM_fonctions.c:49]   --->   Operation 1947 'getelementptr' 'mC_addr_41' <Predicate = true> <Delay = 0.00>
ST_357 : Operation 1948 [2/2] (3.25ns)   --->   "%mC_load_36 = load float* %mC_addr_41, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1948 'load' 'mC_load_36' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_357 : Operation 1949 [1/1] (1.42ns)   --->   "%icmp_ln49_36 = icmp eq i6 %empty_127, -1" [src/BMM_fonctions.c:49]   --->   Operation 1949 'icmp' 'icmp_ln49_36' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 358 <SV = 295> <Delay = 8.75>
ST_358 : Operation 1950 [1/2] (3.25ns)   --->   "%mC_load_36 = load float* %mC_addr_41, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1950 'load' 'mC_load_36' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_358 : Operation 1951 [1/1] (8.75ns)   --->   "%p_req218 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_37, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1951 'writereq' 'p_req218' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 359 <SV = 296> <Delay = 8.75>
ST_359 : Operation 1952 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_37, float %mC_load_36, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1952 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 360 <SV = 297> <Delay = 8.75>
ST_360 : Operation 1953 [5/5] (8.75ns)   --->   "%p_resp219 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_37)" [src/BMM_fonctions.c:49]   --->   Operation 1953 'writeresp' 'p_resp219' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 361 <SV = 298> <Delay = 8.75>
ST_361 : Operation 1954 [4/5] (8.75ns)   --->   "%p_resp219 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_37)" [src/BMM_fonctions.c:49]   --->   Operation 1954 'writeresp' 'p_resp219' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 362 <SV = 299> <Delay = 8.75>
ST_362 : Operation 1955 [3/5] (8.75ns)   --->   "%p_resp219 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_37)" [src/BMM_fonctions.c:49]   --->   Operation 1955 'writeresp' 'p_resp219' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 363 <SV = 300> <Delay = 8.75>
ST_363 : Operation 1956 [2/5] (8.75ns)   --->   "%p_resp219 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_37)" [src/BMM_fonctions.c:49]   --->   Operation 1956 'writeresp' 'p_resp219' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 364 <SV = 301> <Delay = 8.75>
ST_364 : Operation 1957 [1/5] (8.75ns)   --->   "%p_resp219 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_37)" [src/BMM_fonctions.c:49]   --->   Operation 1957 'writeresp' 'p_resp219' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_364 : Operation 1958 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1958 'specloopname' <Predicate = true> <Delay = 0.00>
ST_364 : Operation 1959 [1/1] (0.00ns)   --->   "%empty_128 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1959 'speclooptripcount' 'empty_128' <Predicate = true> <Delay = 0.00>
ST_364 : Operation 1960 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_36, label %hls_label_036, label %meminst17.36" [src/BMM_fonctions.c:49]   --->   Operation 1960 'br' <Predicate = true> <Delay = 0.00>
ST_364 : Operation 1961 [1/1] (0.00ns)   --->   "%empty_126 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_45) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1961 'specregionend' 'empty_126' <Predicate = (icmp_ln49_36)> <Delay = 0.00>
ST_364 : Operation 1962 [1/1] (0.00ns)   --->   "%tmp_46 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1962 'specregionbegin' 'tmp_46' <Predicate = (icmp_ln49_36)> <Delay = 0.00>
ST_364 : Operation 1963 [1/1] (1.76ns)   --->   "br label %meminst17.37"   --->   Operation 1963 'br' <Predicate = (icmp_ln49_36)> <Delay = 1.76>

State 365 <SV = 302> <Delay = 3.52>
ST_365 : Operation 1964 [1/1] (0.00ns)   --->   "%empty_130 = phi i6 [ 0, %hls_label_036 ], [ %add_ln49_37, %meminst17.37 ]" [src/BMM_fonctions.c:49]   --->   Operation 1964 'phi' 'empty_130' <Predicate = true> <Delay = 0.00>
ST_365 : Operation 1965 [1/1] (1.82ns)   --->   "%add_ln49_37 = add i6 %empty_130, 1" [src/BMM_fonctions.c:49]   --->   Operation 1965 'add' 'add_ln49_37' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_365 : Operation 1966 [1/1] (0.00ns)   --->   "%tmp_161 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 37, i6 %empty_130)" [src/BMM_fonctions.c:49]   --->   Operation 1966 'bitconcatenate' 'tmp_161' <Predicate = true> <Delay = 0.00>
ST_365 : Operation 1967 [1/1] (3.52ns)   --->   "%add_ln49_100 = add i64 %empty, %tmp_161" [src/BMM_fonctions.c:49]   --->   Operation 1967 'add' 'add_ln49_100' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_365 : Operation 1968 [1/1] (0.00ns)   --->   "%OUTPUT_addr_38 = getelementptr float* %OUTPUT_r, i64 %add_ln49_100" [src/BMM_fonctions.c:49]   --->   Operation 1968 'getelementptr' 'OUTPUT_addr_38' <Predicate = true> <Delay = 0.00>
ST_365 : Operation 1969 [1/1] (0.00ns)   --->   "%mC_addr_42 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_161" [src/BMM_fonctions.c:49]   --->   Operation 1969 'getelementptr' 'mC_addr_42' <Predicate = true> <Delay = 0.00>
ST_365 : Operation 1970 [2/2] (3.25ns)   --->   "%mC_load_37 = load float* %mC_addr_42, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1970 'load' 'mC_load_37' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_365 : Operation 1971 [1/1] (1.42ns)   --->   "%icmp_ln49_37 = icmp eq i6 %empty_130, -1" [src/BMM_fonctions.c:49]   --->   Operation 1971 'icmp' 'icmp_ln49_37' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 366 <SV = 303> <Delay = 8.75>
ST_366 : Operation 1972 [1/2] (3.25ns)   --->   "%mC_load_37 = load float* %mC_addr_42, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1972 'load' 'mC_load_37' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_366 : Operation 1973 [1/1] (8.75ns)   --->   "%p_req216 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_38, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1973 'writereq' 'p_req216' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 367 <SV = 304> <Delay = 8.75>
ST_367 : Operation 1974 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_38, float %mC_load_37, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1974 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 368 <SV = 305> <Delay = 8.75>
ST_368 : Operation 1975 [5/5] (8.75ns)   --->   "%p_resp217 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_38)" [src/BMM_fonctions.c:49]   --->   Operation 1975 'writeresp' 'p_resp217' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 369 <SV = 306> <Delay = 8.75>
ST_369 : Operation 1976 [4/5] (8.75ns)   --->   "%p_resp217 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_38)" [src/BMM_fonctions.c:49]   --->   Operation 1976 'writeresp' 'p_resp217' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 370 <SV = 307> <Delay = 8.75>
ST_370 : Operation 1977 [3/5] (8.75ns)   --->   "%p_resp217 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_38)" [src/BMM_fonctions.c:49]   --->   Operation 1977 'writeresp' 'p_resp217' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 371 <SV = 308> <Delay = 8.75>
ST_371 : Operation 1978 [2/5] (8.75ns)   --->   "%p_resp217 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_38)" [src/BMM_fonctions.c:49]   --->   Operation 1978 'writeresp' 'p_resp217' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 372 <SV = 309> <Delay = 8.75>
ST_372 : Operation 1979 [1/5] (8.75ns)   --->   "%p_resp217 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_38)" [src/BMM_fonctions.c:49]   --->   Operation 1979 'writeresp' 'p_resp217' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_372 : Operation 1980 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 1980 'specloopname' <Predicate = true> <Delay = 0.00>
ST_372 : Operation 1981 [1/1] (0.00ns)   --->   "%empty_131 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 1981 'speclooptripcount' 'empty_131' <Predicate = true> <Delay = 0.00>
ST_372 : Operation 1982 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_37, label %hls_label_037, label %meminst17.37" [src/BMM_fonctions.c:49]   --->   Operation 1982 'br' <Predicate = true> <Delay = 0.00>
ST_372 : Operation 1983 [1/1] (0.00ns)   --->   "%empty_129 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_46) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1983 'specregionend' 'empty_129' <Predicate = (icmp_ln49_37)> <Delay = 0.00>
ST_372 : Operation 1984 [1/1] (0.00ns)   --->   "%tmp_47 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 1984 'specregionbegin' 'tmp_47' <Predicate = (icmp_ln49_37)> <Delay = 0.00>
ST_372 : Operation 1985 [1/1] (1.76ns)   --->   "br label %meminst17.38"   --->   Operation 1985 'br' <Predicate = (icmp_ln49_37)> <Delay = 1.76>

State 373 <SV = 310> <Delay = 3.52>
ST_373 : Operation 1986 [1/1] (0.00ns)   --->   "%empty_133 = phi i6 [ 0, %hls_label_037 ], [ %add_ln49_38, %meminst17.38 ]" [src/BMM_fonctions.c:49]   --->   Operation 1986 'phi' 'empty_133' <Predicate = true> <Delay = 0.00>
ST_373 : Operation 1987 [1/1] (1.82ns)   --->   "%add_ln49_38 = add i6 %empty_133, 1" [src/BMM_fonctions.c:49]   --->   Operation 1987 'add' 'add_ln49_38' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_373 : Operation 1988 [1/1] (0.00ns)   --->   "%tmp_162 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 38, i6 %empty_133)" [src/BMM_fonctions.c:49]   --->   Operation 1988 'bitconcatenate' 'tmp_162' <Predicate = true> <Delay = 0.00>
ST_373 : Operation 1989 [1/1] (3.52ns)   --->   "%add_ln49_101 = add i64 %empty, %tmp_162" [src/BMM_fonctions.c:49]   --->   Operation 1989 'add' 'add_ln49_101' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_373 : Operation 1990 [1/1] (0.00ns)   --->   "%OUTPUT_addr_39 = getelementptr float* %OUTPUT_r, i64 %add_ln49_101" [src/BMM_fonctions.c:49]   --->   Operation 1990 'getelementptr' 'OUTPUT_addr_39' <Predicate = true> <Delay = 0.00>
ST_373 : Operation 1991 [1/1] (0.00ns)   --->   "%mC_addr_43 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_162" [src/BMM_fonctions.c:49]   --->   Operation 1991 'getelementptr' 'mC_addr_43' <Predicate = true> <Delay = 0.00>
ST_373 : Operation 1992 [2/2] (3.25ns)   --->   "%mC_load_38 = load float* %mC_addr_43, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1992 'load' 'mC_load_38' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_373 : Operation 1993 [1/1] (1.42ns)   --->   "%icmp_ln49_38 = icmp eq i6 %empty_133, -1" [src/BMM_fonctions.c:49]   --->   Operation 1993 'icmp' 'icmp_ln49_38' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 374 <SV = 311> <Delay = 8.75>
ST_374 : Operation 1994 [1/2] (3.25ns)   --->   "%mC_load_38 = load float* %mC_addr_43, align 4" [src/BMM_fonctions.c:49]   --->   Operation 1994 'load' 'mC_load_38' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_374 : Operation 1995 [1/1] (8.75ns)   --->   "%p_req214 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_39, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 1995 'writereq' 'p_req214' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 375 <SV = 312> <Delay = 8.75>
ST_375 : Operation 1996 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_39, float %mC_load_38, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 1996 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 376 <SV = 313> <Delay = 8.75>
ST_376 : Operation 1997 [5/5] (8.75ns)   --->   "%p_resp215 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_39)" [src/BMM_fonctions.c:49]   --->   Operation 1997 'writeresp' 'p_resp215' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 377 <SV = 314> <Delay = 8.75>
ST_377 : Operation 1998 [4/5] (8.75ns)   --->   "%p_resp215 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_39)" [src/BMM_fonctions.c:49]   --->   Operation 1998 'writeresp' 'p_resp215' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 378 <SV = 315> <Delay = 8.75>
ST_378 : Operation 1999 [3/5] (8.75ns)   --->   "%p_resp215 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_39)" [src/BMM_fonctions.c:49]   --->   Operation 1999 'writeresp' 'p_resp215' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 379 <SV = 316> <Delay = 8.75>
ST_379 : Operation 2000 [2/5] (8.75ns)   --->   "%p_resp215 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_39)" [src/BMM_fonctions.c:49]   --->   Operation 2000 'writeresp' 'p_resp215' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 380 <SV = 317> <Delay = 8.75>
ST_380 : Operation 2001 [1/5] (8.75ns)   --->   "%p_resp215 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_39)" [src/BMM_fonctions.c:49]   --->   Operation 2001 'writeresp' 'p_resp215' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_380 : Operation 2002 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2002 'specloopname' <Predicate = true> <Delay = 0.00>
ST_380 : Operation 2003 [1/1] (0.00ns)   --->   "%empty_134 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2003 'speclooptripcount' 'empty_134' <Predicate = true> <Delay = 0.00>
ST_380 : Operation 2004 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_38, label %hls_label_038, label %meminst17.38" [src/BMM_fonctions.c:49]   --->   Operation 2004 'br' <Predicate = true> <Delay = 0.00>
ST_380 : Operation 2005 [1/1] (0.00ns)   --->   "%empty_132 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_47) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2005 'specregionend' 'empty_132' <Predicate = (icmp_ln49_38)> <Delay = 0.00>
ST_380 : Operation 2006 [1/1] (0.00ns)   --->   "%tmp_48 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2006 'specregionbegin' 'tmp_48' <Predicate = (icmp_ln49_38)> <Delay = 0.00>
ST_380 : Operation 2007 [1/1] (1.76ns)   --->   "br label %meminst17.39"   --->   Operation 2007 'br' <Predicate = (icmp_ln49_38)> <Delay = 1.76>

State 381 <SV = 318> <Delay = 3.52>
ST_381 : Operation 2008 [1/1] (0.00ns)   --->   "%empty_136 = phi i6 [ 0, %hls_label_038 ], [ %add_ln49_39, %meminst17.39 ]" [src/BMM_fonctions.c:49]   --->   Operation 2008 'phi' 'empty_136' <Predicate = true> <Delay = 0.00>
ST_381 : Operation 2009 [1/1] (1.82ns)   --->   "%add_ln49_39 = add i6 %empty_136, 1" [src/BMM_fonctions.c:49]   --->   Operation 2009 'add' 'add_ln49_39' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_381 : Operation 2010 [1/1] (0.00ns)   --->   "%tmp_163 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 39, i6 %empty_136)" [src/BMM_fonctions.c:49]   --->   Operation 2010 'bitconcatenate' 'tmp_163' <Predicate = true> <Delay = 0.00>
ST_381 : Operation 2011 [1/1] (3.52ns)   --->   "%add_ln49_102 = add i64 %empty, %tmp_163" [src/BMM_fonctions.c:49]   --->   Operation 2011 'add' 'add_ln49_102' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_381 : Operation 2012 [1/1] (0.00ns)   --->   "%OUTPUT_addr_40 = getelementptr float* %OUTPUT_r, i64 %add_ln49_102" [src/BMM_fonctions.c:49]   --->   Operation 2012 'getelementptr' 'OUTPUT_addr_40' <Predicate = true> <Delay = 0.00>
ST_381 : Operation 2013 [1/1] (0.00ns)   --->   "%mC_addr_44 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_163" [src/BMM_fonctions.c:49]   --->   Operation 2013 'getelementptr' 'mC_addr_44' <Predicate = true> <Delay = 0.00>
ST_381 : Operation 2014 [2/2] (3.25ns)   --->   "%mC_load_39 = load float* %mC_addr_44, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2014 'load' 'mC_load_39' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_381 : Operation 2015 [1/1] (1.42ns)   --->   "%icmp_ln49_39 = icmp eq i6 %empty_136, -1" [src/BMM_fonctions.c:49]   --->   Operation 2015 'icmp' 'icmp_ln49_39' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 382 <SV = 319> <Delay = 8.75>
ST_382 : Operation 2016 [1/2] (3.25ns)   --->   "%mC_load_39 = load float* %mC_addr_44, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2016 'load' 'mC_load_39' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_382 : Operation 2017 [1/1] (8.75ns)   --->   "%p_req212 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_40, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2017 'writereq' 'p_req212' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 383 <SV = 320> <Delay = 8.75>
ST_383 : Operation 2018 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_40, float %mC_load_39, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2018 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 384 <SV = 321> <Delay = 8.75>
ST_384 : Operation 2019 [5/5] (8.75ns)   --->   "%p_resp213 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_40)" [src/BMM_fonctions.c:49]   --->   Operation 2019 'writeresp' 'p_resp213' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 385 <SV = 322> <Delay = 8.75>
ST_385 : Operation 2020 [4/5] (8.75ns)   --->   "%p_resp213 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_40)" [src/BMM_fonctions.c:49]   --->   Operation 2020 'writeresp' 'p_resp213' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 386 <SV = 323> <Delay = 8.75>
ST_386 : Operation 2021 [3/5] (8.75ns)   --->   "%p_resp213 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_40)" [src/BMM_fonctions.c:49]   --->   Operation 2021 'writeresp' 'p_resp213' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 387 <SV = 324> <Delay = 8.75>
ST_387 : Operation 2022 [2/5] (8.75ns)   --->   "%p_resp213 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_40)" [src/BMM_fonctions.c:49]   --->   Operation 2022 'writeresp' 'p_resp213' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 388 <SV = 325> <Delay = 8.75>
ST_388 : Operation 2023 [1/5] (8.75ns)   --->   "%p_resp213 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_40)" [src/BMM_fonctions.c:49]   --->   Operation 2023 'writeresp' 'p_resp213' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_388 : Operation 2024 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2024 'specloopname' <Predicate = true> <Delay = 0.00>
ST_388 : Operation 2025 [1/1] (0.00ns)   --->   "%empty_137 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2025 'speclooptripcount' 'empty_137' <Predicate = true> <Delay = 0.00>
ST_388 : Operation 2026 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_39, label %hls_label_039, label %meminst17.39" [src/BMM_fonctions.c:49]   --->   Operation 2026 'br' <Predicate = true> <Delay = 0.00>
ST_388 : Operation 2027 [1/1] (0.00ns)   --->   "%empty_135 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_48) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2027 'specregionend' 'empty_135' <Predicate = (icmp_ln49_39)> <Delay = 0.00>
ST_388 : Operation 2028 [1/1] (0.00ns)   --->   "%tmp_49 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2028 'specregionbegin' 'tmp_49' <Predicate = (icmp_ln49_39)> <Delay = 0.00>
ST_388 : Operation 2029 [1/1] (1.76ns)   --->   "br label %meminst17.40"   --->   Operation 2029 'br' <Predicate = (icmp_ln49_39)> <Delay = 1.76>

State 389 <SV = 326> <Delay = 3.52>
ST_389 : Operation 2030 [1/1] (0.00ns)   --->   "%empty_139 = phi i6 [ 0, %hls_label_039 ], [ %add_ln49_40, %meminst17.40 ]" [src/BMM_fonctions.c:49]   --->   Operation 2030 'phi' 'empty_139' <Predicate = true> <Delay = 0.00>
ST_389 : Operation 2031 [1/1] (1.82ns)   --->   "%add_ln49_40 = add i6 %empty_139, 1" [src/BMM_fonctions.c:49]   --->   Operation 2031 'add' 'add_ln49_40' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_389 : Operation 2032 [1/1] (0.00ns)   --->   "%tmp_164 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 40, i6 %empty_139)" [src/BMM_fonctions.c:49]   --->   Operation 2032 'bitconcatenate' 'tmp_164' <Predicate = true> <Delay = 0.00>
ST_389 : Operation 2033 [1/1] (3.52ns)   --->   "%add_ln49_103 = add i64 %empty, %tmp_164" [src/BMM_fonctions.c:49]   --->   Operation 2033 'add' 'add_ln49_103' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_389 : Operation 2034 [1/1] (0.00ns)   --->   "%OUTPUT_addr_41 = getelementptr float* %OUTPUT_r, i64 %add_ln49_103" [src/BMM_fonctions.c:49]   --->   Operation 2034 'getelementptr' 'OUTPUT_addr_41' <Predicate = true> <Delay = 0.00>
ST_389 : Operation 2035 [1/1] (0.00ns)   --->   "%mC_addr_45 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_164" [src/BMM_fonctions.c:49]   --->   Operation 2035 'getelementptr' 'mC_addr_45' <Predicate = true> <Delay = 0.00>
ST_389 : Operation 2036 [2/2] (3.25ns)   --->   "%mC_load_40 = load float* %mC_addr_45, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2036 'load' 'mC_load_40' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_389 : Operation 2037 [1/1] (1.42ns)   --->   "%icmp_ln49_40 = icmp eq i6 %empty_139, -1" [src/BMM_fonctions.c:49]   --->   Operation 2037 'icmp' 'icmp_ln49_40' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 390 <SV = 327> <Delay = 8.75>
ST_390 : Operation 2038 [1/2] (3.25ns)   --->   "%mC_load_40 = load float* %mC_addr_45, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2038 'load' 'mC_load_40' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_390 : Operation 2039 [1/1] (8.75ns)   --->   "%p_req210 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_41, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2039 'writereq' 'p_req210' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 391 <SV = 328> <Delay = 8.75>
ST_391 : Operation 2040 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_41, float %mC_load_40, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2040 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 392 <SV = 329> <Delay = 8.75>
ST_392 : Operation 2041 [5/5] (8.75ns)   --->   "%p_resp211 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_41)" [src/BMM_fonctions.c:49]   --->   Operation 2041 'writeresp' 'p_resp211' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 393 <SV = 330> <Delay = 8.75>
ST_393 : Operation 2042 [4/5] (8.75ns)   --->   "%p_resp211 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_41)" [src/BMM_fonctions.c:49]   --->   Operation 2042 'writeresp' 'p_resp211' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 394 <SV = 331> <Delay = 8.75>
ST_394 : Operation 2043 [3/5] (8.75ns)   --->   "%p_resp211 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_41)" [src/BMM_fonctions.c:49]   --->   Operation 2043 'writeresp' 'p_resp211' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 395 <SV = 332> <Delay = 8.75>
ST_395 : Operation 2044 [2/5] (8.75ns)   --->   "%p_resp211 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_41)" [src/BMM_fonctions.c:49]   --->   Operation 2044 'writeresp' 'p_resp211' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 396 <SV = 333> <Delay = 8.75>
ST_396 : Operation 2045 [1/5] (8.75ns)   --->   "%p_resp211 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_41)" [src/BMM_fonctions.c:49]   --->   Operation 2045 'writeresp' 'p_resp211' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_396 : Operation 2046 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2046 'specloopname' <Predicate = true> <Delay = 0.00>
ST_396 : Operation 2047 [1/1] (0.00ns)   --->   "%empty_140 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2047 'speclooptripcount' 'empty_140' <Predicate = true> <Delay = 0.00>
ST_396 : Operation 2048 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_40, label %hls_label_040, label %meminst17.40" [src/BMM_fonctions.c:49]   --->   Operation 2048 'br' <Predicate = true> <Delay = 0.00>
ST_396 : Operation 2049 [1/1] (0.00ns)   --->   "%empty_138 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_49) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2049 'specregionend' 'empty_138' <Predicate = (icmp_ln49_40)> <Delay = 0.00>
ST_396 : Operation 2050 [1/1] (0.00ns)   --->   "%tmp_50 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2050 'specregionbegin' 'tmp_50' <Predicate = (icmp_ln49_40)> <Delay = 0.00>
ST_396 : Operation 2051 [1/1] (1.76ns)   --->   "br label %meminst17.41"   --->   Operation 2051 'br' <Predicate = (icmp_ln49_40)> <Delay = 1.76>

State 397 <SV = 334> <Delay = 3.52>
ST_397 : Operation 2052 [1/1] (0.00ns)   --->   "%empty_142 = phi i6 [ 0, %hls_label_040 ], [ %add_ln49_41, %meminst17.41 ]" [src/BMM_fonctions.c:49]   --->   Operation 2052 'phi' 'empty_142' <Predicate = true> <Delay = 0.00>
ST_397 : Operation 2053 [1/1] (1.82ns)   --->   "%add_ln49_41 = add i6 %empty_142, 1" [src/BMM_fonctions.c:49]   --->   Operation 2053 'add' 'add_ln49_41' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_397 : Operation 2054 [1/1] (0.00ns)   --->   "%tmp_165 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 41, i6 %empty_142)" [src/BMM_fonctions.c:49]   --->   Operation 2054 'bitconcatenate' 'tmp_165' <Predicate = true> <Delay = 0.00>
ST_397 : Operation 2055 [1/1] (3.52ns)   --->   "%add_ln49_104 = add i64 %empty, %tmp_165" [src/BMM_fonctions.c:49]   --->   Operation 2055 'add' 'add_ln49_104' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_397 : Operation 2056 [1/1] (0.00ns)   --->   "%OUTPUT_addr_42 = getelementptr float* %OUTPUT_r, i64 %add_ln49_104" [src/BMM_fonctions.c:49]   --->   Operation 2056 'getelementptr' 'OUTPUT_addr_42' <Predicate = true> <Delay = 0.00>
ST_397 : Operation 2057 [1/1] (0.00ns)   --->   "%mC_addr_46 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_165" [src/BMM_fonctions.c:49]   --->   Operation 2057 'getelementptr' 'mC_addr_46' <Predicate = true> <Delay = 0.00>
ST_397 : Operation 2058 [2/2] (3.25ns)   --->   "%mC_load_41 = load float* %mC_addr_46, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2058 'load' 'mC_load_41' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_397 : Operation 2059 [1/1] (1.42ns)   --->   "%icmp_ln49_41 = icmp eq i6 %empty_142, -1" [src/BMM_fonctions.c:49]   --->   Operation 2059 'icmp' 'icmp_ln49_41' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 398 <SV = 335> <Delay = 8.75>
ST_398 : Operation 2060 [1/2] (3.25ns)   --->   "%mC_load_41 = load float* %mC_addr_46, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2060 'load' 'mC_load_41' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_398 : Operation 2061 [1/1] (8.75ns)   --->   "%p_req208 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_42, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2061 'writereq' 'p_req208' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 399 <SV = 336> <Delay = 8.75>
ST_399 : Operation 2062 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_42, float %mC_load_41, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2062 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 400 <SV = 337> <Delay = 8.75>
ST_400 : Operation 2063 [5/5] (8.75ns)   --->   "%p_resp209 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_42)" [src/BMM_fonctions.c:49]   --->   Operation 2063 'writeresp' 'p_resp209' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 401 <SV = 338> <Delay = 8.75>
ST_401 : Operation 2064 [4/5] (8.75ns)   --->   "%p_resp209 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_42)" [src/BMM_fonctions.c:49]   --->   Operation 2064 'writeresp' 'p_resp209' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 402 <SV = 339> <Delay = 8.75>
ST_402 : Operation 2065 [3/5] (8.75ns)   --->   "%p_resp209 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_42)" [src/BMM_fonctions.c:49]   --->   Operation 2065 'writeresp' 'p_resp209' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 403 <SV = 340> <Delay = 8.75>
ST_403 : Operation 2066 [2/5] (8.75ns)   --->   "%p_resp209 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_42)" [src/BMM_fonctions.c:49]   --->   Operation 2066 'writeresp' 'p_resp209' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 404 <SV = 341> <Delay = 8.75>
ST_404 : Operation 2067 [1/5] (8.75ns)   --->   "%p_resp209 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_42)" [src/BMM_fonctions.c:49]   --->   Operation 2067 'writeresp' 'p_resp209' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_404 : Operation 2068 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2068 'specloopname' <Predicate = true> <Delay = 0.00>
ST_404 : Operation 2069 [1/1] (0.00ns)   --->   "%empty_143 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2069 'speclooptripcount' 'empty_143' <Predicate = true> <Delay = 0.00>
ST_404 : Operation 2070 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_41, label %hls_label_041, label %meminst17.41" [src/BMM_fonctions.c:49]   --->   Operation 2070 'br' <Predicate = true> <Delay = 0.00>
ST_404 : Operation 2071 [1/1] (0.00ns)   --->   "%empty_141 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_50) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2071 'specregionend' 'empty_141' <Predicate = (icmp_ln49_41)> <Delay = 0.00>
ST_404 : Operation 2072 [1/1] (0.00ns)   --->   "%tmp_51 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2072 'specregionbegin' 'tmp_51' <Predicate = (icmp_ln49_41)> <Delay = 0.00>
ST_404 : Operation 2073 [1/1] (1.76ns)   --->   "br label %meminst17.42"   --->   Operation 2073 'br' <Predicate = (icmp_ln49_41)> <Delay = 1.76>

State 405 <SV = 342> <Delay = 3.52>
ST_405 : Operation 2074 [1/1] (0.00ns)   --->   "%empty_145 = phi i6 [ 0, %hls_label_041 ], [ %add_ln49_42, %meminst17.42 ]" [src/BMM_fonctions.c:49]   --->   Operation 2074 'phi' 'empty_145' <Predicate = true> <Delay = 0.00>
ST_405 : Operation 2075 [1/1] (1.82ns)   --->   "%add_ln49_42 = add i6 %empty_145, 1" [src/BMM_fonctions.c:49]   --->   Operation 2075 'add' 'add_ln49_42' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_405 : Operation 2076 [1/1] (0.00ns)   --->   "%tmp_166 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 42, i6 %empty_145)" [src/BMM_fonctions.c:49]   --->   Operation 2076 'bitconcatenate' 'tmp_166' <Predicate = true> <Delay = 0.00>
ST_405 : Operation 2077 [1/1] (3.52ns)   --->   "%add_ln49_105 = add i64 %empty, %tmp_166" [src/BMM_fonctions.c:49]   --->   Operation 2077 'add' 'add_ln49_105' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_405 : Operation 2078 [1/1] (0.00ns)   --->   "%OUTPUT_addr_43 = getelementptr float* %OUTPUT_r, i64 %add_ln49_105" [src/BMM_fonctions.c:49]   --->   Operation 2078 'getelementptr' 'OUTPUT_addr_43' <Predicate = true> <Delay = 0.00>
ST_405 : Operation 2079 [1/1] (0.00ns)   --->   "%mC_addr_47 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_166" [src/BMM_fonctions.c:49]   --->   Operation 2079 'getelementptr' 'mC_addr_47' <Predicate = true> <Delay = 0.00>
ST_405 : Operation 2080 [2/2] (3.25ns)   --->   "%mC_load_42 = load float* %mC_addr_47, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2080 'load' 'mC_load_42' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_405 : Operation 2081 [1/1] (1.42ns)   --->   "%icmp_ln49_42 = icmp eq i6 %empty_145, -1" [src/BMM_fonctions.c:49]   --->   Operation 2081 'icmp' 'icmp_ln49_42' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 406 <SV = 343> <Delay = 8.75>
ST_406 : Operation 2082 [1/2] (3.25ns)   --->   "%mC_load_42 = load float* %mC_addr_47, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2082 'load' 'mC_load_42' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_406 : Operation 2083 [1/1] (8.75ns)   --->   "%p_req206 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_43, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2083 'writereq' 'p_req206' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 407 <SV = 344> <Delay = 8.75>
ST_407 : Operation 2084 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_43, float %mC_load_42, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2084 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 408 <SV = 345> <Delay = 8.75>
ST_408 : Operation 2085 [5/5] (8.75ns)   --->   "%p_resp207 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_43)" [src/BMM_fonctions.c:49]   --->   Operation 2085 'writeresp' 'p_resp207' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 409 <SV = 346> <Delay = 8.75>
ST_409 : Operation 2086 [4/5] (8.75ns)   --->   "%p_resp207 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_43)" [src/BMM_fonctions.c:49]   --->   Operation 2086 'writeresp' 'p_resp207' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 410 <SV = 347> <Delay = 8.75>
ST_410 : Operation 2087 [3/5] (8.75ns)   --->   "%p_resp207 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_43)" [src/BMM_fonctions.c:49]   --->   Operation 2087 'writeresp' 'p_resp207' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 411 <SV = 348> <Delay = 8.75>
ST_411 : Operation 2088 [2/5] (8.75ns)   --->   "%p_resp207 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_43)" [src/BMM_fonctions.c:49]   --->   Operation 2088 'writeresp' 'p_resp207' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 412 <SV = 349> <Delay = 8.75>
ST_412 : Operation 2089 [1/5] (8.75ns)   --->   "%p_resp207 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_43)" [src/BMM_fonctions.c:49]   --->   Operation 2089 'writeresp' 'p_resp207' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_412 : Operation 2090 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2090 'specloopname' <Predicate = true> <Delay = 0.00>
ST_412 : Operation 2091 [1/1] (0.00ns)   --->   "%empty_146 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2091 'speclooptripcount' 'empty_146' <Predicate = true> <Delay = 0.00>
ST_412 : Operation 2092 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_42, label %hls_label_042, label %meminst17.42" [src/BMM_fonctions.c:49]   --->   Operation 2092 'br' <Predicate = true> <Delay = 0.00>
ST_412 : Operation 2093 [1/1] (0.00ns)   --->   "%empty_144 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_51) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2093 'specregionend' 'empty_144' <Predicate = (icmp_ln49_42)> <Delay = 0.00>
ST_412 : Operation 2094 [1/1] (0.00ns)   --->   "%tmp_52 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2094 'specregionbegin' 'tmp_52' <Predicate = (icmp_ln49_42)> <Delay = 0.00>
ST_412 : Operation 2095 [1/1] (1.76ns)   --->   "br label %meminst17.43"   --->   Operation 2095 'br' <Predicate = (icmp_ln49_42)> <Delay = 1.76>

State 413 <SV = 350> <Delay = 3.52>
ST_413 : Operation 2096 [1/1] (0.00ns)   --->   "%empty_148 = phi i6 [ 0, %hls_label_042 ], [ %add_ln49_43, %meminst17.43 ]" [src/BMM_fonctions.c:49]   --->   Operation 2096 'phi' 'empty_148' <Predicate = true> <Delay = 0.00>
ST_413 : Operation 2097 [1/1] (1.82ns)   --->   "%add_ln49_43 = add i6 %empty_148, 1" [src/BMM_fonctions.c:49]   --->   Operation 2097 'add' 'add_ln49_43' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_413 : Operation 2098 [1/1] (0.00ns)   --->   "%tmp_167 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 43, i6 %empty_148)" [src/BMM_fonctions.c:49]   --->   Operation 2098 'bitconcatenate' 'tmp_167' <Predicate = true> <Delay = 0.00>
ST_413 : Operation 2099 [1/1] (3.52ns)   --->   "%add_ln49_106 = add i64 %empty, %tmp_167" [src/BMM_fonctions.c:49]   --->   Operation 2099 'add' 'add_ln49_106' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_413 : Operation 2100 [1/1] (0.00ns)   --->   "%OUTPUT_addr_44 = getelementptr float* %OUTPUT_r, i64 %add_ln49_106" [src/BMM_fonctions.c:49]   --->   Operation 2100 'getelementptr' 'OUTPUT_addr_44' <Predicate = true> <Delay = 0.00>
ST_413 : Operation 2101 [1/1] (0.00ns)   --->   "%mC_addr_48 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_167" [src/BMM_fonctions.c:49]   --->   Operation 2101 'getelementptr' 'mC_addr_48' <Predicate = true> <Delay = 0.00>
ST_413 : Operation 2102 [2/2] (3.25ns)   --->   "%mC_load_43 = load float* %mC_addr_48, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2102 'load' 'mC_load_43' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_413 : Operation 2103 [1/1] (1.42ns)   --->   "%icmp_ln49_43 = icmp eq i6 %empty_148, -1" [src/BMM_fonctions.c:49]   --->   Operation 2103 'icmp' 'icmp_ln49_43' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 414 <SV = 351> <Delay = 8.75>
ST_414 : Operation 2104 [1/2] (3.25ns)   --->   "%mC_load_43 = load float* %mC_addr_48, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2104 'load' 'mC_load_43' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_414 : Operation 2105 [1/1] (8.75ns)   --->   "%p_req204 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_44, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2105 'writereq' 'p_req204' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 415 <SV = 352> <Delay = 8.75>
ST_415 : Operation 2106 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_44, float %mC_load_43, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2106 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 416 <SV = 353> <Delay = 8.75>
ST_416 : Operation 2107 [5/5] (8.75ns)   --->   "%p_resp205 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_44)" [src/BMM_fonctions.c:49]   --->   Operation 2107 'writeresp' 'p_resp205' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 417 <SV = 354> <Delay = 8.75>
ST_417 : Operation 2108 [4/5] (8.75ns)   --->   "%p_resp205 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_44)" [src/BMM_fonctions.c:49]   --->   Operation 2108 'writeresp' 'p_resp205' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 418 <SV = 355> <Delay = 8.75>
ST_418 : Operation 2109 [3/5] (8.75ns)   --->   "%p_resp205 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_44)" [src/BMM_fonctions.c:49]   --->   Operation 2109 'writeresp' 'p_resp205' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 419 <SV = 356> <Delay = 8.75>
ST_419 : Operation 2110 [2/5] (8.75ns)   --->   "%p_resp205 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_44)" [src/BMM_fonctions.c:49]   --->   Operation 2110 'writeresp' 'p_resp205' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 420 <SV = 357> <Delay = 8.75>
ST_420 : Operation 2111 [1/5] (8.75ns)   --->   "%p_resp205 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_44)" [src/BMM_fonctions.c:49]   --->   Operation 2111 'writeresp' 'p_resp205' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_420 : Operation 2112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2112 'specloopname' <Predicate = true> <Delay = 0.00>
ST_420 : Operation 2113 [1/1] (0.00ns)   --->   "%empty_149 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2113 'speclooptripcount' 'empty_149' <Predicate = true> <Delay = 0.00>
ST_420 : Operation 2114 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_43, label %hls_label_043, label %meminst17.43" [src/BMM_fonctions.c:49]   --->   Operation 2114 'br' <Predicate = true> <Delay = 0.00>
ST_420 : Operation 2115 [1/1] (0.00ns)   --->   "%empty_147 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_52) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2115 'specregionend' 'empty_147' <Predicate = (icmp_ln49_43)> <Delay = 0.00>
ST_420 : Operation 2116 [1/1] (0.00ns)   --->   "%tmp_53 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2116 'specregionbegin' 'tmp_53' <Predicate = (icmp_ln49_43)> <Delay = 0.00>
ST_420 : Operation 2117 [1/1] (1.76ns)   --->   "br label %meminst17.44"   --->   Operation 2117 'br' <Predicate = (icmp_ln49_43)> <Delay = 1.76>

State 421 <SV = 358> <Delay = 3.52>
ST_421 : Operation 2118 [1/1] (0.00ns)   --->   "%empty_151 = phi i6 [ 0, %hls_label_043 ], [ %add_ln49_44, %meminst17.44 ]" [src/BMM_fonctions.c:49]   --->   Operation 2118 'phi' 'empty_151' <Predicate = true> <Delay = 0.00>
ST_421 : Operation 2119 [1/1] (1.82ns)   --->   "%add_ln49_44 = add i6 %empty_151, 1" [src/BMM_fonctions.c:49]   --->   Operation 2119 'add' 'add_ln49_44' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_421 : Operation 2120 [1/1] (0.00ns)   --->   "%tmp_168 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 44, i6 %empty_151)" [src/BMM_fonctions.c:49]   --->   Operation 2120 'bitconcatenate' 'tmp_168' <Predicate = true> <Delay = 0.00>
ST_421 : Operation 2121 [1/1] (3.52ns)   --->   "%add_ln49_107 = add i64 %empty, %tmp_168" [src/BMM_fonctions.c:49]   --->   Operation 2121 'add' 'add_ln49_107' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_421 : Operation 2122 [1/1] (0.00ns)   --->   "%OUTPUT_addr_45 = getelementptr float* %OUTPUT_r, i64 %add_ln49_107" [src/BMM_fonctions.c:49]   --->   Operation 2122 'getelementptr' 'OUTPUT_addr_45' <Predicate = true> <Delay = 0.00>
ST_421 : Operation 2123 [1/1] (0.00ns)   --->   "%mC_addr_49 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_168" [src/BMM_fonctions.c:49]   --->   Operation 2123 'getelementptr' 'mC_addr_49' <Predicate = true> <Delay = 0.00>
ST_421 : Operation 2124 [2/2] (3.25ns)   --->   "%mC_load_44 = load float* %mC_addr_49, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2124 'load' 'mC_load_44' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_421 : Operation 2125 [1/1] (1.42ns)   --->   "%icmp_ln49_44 = icmp eq i6 %empty_151, -1" [src/BMM_fonctions.c:49]   --->   Operation 2125 'icmp' 'icmp_ln49_44' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 422 <SV = 359> <Delay = 8.75>
ST_422 : Operation 2126 [1/2] (3.25ns)   --->   "%mC_load_44 = load float* %mC_addr_49, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2126 'load' 'mC_load_44' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_422 : Operation 2127 [1/1] (8.75ns)   --->   "%p_req202 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_45, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2127 'writereq' 'p_req202' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 423 <SV = 360> <Delay = 8.75>
ST_423 : Operation 2128 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_45, float %mC_load_44, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2128 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 424 <SV = 361> <Delay = 8.75>
ST_424 : Operation 2129 [5/5] (8.75ns)   --->   "%p_resp203 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_45)" [src/BMM_fonctions.c:49]   --->   Operation 2129 'writeresp' 'p_resp203' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 425 <SV = 362> <Delay = 8.75>
ST_425 : Operation 2130 [4/5] (8.75ns)   --->   "%p_resp203 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_45)" [src/BMM_fonctions.c:49]   --->   Operation 2130 'writeresp' 'p_resp203' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 426 <SV = 363> <Delay = 8.75>
ST_426 : Operation 2131 [3/5] (8.75ns)   --->   "%p_resp203 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_45)" [src/BMM_fonctions.c:49]   --->   Operation 2131 'writeresp' 'p_resp203' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 427 <SV = 364> <Delay = 8.75>
ST_427 : Operation 2132 [2/5] (8.75ns)   --->   "%p_resp203 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_45)" [src/BMM_fonctions.c:49]   --->   Operation 2132 'writeresp' 'p_resp203' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 428 <SV = 365> <Delay = 8.75>
ST_428 : Operation 2133 [1/5] (8.75ns)   --->   "%p_resp203 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_45)" [src/BMM_fonctions.c:49]   --->   Operation 2133 'writeresp' 'p_resp203' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_428 : Operation 2134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2134 'specloopname' <Predicate = true> <Delay = 0.00>
ST_428 : Operation 2135 [1/1] (0.00ns)   --->   "%empty_152 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2135 'speclooptripcount' 'empty_152' <Predicate = true> <Delay = 0.00>
ST_428 : Operation 2136 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_44, label %hls_label_044, label %meminst17.44" [src/BMM_fonctions.c:49]   --->   Operation 2136 'br' <Predicate = true> <Delay = 0.00>
ST_428 : Operation 2137 [1/1] (0.00ns)   --->   "%empty_150 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_53) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2137 'specregionend' 'empty_150' <Predicate = (icmp_ln49_44)> <Delay = 0.00>
ST_428 : Operation 2138 [1/1] (0.00ns)   --->   "%tmp_54 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2138 'specregionbegin' 'tmp_54' <Predicate = (icmp_ln49_44)> <Delay = 0.00>
ST_428 : Operation 2139 [1/1] (1.76ns)   --->   "br label %meminst17.45"   --->   Operation 2139 'br' <Predicate = (icmp_ln49_44)> <Delay = 1.76>

State 429 <SV = 366> <Delay = 3.52>
ST_429 : Operation 2140 [1/1] (0.00ns)   --->   "%empty_154 = phi i6 [ 0, %hls_label_044 ], [ %add_ln49_45, %meminst17.45 ]" [src/BMM_fonctions.c:49]   --->   Operation 2140 'phi' 'empty_154' <Predicate = true> <Delay = 0.00>
ST_429 : Operation 2141 [1/1] (1.82ns)   --->   "%add_ln49_45 = add i6 %empty_154, 1" [src/BMM_fonctions.c:49]   --->   Operation 2141 'add' 'add_ln49_45' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_429 : Operation 2142 [1/1] (0.00ns)   --->   "%tmp_169 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 45, i6 %empty_154)" [src/BMM_fonctions.c:49]   --->   Operation 2142 'bitconcatenate' 'tmp_169' <Predicate = true> <Delay = 0.00>
ST_429 : Operation 2143 [1/1] (3.52ns)   --->   "%add_ln49_108 = add i64 %empty, %tmp_169" [src/BMM_fonctions.c:49]   --->   Operation 2143 'add' 'add_ln49_108' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_429 : Operation 2144 [1/1] (0.00ns)   --->   "%OUTPUT_addr_46 = getelementptr float* %OUTPUT_r, i64 %add_ln49_108" [src/BMM_fonctions.c:49]   --->   Operation 2144 'getelementptr' 'OUTPUT_addr_46' <Predicate = true> <Delay = 0.00>
ST_429 : Operation 2145 [1/1] (0.00ns)   --->   "%mC_addr_50 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_169" [src/BMM_fonctions.c:49]   --->   Operation 2145 'getelementptr' 'mC_addr_50' <Predicate = true> <Delay = 0.00>
ST_429 : Operation 2146 [2/2] (3.25ns)   --->   "%mC_load_45 = load float* %mC_addr_50, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2146 'load' 'mC_load_45' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_429 : Operation 2147 [1/1] (1.42ns)   --->   "%icmp_ln49_45 = icmp eq i6 %empty_154, -1" [src/BMM_fonctions.c:49]   --->   Operation 2147 'icmp' 'icmp_ln49_45' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 430 <SV = 367> <Delay = 8.75>
ST_430 : Operation 2148 [1/2] (3.25ns)   --->   "%mC_load_45 = load float* %mC_addr_50, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2148 'load' 'mC_load_45' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_430 : Operation 2149 [1/1] (8.75ns)   --->   "%p_req200 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_46, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2149 'writereq' 'p_req200' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 431 <SV = 368> <Delay = 8.75>
ST_431 : Operation 2150 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_46, float %mC_load_45, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2150 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 432 <SV = 369> <Delay = 8.75>
ST_432 : Operation 2151 [5/5] (8.75ns)   --->   "%p_resp201 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_46)" [src/BMM_fonctions.c:49]   --->   Operation 2151 'writeresp' 'p_resp201' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 433 <SV = 370> <Delay = 8.75>
ST_433 : Operation 2152 [4/5] (8.75ns)   --->   "%p_resp201 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_46)" [src/BMM_fonctions.c:49]   --->   Operation 2152 'writeresp' 'p_resp201' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 434 <SV = 371> <Delay = 8.75>
ST_434 : Operation 2153 [3/5] (8.75ns)   --->   "%p_resp201 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_46)" [src/BMM_fonctions.c:49]   --->   Operation 2153 'writeresp' 'p_resp201' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 435 <SV = 372> <Delay = 8.75>
ST_435 : Operation 2154 [2/5] (8.75ns)   --->   "%p_resp201 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_46)" [src/BMM_fonctions.c:49]   --->   Operation 2154 'writeresp' 'p_resp201' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 436 <SV = 373> <Delay = 8.75>
ST_436 : Operation 2155 [1/5] (8.75ns)   --->   "%p_resp201 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_46)" [src/BMM_fonctions.c:49]   --->   Operation 2155 'writeresp' 'p_resp201' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_436 : Operation 2156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2156 'specloopname' <Predicate = true> <Delay = 0.00>
ST_436 : Operation 2157 [1/1] (0.00ns)   --->   "%empty_155 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2157 'speclooptripcount' 'empty_155' <Predicate = true> <Delay = 0.00>
ST_436 : Operation 2158 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_45, label %hls_label_045, label %meminst17.45" [src/BMM_fonctions.c:49]   --->   Operation 2158 'br' <Predicate = true> <Delay = 0.00>
ST_436 : Operation 2159 [1/1] (0.00ns)   --->   "%empty_153 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_54) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2159 'specregionend' 'empty_153' <Predicate = (icmp_ln49_45)> <Delay = 0.00>
ST_436 : Operation 2160 [1/1] (0.00ns)   --->   "%tmp_55 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2160 'specregionbegin' 'tmp_55' <Predicate = (icmp_ln49_45)> <Delay = 0.00>
ST_436 : Operation 2161 [1/1] (1.76ns)   --->   "br label %meminst17.46"   --->   Operation 2161 'br' <Predicate = (icmp_ln49_45)> <Delay = 1.76>

State 437 <SV = 374> <Delay = 3.52>
ST_437 : Operation 2162 [1/1] (0.00ns)   --->   "%empty_157 = phi i6 [ 0, %hls_label_045 ], [ %add_ln49_46, %meminst17.46 ]" [src/BMM_fonctions.c:49]   --->   Operation 2162 'phi' 'empty_157' <Predicate = true> <Delay = 0.00>
ST_437 : Operation 2163 [1/1] (1.82ns)   --->   "%add_ln49_46 = add i6 %empty_157, 1" [src/BMM_fonctions.c:49]   --->   Operation 2163 'add' 'add_ln49_46' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_437 : Operation 2164 [1/1] (0.00ns)   --->   "%tmp_170 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 46, i6 %empty_157)" [src/BMM_fonctions.c:49]   --->   Operation 2164 'bitconcatenate' 'tmp_170' <Predicate = true> <Delay = 0.00>
ST_437 : Operation 2165 [1/1] (3.52ns)   --->   "%add_ln49_109 = add i64 %empty, %tmp_170" [src/BMM_fonctions.c:49]   --->   Operation 2165 'add' 'add_ln49_109' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_437 : Operation 2166 [1/1] (0.00ns)   --->   "%OUTPUT_addr_47 = getelementptr float* %OUTPUT_r, i64 %add_ln49_109" [src/BMM_fonctions.c:49]   --->   Operation 2166 'getelementptr' 'OUTPUT_addr_47' <Predicate = true> <Delay = 0.00>
ST_437 : Operation 2167 [1/1] (0.00ns)   --->   "%mC_addr_51 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_170" [src/BMM_fonctions.c:49]   --->   Operation 2167 'getelementptr' 'mC_addr_51' <Predicate = true> <Delay = 0.00>
ST_437 : Operation 2168 [2/2] (3.25ns)   --->   "%mC_load_46 = load float* %mC_addr_51, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2168 'load' 'mC_load_46' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_437 : Operation 2169 [1/1] (1.42ns)   --->   "%icmp_ln49_46 = icmp eq i6 %empty_157, -1" [src/BMM_fonctions.c:49]   --->   Operation 2169 'icmp' 'icmp_ln49_46' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 438 <SV = 375> <Delay = 8.75>
ST_438 : Operation 2170 [1/2] (3.25ns)   --->   "%mC_load_46 = load float* %mC_addr_51, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2170 'load' 'mC_load_46' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_438 : Operation 2171 [1/1] (8.75ns)   --->   "%p_req198 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_47, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2171 'writereq' 'p_req198' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 439 <SV = 376> <Delay = 8.75>
ST_439 : Operation 2172 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_47, float %mC_load_46, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2172 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 440 <SV = 377> <Delay = 8.75>
ST_440 : Operation 2173 [5/5] (8.75ns)   --->   "%p_resp199 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_47)" [src/BMM_fonctions.c:49]   --->   Operation 2173 'writeresp' 'p_resp199' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 441 <SV = 378> <Delay = 8.75>
ST_441 : Operation 2174 [4/5] (8.75ns)   --->   "%p_resp199 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_47)" [src/BMM_fonctions.c:49]   --->   Operation 2174 'writeresp' 'p_resp199' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 442 <SV = 379> <Delay = 8.75>
ST_442 : Operation 2175 [3/5] (8.75ns)   --->   "%p_resp199 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_47)" [src/BMM_fonctions.c:49]   --->   Operation 2175 'writeresp' 'p_resp199' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 443 <SV = 380> <Delay = 8.75>
ST_443 : Operation 2176 [2/5] (8.75ns)   --->   "%p_resp199 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_47)" [src/BMM_fonctions.c:49]   --->   Operation 2176 'writeresp' 'p_resp199' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 444 <SV = 381> <Delay = 8.75>
ST_444 : Operation 2177 [1/5] (8.75ns)   --->   "%p_resp199 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_47)" [src/BMM_fonctions.c:49]   --->   Operation 2177 'writeresp' 'p_resp199' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_444 : Operation 2178 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2178 'specloopname' <Predicate = true> <Delay = 0.00>
ST_444 : Operation 2179 [1/1] (0.00ns)   --->   "%empty_158 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2179 'speclooptripcount' 'empty_158' <Predicate = true> <Delay = 0.00>
ST_444 : Operation 2180 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_46, label %hls_label_046, label %meminst17.46" [src/BMM_fonctions.c:49]   --->   Operation 2180 'br' <Predicate = true> <Delay = 0.00>
ST_444 : Operation 2181 [1/1] (0.00ns)   --->   "%empty_156 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_55) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2181 'specregionend' 'empty_156' <Predicate = (icmp_ln49_46)> <Delay = 0.00>
ST_444 : Operation 2182 [1/1] (0.00ns)   --->   "%tmp_56 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2182 'specregionbegin' 'tmp_56' <Predicate = (icmp_ln49_46)> <Delay = 0.00>
ST_444 : Operation 2183 [1/1] (1.76ns)   --->   "br label %meminst17.47"   --->   Operation 2183 'br' <Predicate = (icmp_ln49_46)> <Delay = 1.76>

State 445 <SV = 382> <Delay = 3.52>
ST_445 : Operation 2184 [1/1] (0.00ns)   --->   "%empty_160 = phi i6 [ 0, %hls_label_046 ], [ %add_ln49_47, %meminst17.47 ]" [src/BMM_fonctions.c:49]   --->   Operation 2184 'phi' 'empty_160' <Predicate = true> <Delay = 0.00>
ST_445 : Operation 2185 [1/1] (1.82ns)   --->   "%add_ln49_47 = add i6 %empty_160, 1" [src/BMM_fonctions.c:49]   --->   Operation 2185 'add' 'add_ln49_47' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_445 : Operation 2186 [1/1] (0.00ns)   --->   "%tmp_171 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 47, i6 %empty_160)" [src/BMM_fonctions.c:49]   --->   Operation 2186 'bitconcatenate' 'tmp_171' <Predicate = true> <Delay = 0.00>
ST_445 : Operation 2187 [1/1] (3.52ns)   --->   "%add_ln49_110 = add i64 %empty, %tmp_171" [src/BMM_fonctions.c:49]   --->   Operation 2187 'add' 'add_ln49_110' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_445 : Operation 2188 [1/1] (0.00ns)   --->   "%OUTPUT_addr_48 = getelementptr float* %OUTPUT_r, i64 %add_ln49_110" [src/BMM_fonctions.c:49]   --->   Operation 2188 'getelementptr' 'OUTPUT_addr_48' <Predicate = true> <Delay = 0.00>
ST_445 : Operation 2189 [1/1] (0.00ns)   --->   "%mC_addr_52 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_171" [src/BMM_fonctions.c:49]   --->   Operation 2189 'getelementptr' 'mC_addr_52' <Predicate = true> <Delay = 0.00>
ST_445 : Operation 2190 [2/2] (3.25ns)   --->   "%mC_load_47 = load float* %mC_addr_52, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2190 'load' 'mC_load_47' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_445 : Operation 2191 [1/1] (1.42ns)   --->   "%icmp_ln49_47 = icmp eq i6 %empty_160, -1" [src/BMM_fonctions.c:49]   --->   Operation 2191 'icmp' 'icmp_ln49_47' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 446 <SV = 383> <Delay = 8.75>
ST_446 : Operation 2192 [1/2] (3.25ns)   --->   "%mC_load_47 = load float* %mC_addr_52, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2192 'load' 'mC_load_47' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_446 : Operation 2193 [1/1] (8.75ns)   --->   "%p_req196 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_48, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2193 'writereq' 'p_req196' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 447 <SV = 384> <Delay = 8.75>
ST_447 : Operation 2194 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_48, float %mC_load_47, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2194 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 448 <SV = 385> <Delay = 8.75>
ST_448 : Operation 2195 [5/5] (8.75ns)   --->   "%p_resp197 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_48)" [src/BMM_fonctions.c:49]   --->   Operation 2195 'writeresp' 'p_resp197' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 449 <SV = 386> <Delay = 8.75>
ST_449 : Operation 2196 [4/5] (8.75ns)   --->   "%p_resp197 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_48)" [src/BMM_fonctions.c:49]   --->   Operation 2196 'writeresp' 'p_resp197' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 450 <SV = 387> <Delay = 8.75>
ST_450 : Operation 2197 [3/5] (8.75ns)   --->   "%p_resp197 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_48)" [src/BMM_fonctions.c:49]   --->   Operation 2197 'writeresp' 'p_resp197' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 451 <SV = 388> <Delay = 8.75>
ST_451 : Operation 2198 [2/5] (8.75ns)   --->   "%p_resp197 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_48)" [src/BMM_fonctions.c:49]   --->   Operation 2198 'writeresp' 'p_resp197' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 452 <SV = 389> <Delay = 8.75>
ST_452 : Operation 2199 [1/5] (8.75ns)   --->   "%p_resp197 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_48)" [src/BMM_fonctions.c:49]   --->   Operation 2199 'writeresp' 'p_resp197' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_452 : Operation 2200 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2200 'specloopname' <Predicate = true> <Delay = 0.00>
ST_452 : Operation 2201 [1/1] (0.00ns)   --->   "%empty_161 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2201 'speclooptripcount' 'empty_161' <Predicate = true> <Delay = 0.00>
ST_452 : Operation 2202 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_47, label %hls_label_047, label %meminst17.47" [src/BMM_fonctions.c:49]   --->   Operation 2202 'br' <Predicate = true> <Delay = 0.00>
ST_452 : Operation 2203 [1/1] (0.00ns)   --->   "%empty_159 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_56) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2203 'specregionend' 'empty_159' <Predicate = (icmp_ln49_47)> <Delay = 0.00>
ST_452 : Operation 2204 [1/1] (0.00ns)   --->   "%tmp_57 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2204 'specregionbegin' 'tmp_57' <Predicate = (icmp_ln49_47)> <Delay = 0.00>
ST_452 : Operation 2205 [1/1] (1.76ns)   --->   "br label %meminst17.48"   --->   Operation 2205 'br' <Predicate = (icmp_ln49_47)> <Delay = 1.76>

State 453 <SV = 390> <Delay = 3.52>
ST_453 : Operation 2206 [1/1] (0.00ns)   --->   "%empty_163 = phi i6 [ 0, %hls_label_047 ], [ %add_ln49_48, %meminst17.48 ]" [src/BMM_fonctions.c:49]   --->   Operation 2206 'phi' 'empty_163' <Predicate = true> <Delay = 0.00>
ST_453 : Operation 2207 [1/1] (1.82ns)   --->   "%add_ln49_48 = add i6 %empty_163, 1" [src/BMM_fonctions.c:49]   --->   Operation 2207 'add' 'add_ln49_48' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_453 : Operation 2208 [1/1] (0.00ns)   --->   "%tmp_172 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 48, i6 %empty_163)" [src/BMM_fonctions.c:49]   --->   Operation 2208 'bitconcatenate' 'tmp_172' <Predicate = true> <Delay = 0.00>
ST_453 : Operation 2209 [1/1] (3.52ns)   --->   "%add_ln49_111 = add i64 %empty, %tmp_172" [src/BMM_fonctions.c:49]   --->   Operation 2209 'add' 'add_ln49_111' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_453 : Operation 2210 [1/1] (0.00ns)   --->   "%OUTPUT_addr_49 = getelementptr float* %OUTPUT_r, i64 %add_ln49_111" [src/BMM_fonctions.c:49]   --->   Operation 2210 'getelementptr' 'OUTPUT_addr_49' <Predicate = true> <Delay = 0.00>
ST_453 : Operation 2211 [1/1] (0.00ns)   --->   "%mC_addr_53 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_172" [src/BMM_fonctions.c:49]   --->   Operation 2211 'getelementptr' 'mC_addr_53' <Predicate = true> <Delay = 0.00>
ST_453 : Operation 2212 [2/2] (3.25ns)   --->   "%mC_load_48 = load float* %mC_addr_53, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2212 'load' 'mC_load_48' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_453 : Operation 2213 [1/1] (1.42ns)   --->   "%icmp_ln49_48 = icmp eq i6 %empty_163, -1" [src/BMM_fonctions.c:49]   --->   Operation 2213 'icmp' 'icmp_ln49_48' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 454 <SV = 391> <Delay = 8.75>
ST_454 : Operation 2214 [1/2] (3.25ns)   --->   "%mC_load_48 = load float* %mC_addr_53, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2214 'load' 'mC_load_48' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_454 : Operation 2215 [1/1] (8.75ns)   --->   "%p_req194 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_49, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2215 'writereq' 'p_req194' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 455 <SV = 392> <Delay = 8.75>
ST_455 : Operation 2216 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_49, float %mC_load_48, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2216 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 456 <SV = 393> <Delay = 8.75>
ST_456 : Operation 2217 [5/5] (8.75ns)   --->   "%p_resp195 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_49)" [src/BMM_fonctions.c:49]   --->   Operation 2217 'writeresp' 'p_resp195' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 457 <SV = 394> <Delay = 8.75>
ST_457 : Operation 2218 [4/5] (8.75ns)   --->   "%p_resp195 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_49)" [src/BMM_fonctions.c:49]   --->   Operation 2218 'writeresp' 'p_resp195' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 458 <SV = 395> <Delay = 8.75>
ST_458 : Operation 2219 [3/5] (8.75ns)   --->   "%p_resp195 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_49)" [src/BMM_fonctions.c:49]   --->   Operation 2219 'writeresp' 'p_resp195' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 459 <SV = 396> <Delay = 8.75>
ST_459 : Operation 2220 [2/5] (8.75ns)   --->   "%p_resp195 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_49)" [src/BMM_fonctions.c:49]   --->   Operation 2220 'writeresp' 'p_resp195' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 460 <SV = 397> <Delay = 8.75>
ST_460 : Operation 2221 [1/5] (8.75ns)   --->   "%p_resp195 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_49)" [src/BMM_fonctions.c:49]   --->   Operation 2221 'writeresp' 'p_resp195' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_460 : Operation 2222 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2222 'specloopname' <Predicate = true> <Delay = 0.00>
ST_460 : Operation 2223 [1/1] (0.00ns)   --->   "%empty_164 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2223 'speclooptripcount' 'empty_164' <Predicate = true> <Delay = 0.00>
ST_460 : Operation 2224 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_48, label %hls_label_048, label %meminst17.48" [src/BMM_fonctions.c:49]   --->   Operation 2224 'br' <Predicate = true> <Delay = 0.00>
ST_460 : Operation 2225 [1/1] (0.00ns)   --->   "%empty_162 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_57) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2225 'specregionend' 'empty_162' <Predicate = (icmp_ln49_48)> <Delay = 0.00>
ST_460 : Operation 2226 [1/1] (0.00ns)   --->   "%tmp_58 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2226 'specregionbegin' 'tmp_58' <Predicate = (icmp_ln49_48)> <Delay = 0.00>
ST_460 : Operation 2227 [1/1] (1.76ns)   --->   "br label %meminst17.49"   --->   Operation 2227 'br' <Predicate = (icmp_ln49_48)> <Delay = 1.76>

State 461 <SV = 398> <Delay = 3.52>
ST_461 : Operation 2228 [1/1] (0.00ns)   --->   "%empty_166 = phi i6 [ 0, %hls_label_048 ], [ %add_ln49_49, %meminst17.49 ]" [src/BMM_fonctions.c:49]   --->   Operation 2228 'phi' 'empty_166' <Predicate = true> <Delay = 0.00>
ST_461 : Operation 2229 [1/1] (1.82ns)   --->   "%add_ln49_49 = add i6 %empty_166, 1" [src/BMM_fonctions.c:49]   --->   Operation 2229 'add' 'add_ln49_49' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_461 : Operation 2230 [1/1] (0.00ns)   --->   "%tmp_173 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 49, i6 %empty_166)" [src/BMM_fonctions.c:49]   --->   Operation 2230 'bitconcatenate' 'tmp_173' <Predicate = true> <Delay = 0.00>
ST_461 : Operation 2231 [1/1] (3.52ns)   --->   "%add_ln49_112 = add i64 %empty, %tmp_173" [src/BMM_fonctions.c:49]   --->   Operation 2231 'add' 'add_ln49_112' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_461 : Operation 2232 [1/1] (0.00ns)   --->   "%OUTPUT_addr_50 = getelementptr float* %OUTPUT_r, i64 %add_ln49_112" [src/BMM_fonctions.c:49]   --->   Operation 2232 'getelementptr' 'OUTPUT_addr_50' <Predicate = true> <Delay = 0.00>
ST_461 : Operation 2233 [1/1] (0.00ns)   --->   "%mC_addr_54 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_173" [src/BMM_fonctions.c:49]   --->   Operation 2233 'getelementptr' 'mC_addr_54' <Predicate = true> <Delay = 0.00>
ST_461 : Operation 2234 [2/2] (3.25ns)   --->   "%mC_load_49 = load float* %mC_addr_54, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2234 'load' 'mC_load_49' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_461 : Operation 2235 [1/1] (1.42ns)   --->   "%icmp_ln49_49 = icmp eq i6 %empty_166, -1" [src/BMM_fonctions.c:49]   --->   Operation 2235 'icmp' 'icmp_ln49_49' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 462 <SV = 399> <Delay = 8.75>
ST_462 : Operation 2236 [1/2] (3.25ns)   --->   "%mC_load_49 = load float* %mC_addr_54, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2236 'load' 'mC_load_49' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_462 : Operation 2237 [1/1] (8.75ns)   --->   "%p_req192 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_50, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2237 'writereq' 'p_req192' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 463 <SV = 400> <Delay = 8.75>
ST_463 : Operation 2238 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_50, float %mC_load_49, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2238 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 464 <SV = 401> <Delay = 8.75>
ST_464 : Operation 2239 [5/5] (8.75ns)   --->   "%p_resp193 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_50)" [src/BMM_fonctions.c:49]   --->   Operation 2239 'writeresp' 'p_resp193' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 465 <SV = 402> <Delay = 8.75>
ST_465 : Operation 2240 [4/5] (8.75ns)   --->   "%p_resp193 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_50)" [src/BMM_fonctions.c:49]   --->   Operation 2240 'writeresp' 'p_resp193' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 466 <SV = 403> <Delay = 8.75>
ST_466 : Operation 2241 [3/5] (8.75ns)   --->   "%p_resp193 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_50)" [src/BMM_fonctions.c:49]   --->   Operation 2241 'writeresp' 'p_resp193' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 467 <SV = 404> <Delay = 8.75>
ST_467 : Operation 2242 [2/5] (8.75ns)   --->   "%p_resp193 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_50)" [src/BMM_fonctions.c:49]   --->   Operation 2242 'writeresp' 'p_resp193' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 468 <SV = 405> <Delay = 8.75>
ST_468 : Operation 2243 [1/5] (8.75ns)   --->   "%p_resp193 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_50)" [src/BMM_fonctions.c:49]   --->   Operation 2243 'writeresp' 'p_resp193' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_468 : Operation 2244 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2244 'specloopname' <Predicate = true> <Delay = 0.00>
ST_468 : Operation 2245 [1/1] (0.00ns)   --->   "%empty_167 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2245 'speclooptripcount' 'empty_167' <Predicate = true> <Delay = 0.00>
ST_468 : Operation 2246 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_49, label %hls_label_049, label %meminst17.49" [src/BMM_fonctions.c:49]   --->   Operation 2246 'br' <Predicate = true> <Delay = 0.00>
ST_468 : Operation 2247 [1/1] (0.00ns)   --->   "%empty_165 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_58) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2247 'specregionend' 'empty_165' <Predicate = (icmp_ln49_49)> <Delay = 0.00>
ST_468 : Operation 2248 [1/1] (0.00ns)   --->   "%tmp_59 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2248 'specregionbegin' 'tmp_59' <Predicate = (icmp_ln49_49)> <Delay = 0.00>
ST_468 : Operation 2249 [1/1] (1.76ns)   --->   "br label %meminst17.50"   --->   Operation 2249 'br' <Predicate = (icmp_ln49_49)> <Delay = 1.76>

State 469 <SV = 406> <Delay = 3.52>
ST_469 : Operation 2250 [1/1] (0.00ns)   --->   "%empty_169 = phi i6 [ 0, %hls_label_049 ], [ %add_ln49_50, %meminst17.50 ]" [src/BMM_fonctions.c:49]   --->   Operation 2250 'phi' 'empty_169' <Predicate = true> <Delay = 0.00>
ST_469 : Operation 2251 [1/1] (1.82ns)   --->   "%add_ln49_50 = add i6 %empty_169, 1" [src/BMM_fonctions.c:49]   --->   Operation 2251 'add' 'add_ln49_50' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_469 : Operation 2252 [1/1] (0.00ns)   --->   "%tmp_174 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 50, i6 %empty_169)" [src/BMM_fonctions.c:49]   --->   Operation 2252 'bitconcatenate' 'tmp_174' <Predicate = true> <Delay = 0.00>
ST_469 : Operation 2253 [1/1] (3.52ns)   --->   "%add_ln49_113 = add i64 %empty, %tmp_174" [src/BMM_fonctions.c:49]   --->   Operation 2253 'add' 'add_ln49_113' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_469 : Operation 2254 [1/1] (0.00ns)   --->   "%OUTPUT_addr_51 = getelementptr float* %OUTPUT_r, i64 %add_ln49_113" [src/BMM_fonctions.c:49]   --->   Operation 2254 'getelementptr' 'OUTPUT_addr_51' <Predicate = true> <Delay = 0.00>
ST_469 : Operation 2255 [1/1] (0.00ns)   --->   "%mC_addr_55 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_174" [src/BMM_fonctions.c:49]   --->   Operation 2255 'getelementptr' 'mC_addr_55' <Predicate = true> <Delay = 0.00>
ST_469 : Operation 2256 [2/2] (3.25ns)   --->   "%mC_load_50 = load float* %mC_addr_55, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2256 'load' 'mC_load_50' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_469 : Operation 2257 [1/1] (1.42ns)   --->   "%icmp_ln49_50 = icmp eq i6 %empty_169, -1" [src/BMM_fonctions.c:49]   --->   Operation 2257 'icmp' 'icmp_ln49_50' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 470 <SV = 407> <Delay = 8.75>
ST_470 : Operation 2258 [1/2] (3.25ns)   --->   "%mC_load_50 = load float* %mC_addr_55, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2258 'load' 'mC_load_50' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_470 : Operation 2259 [1/1] (8.75ns)   --->   "%p_req190 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_51, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2259 'writereq' 'p_req190' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 471 <SV = 408> <Delay = 8.75>
ST_471 : Operation 2260 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_51, float %mC_load_50, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2260 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 472 <SV = 409> <Delay = 8.75>
ST_472 : Operation 2261 [5/5] (8.75ns)   --->   "%p_resp191 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_51)" [src/BMM_fonctions.c:49]   --->   Operation 2261 'writeresp' 'p_resp191' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 473 <SV = 410> <Delay = 8.75>
ST_473 : Operation 2262 [4/5] (8.75ns)   --->   "%p_resp191 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_51)" [src/BMM_fonctions.c:49]   --->   Operation 2262 'writeresp' 'p_resp191' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 474 <SV = 411> <Delay = 8.75>
ST_474 : Operation 2263 [3/5] (8.75ns)   --->   "%p_resp191 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_51)" [src/BMM_fonctions.c:49]   --->   Operation 2263 'writeresp' 'p_resp191' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 475 <SV = 412> <Delay = 8.75>
ST_475 : Operation 2264 [2/5] (8.75ns)   --->   "%p_resp191 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_51)" [src/BMM_fonctions.c:49]   --->   Operation 2264 'writeresp' 'p_resp191' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 476 <SV = 413> <Delay = 8.75>
ST_476 : Operation 2265 [1/5] (8.75ns)   --->   "%p_resp191 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_51)" [src/BMM_fonctions.c:49]   --->   Operation 2265 'writeresp' 'p_resp191' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_476 : Operation 2266 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2266 'specloopname' <Predicate = true> <Delay = 0.00>
ST_476 : Operation 2267 [1/1] (0.00ns)   --->   "%empty_170 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2267 'speclooptripcount' 'empty_170' <Predicate = true> <Delay = 0.00>
ST_476 : Operation 2268 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_50, label %hls_label_050, label %meminst17.50" [src/BMM_fonctions.c:49]   --->   Operation 2268 'br' <Predicate = true> <Delay = 0.00>
ST_476 : Operation 2269 [1/1] (0.00ns)   --->   "%empty_168 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_59) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2269 'specregionend' 'empty_168' <Predicate = (icmp_ln49_50)> <Delay = 0.00>
ST_476 : Operation 2270 [1/1] (0.00ns)   --->   "%tmp_60 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2270 'specregionbegin' 'tmp_60' <Predicate = (icmp_ln49_50)> <Delay = 0.00>
ST_476 : Operation 2271 [1/1] (1.76ns)   --->   "br label %meminst17.51"   --->   Operation 2271 'br' <Predicate = (icmp_ln49_50)> <Delay = 1.76>

State 477 <SV = 414> <Delay = 3.52>
ST_477 : Operation 2272 [1/1] (0.00ns)   --->   "%empty_172 = phi i6 [ 0, %hls_label_050 ], [ %add_ln49_51, %meminst17.51 ]" [src/BMM_fonctions.c:49]   --->   Operation 2272 'phi' 'empty_172' <Predicate = true> <Delay = 0.00>
ST_477 : Operation 2273 [1/1] (1.82ns)   --->   "%add_ln49_51 = add i6 %empty_172, 1" [src/BMM_fonctions.c:49]   --->   Operation 2273 'add' 'add_ln49_51' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_477 : Operation 2274 [1/1] (0.00ns)   --->   "%tmp_175 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 51, i6 %empty_172)" [src/BMM_fonctions.c:49]   --->   Operation 2274 'bitconcatenate' 'tmp_175' <Predicate = true> <Delay = 0.00>
ST_477 : Operation 2275 [1/1] (3.52ns)   --->   "%add_ln49_114 = add i64 %empty, %tmp_175" [src/BMM_fonctions.c:49]   --->   Operation 2275 'add' 'add_ln49_114' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_477 : Operation 2276 [1/1] (0.00ns)   --->   "%OUTPUT_addr_52 = getelementptr float* %OUTPUT_r, i64 %add_ln49_114" [src/BMM_fonctions.c:49]   --->   Operation 2276 'getelementptr' 'OUTPUT_addr_52' <Predicate = true> <Delay = 0.00>
ST_477 : Operation 2277 [1/1] (0.00ns)   --->   "%mC_addr_56 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_175" [src/BMM_fonctions.c:49]   --->   Operation 2277 'getelementptr' 'mC_addr_56' <Predicate = true> <Delay = 0.00>
ST_477 : Operation 2278 [2/2] (3.25ns)   --->   "%mC_load_51 = load float* %mC_addr_56, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2278 'load' 'mC_load_51' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_477 : Operation 2279 [1/1] (1.42ns)   --->   "%icmp_ln49_51 = icmp eq i6 %empty_172, -1" [src/BMM_fonctions.c:49]   --->   Operation 2279 'icmp' 'icmp_ln49_51' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 478 <SV = 415> <Delay = 8.75>
ST_478 : Operation 2280 [1/2] (3.25ns)   --->   "%mC_load_51 = load float* %mC_addr_56, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2280 'load' 'mC_load_51' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_478 : Operation 2281 [1/1] (8.75ns)   --->   "%p_req188 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_52, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2281 'writereq' 'p_req188' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 479 <SV = 416> <Delay = 8.75>
ST_479 : Operation 2282 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_52, float %mC_load_51, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2282 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 480 <SV = 417> <Delay = 8.75>
ST_480 : Operation 2283 [5/5] (8.75ns)   --->   "%p_resp189 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_52)" [src/BMM_fonctions.c:49]   --->   Operation 2283 'writeresp' 'p_resp189' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 481 <SV = 418> <Delay = 8.75>
ST_481 : Operation 2284 [4/5] (8.75ns)   --->   "%p_resp189 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_52)" [src/BMM_fonctions.c:49]   --->   Operation 2284 'writeresp' 'p_resp189' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 482 <SV = 419> <Delay = 8.75>
ST_482 : Operation 2285 [3/5] (8.75ns)   --->   "%p_resp189 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_52)" [src/BMM_fonctions.c:49]   --->   Operation 2285 'writeresp' 'p_resp189' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 483 <SV = 420> <Delay = 8.75>
ST_483 : Operation 2286 [2/5] (8.75ns)   --->   "%p_resp189 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_52)" [src/BMM_fonctions.c:49]   --->   Operation 2286 'writeresp' 'p_resp189' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 484 <SV = 421> <Delay = 8.75>
ST_484 : Operation 2287 [1/5] (8.75ns)   --->   "%p_resp189 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_52)" [src/BMM_fonctions.c:49]   --->   Operation 2287 'writeresp' 'p_resp189' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_484 : Operation 2288 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2288 'specloopname' <Predicate = true> <Delay = 0.00>
ST_484 : Operation 2289 [1/1] (0.00ns)   --->   "%empty_173 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2289 'speclooptripcount' 'empty_173' <Predicate = true> <Delay = 0.00>
ST_484 : Operation 2290 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_51, label %hls_label_051, label %meminst17.51" [src/BMM_fonctions.c:49]   --->   Operation 2290 'br' <Predicate = true> <Delay = 0.00>
ST_484 : Operation 2291 [1/1] (0.00ns)   --->   "%empty_171 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_60) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2291 'specregionend' 'empty_171' <Predicate = (icmp_ln49_51)> <Delay = 0.00>
ST_484 : Operation 2292 [1/1] (0.00ns)   --->   "%tmp_61 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2292 'specregionbegin' 'tmp_61' <Predicate = (icmp_ln49_51)> <Delay = 0.00>
ST_484 : Operation 2293 [1/1] (1.76ns)   --->   "br label %meminst17.52"   --->   Operation 2293 'br' <Predicate = (icmp_ln49_51)> <Delay = 1.76>

State 485 <SV = 422> <Delay = 3.52>
ST_485 : Operation 2294 [1/1] (0.00ns)   --->   "%empty_175 = phi i6 [ 0, %hls_label_051 ], [ %add_ln49_52, %meminst17.52 ]" [src/BMM_fonctions.c:49]   --->   Operation 2294 'phi' 'empty_175' <Predicate = true> <Delay = 0.00>
ST_485 : Operation 2295 [1/1] (1.82ns)   --->   "%add_ln49_52 = add i6 %empty_175, 1" [src/BMM_fonctions.c:49]   --->   Operation 2295 'add' 'add_ln49_52' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_485 : Operation 2296 [1/1] (0.00ns)   --->   "%tmp_176 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 52, i6 %empty_175)" [src/BMM_fonctions.c:49]   --->   Operation 2296 'bitconcatenate' 'tmp_176' <Predicate = true> <Delay = 0.00>
ST_485 : Operation 2297 [1/1] (3.52ns)   --->   "%add_ln49_115 = add i64 %empty, %tmp_176" [src/BMM_fonctions.c:49]   --->   Operation 2297 'add' 'add_ln49_115' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_485 : Operation 2298 [1/1] (0.00ns)   --->   "%OUTPUT_addr_53 = getelementptr float* %OUTPUT_r, i64 %add_ln49_115" [src/BMM_fonctions.c:49]   --->   Operation 2298 'getelementptr' 'OUTPUT_addr_53' <Predicate = true> <Delay = 0.00>
ST_485 : Operation 2299 [1/1] (0.00ns)   --->   "%mC_addr_57 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_176" [src/BMM_fonctions.c:49]   --->   Operation 2299 'getelementptr' 'mC_addr_57' <Predicate = true> <Delay = 0.00>
ST_485 : Operation 2300 [2/2] (3.25ns)   --->   "%mC_load_52 = load float* %mC_addr_57, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2300 'load' 'mC_load_52' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_485 : Operation 2301 [1/1] (1.42ns)   --->   "%icmp_ln49_52 = icmp eq i6 %empty_175, -1" [src/BMM_fonctions.c:49]   --->   Operation 2301 'icmp' 'icmp_ln49_52' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 486 <SV = 423> <Delay = 8.75>
ST_486 : Operation 2302 [1/2] (3.25ns)   --->   "%mC_load_52 = load float* %mC_addr_57, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2302 'load' 'mC_load_52' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_486 : Operation 2303 [1/1] (8.75ns)   --->   "%p_req186 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_53, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2303 'writereq' 'p_req186' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 487 <SV = 424> <Delay = 8.75>
ST_487 : Operation 2304 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_53, float %mC_load_52, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2304 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 488 <SV = 425> <Delay = 8.75>
ST_488 : Operation 2305 [5/5] (8.75ns)   --->   "%p_resp187 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_53)" [src/BMM_fonctions.c:49]   --->   Operation 2305 'writeresp' 'p_resp187' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 489 <SV = 426> <Delay = 8.75>
ST_489 : Operation 2306 [4/5] (8.75ns)   --->   "%p_resp187 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_53)" [src/BMM_fonctions.c:49]   --->   Operation 2306 'writeresp' 'p_resp187' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 490 <SV = 427> <Delay = 8.75>
ST_490 : Operation 2307 [3/5] (8.75ns)   --->   "%p_resp187 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_53)" [src/BMM_fonctions.c:49]   --->   Operation 2307 'writeresp' 'p_resp187' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 491 <SV = 428> <Delay = 8.75>
ST_491 : Operation 2308 [2/5] (8.75ns)   --->   "%p_resp187 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_53)" [src/BMM_fonctions.c:49]   --->   Operation 2308 'writeresp' 'p_resp187' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 492 <SV = 429> <Delay = 8.75>
ST_492 : Operation 2309 [1/5] (8.75ns)   --->   "%p_resp187 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_53)" [src/BMM_fonctions.c:49]   --->   Operation 2309 'writeresp' 'p_resp187' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_492 : Operation 2310 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2310 'specloopname' <Predicate = true> <Delay = 0.00>
ST_492 : Operation 2311 [1/1] (0.00ns)   --->   "%empty_176 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2311 'speclooptripcount' 'empty_176' <Predicate = true> <Delay = 0.00>
ST_492 : Operation 2312 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_52, label %hls_label_052, label %meminst17.52" [src/BMM_fonctions.c:49]   --->   Operation 2312 'br' <Predicate = true> <Delay = 0.00>
ST_492 : Operation 2313 [1/1] (0.00ns)   --->   "%empty_174 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_61) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2313 'specregionend' 'empty_174' <Predicate = (icmp_ln49_52)> <Delay = 0.00>
ST_492 : Operation 2314 [1/1] (0.00ns)   --->   "%tmp_62 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2314 'specregionbegin' 'tmp_62' <Predicate = (icmp_ln49_52)> <Delay = 0.00>
ST_492 : Operation 2315 [1/1] (1.76ns)   --->   "br label %meminst17.53"   --->   Operation 2315 'br' <Predicate = (icmp_ln49_52)> <Delay = 1.76>

State 493 <SV = 430> <Delay = 3.52>
ST_493 : Operation 2316 [1/1] (0.00ns)   --->   "%empty_178 = phi i6 [ 0, %hls_label_052 ], [ %add_ln49_53, %meminst17.53 ]" [src/BMM_fonctions.c:49]   --->   Operation 2316 'phi' 'empty_178' <Predicate = true> <Delay = 0.00>
ST_493 : Operation 2317 [1/1] (1.82ns)   --->   "%add_ln49_53 = add i6 %empty_178, 1" [src/BMM_fonctions.c:49]   --->   Operation 2317 'add' 'add_ln49_53' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_493 : Operation 2318 [1/1] (0.00ns)   --->   "%tmp_177 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 53, i6 %empty_178)" [src/BMM_fonctions.c:49]   --->   Operation 2318 'bitconcatenate' 'tmp_177' <Predicate = true> <Delay = 0.00>
ST_493 : Operation 2319 [1/1] (3.52ns)   --->   "%add_ln49_116 = add i64 %empty, %tmp_177" [src/BMM_fonctions.c:49]   --->   Operation 2319 'add' 'add_ln49_116' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_493 : Operation 2320 [1/1] (0.00ns)   --->   "%OUTPUT_addr_54 = getelementptr float* %OUTPUT_r, i64 %add_ln49_116" [src/BMM_fonctions.c:49]   --->   Operation 2320 'getelementptr' 'OUTPUT_addr_54' <Predicate = true> <Delay = 0.00>
ST_493 : Operation 2321 [1/1] (0.00ns)   --->   "%mC_addr_58 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_177" [src/BMM_fonctions.c:49]   --->   Operation 2321 'getelementptr' 'mC_addr_58' <Predicate = true> <Delay = 0.00>
ST_493 : Operation 2322 [2/2] (3.25ns)   --->   "%mC_load_53 = load float* %mC_addr_58, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2322 'load' 'mC_load_53' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_493 : Operation 2323 [1/1] (1.42ns)   --->   "%icmp_ln49_53 = icmp eq i6 %empty_178, -1" [src/BMM_fonctions.c:49]   --->   Operation 2323 'icmp' 'icmp_ln49_53' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 494 <SV = 431> <Delay = 8.75>
ST_494 : Operation 2324 [1/2] (3.25ns)   --->   "%mC_load_53 = load float* %mC_addr_58, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2324 'load' 'mC_load_53' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_494 : Operation 2325 [1/1] (8.75ns)   --->   "%p_req184 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_54, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2325 'writereq' 'p_req184' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 495 <SV = 432> <Delay = 8.75>
ST_495 : Operation 2326 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_54, float %mC_load_53, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2326 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 496 <SV = 433> <Delay = 8.75>
ST_496 : Operation 2327 [5/5] (8.75ns)   --->   "%p_resp185 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_54)" [src/BMM_fonctions.c:49]   --->   Operation 2327 'writeresp' 'p_resp185' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 497 <SV = 434> <Delay = 8.75>
ST_497 : Operation 2328 [4/5] (8.75ns)   --->   "%p_resp185 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_54)" [src/BMM_fonctions.c:49]   --->   Operation 2328 'writeresp' 'p_resp185' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 498 <SV = 435> <Delay = 8.75>
ST_498 : Operation 2329 [3/5] (8.75ns)   --->   "%p_resp185 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_54)" [src/BMM_fonctions.c:49]   --->   Operation 2329 'writeresp' 'p_resp185' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 499 <SV = 436> <Delay = 8.75>
ST_499 : Operation 2330 [2/5] (8.75ns)   --->   "%p_resp185 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_54)" [src/BMM_fonctions.c:49]   --->   Operation 2330 'writeresp' 'p_resp185' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 500 <SV = 437> <Delay = 8.75>
ST_500 : Operation 2331 [1/5] (8.75ns)   --->   "%p_resp185 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_54)" [src/BMM_fonctions.c:49]   --->   Operation 2331 'writeresp' 'p_resp185' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_500 : Operation 2332 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2332 'specloopname' <Predicate = true> <Delay = 0.00>
ST_500 : Operation 2333 [1/1] (0.00ns)   --->   "%empty_179 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2333 'speclooptripcount' 'empty_179' <Predicate = true> <Delay = 0.00>
ST_500 : Operation 2334 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_53, label %hls_label_053, label %meminst17.53" [src/BMM_fonctions.c:49]   --->   Operation 2334 'br' <Predicate = true> <Delay = 0.00>
ST_500 : Operation 2335 [1/1] (0.00ns)   --->   "%empty_177 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_62) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2335 'specregionend' 'empty_177' <Predicate = (icmp_ln49_53)> <Delay = 0.00>
ST_500 : Operation 2336 [1/1] (0.00ns)   --->   "%tmp_63 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2336 'specregionbegin' 'tmp_63' <Predicate = (icmp_ln49_53)> <Delay = 0.00>
ST_500 : Operation 2337 [1/1] (1.76ns)   --->   "br label %meminst17.54"   --->   Operation 2337 'br' <Predicate = (icmp_ln49_53)> <Delay = 1.76>

State 501 <SV = 438> <Delay = 3.52>
ST_501 : Operation 2338 [1/1] (0.00ns)   --->   "%empty_181 = phi i6 [ 0, %hls_label_053 ], [ %add_ln49_54, %meminst17.54 ]" [src/BMM_fonctions.c:49]   --->   Operation 2338 'phi' 'empty_181' <Predicate = true> <Delay = 0.00>
ST_501 : Operation 2339 [1/1] (1.82ns)   --->   "%add_ln49_54 = add i6 %empty_181, 1" [src/BMM_fonctions.c:49]   --->   Operation 2339 'add' 'add_ln49_54' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_501 : Operation 2340 [1/1] (0.00ns)   --->   "%tmp_178 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 54, i6 %empty_181)" [src/BMM_fonctions.c:49]   --->   Operation 2340 'bitconcatenate' 'tmp_178' <Predicate = true> <Delay = 0.00>
ST_501 : Operation 2341 [1/1] (3.52ns)   --->   "%add_ln49_117 = add i64 %empty, %tmp_178" [src/BMM_fonctions.c:49]   --->   Operation 2341 'add' 'add_ln49_117' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_501 : Operation 2342 [1/1] (0.00ns)   --->   "%OUTPUT_addr_55 = getelementptr float* %OUTPUT_r, i64 %add_ln49_117" [src/BMM_fonctions.c:49]   --->   Operation 2342 'getelementptr' 'OUTPUT_addr_55' <Predicate = true> <Delay = 0.00>
ST_501 : Operation 2343 [1/1] (0.00ns)   --->   "%mC_addr_59 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_178" [src/BMM_fonctions.c:49]   --->   Operation 2343 'getelementptr' 'mC_addr_59' <Predicate = true> <Delay = 0.00>
ST_501 : Operation 2344 [2/2] (3.25ns)   --->   "%mC_load_54 = load float* %mC_addr_59, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2344 'load' 'mC_load_54' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_501 : Operation 2345 [1/1] (1.42ns)   --->   "%icmp_ln49_54 = icmp eq i6 %empty_181, -1" [src/BMM_fonctions.c:49]   --->   Operation 2345 'icmp' 'icmp_ln49_54' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 502 <SV = 439> <Delay = 8.75>
ST_502 : Operation 2346 [1/2] (3.25ns)   --->   "%mC_load_54 = load float* %mC_addr_59, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2346 'load' 'mC_load_54' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_502 : Operation 2347 [1/1] (8.75ns)   --->   "%p_req182 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_55, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2347 'writereq' 'p_req182' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 503 <SV = 440> <Delay = 8.75>
ST_503 : Operation 2348 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_55, float %mC_load_54, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2348 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 504 <SV = 441> <Delay = 8.75>
ST_504 : Operation 2349 [5/5] (8.75ns)   --->   "%p_resp183 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_55)" [src/BMM_fonctions.c:49]   --->   Operation 2349 'writeresp' 'p_resp183' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 505 <SV = 442> <Delay = 8.75>
ST_505 : Operation 2350 [4/5] (8.75ns)   --->   "%p_resp183 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_55)" [src/BMM_fonctions.c:49]   --->   Operation 2350 'writeresp' 'p_resp183' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 506 <SV = 443> <Delay = 8.75>
ST_506 : Operation 2351 [3/5] (8.75ns)   --->   "%p_resp183 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_55)" [src/BMM_fonctions.c:49]   --->   Operation 2351 'writeresp' 'p_resp183' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 507 <SV = 444> <Delay = 8.75>
ST_507 : Operation 2352 [2/5] (8.75ns)   --->   "%p_resp183 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_55)" [src/BMM_fonctions.c:49]   --->   Operation 2352 'writeresp' 'p_resp183' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 508 <SV = 445> <Delay = 8.75>
ST_508 : Operation 2353 [1/5] (8.75ns)   --->   "%p_resp183 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_55)" [src/BMM_fonctions.c:49]   --->   Operation 2353 'writeresp' 'p_resp183' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_508 : Operation 2354 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2354 'specloopname' <Predicate = true> <Delay = 0.00>
ST_508 : Operation 2355 [1/1] (0.00ns)   --->   "%empty_182 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2355 'speclooptripcount' 'empty_182' <Predicate = true> <Delay = 0.00>
ST_508 : Operation 2356 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_54, label %hls_label_054, label %meminst17.54" [src/BMM_fonctions.c:49]   --->   Operation 2356 'br' <Predicate = true> <Delay = 0.00>
ST_508 : Operation 2357 [1/1] (0.00ns)   --->   "%empty_180 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_63) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2357 'specregionend' 'empty_180' <Predicate = (icmp_ln49_54)> <Delay = 0.00>
ST_508 : Operation 2358 [1/1] (0.00ns)   --->   "%tmp_64 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2358 'specregionbegin' 'tmp_64' <Predicate = (icmp_ln49_54)> <Delay = 0.00>
ST_508 : Operation 2359 [1/1] (1.76ns)   --->   "br label %meminst17.55"   --->   Operation 2359 'br' <Predicate = (icmp_ln49_54)> <Delay = 1.76>

State 509 <SV = 446> <Delay = 3.52>
ST_509 : Operation 2360 [1/1] (0.00ns)   --->   "%empty_184 = phi i6 [ 0, %hls_label_054 ], [ %add_ln49_55, %meminst17.55 ]" [src/BMM_fonctions.c:49]   --->   Operation 2360 'phi' 'empty_184' <Predicate = true> <Delay = 0.00>
ST_509 : Operation 2361 [1/1] (1.82ns)   --->   "%add_ln49_55 = add i6 %empty_184, 1" [src/BMM_fonctions.c:49]   --->   Operation 2361 'add' 'add_ln49_55' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_509 : Operation 2362 [1/1] (0.00ns)   --->   "%tmp_179 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 55, i6 %empty_184)" [src/BMM_fonctions.c:49]   --->   Operation 2362 'bitconcatenate' 'tmp_179' <Predicate = true> <Delay = 0.00>
ST_509 : Operation 2363 [1/1] (3.52ns)   --->   "%add_ln49_118 = add i64 %empty, %tmp_179" [src/BMM_fonctions.c:49]   --->   Operation 2363 'add' 'add_ln49_118' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_509 : Operation 2364 [1/1] (0.00ns)   --->   "%OUTPUT_addr_56 = getelementptr float* %OUTPUT_r, i64 %add_ln49_118" [src/BMM_fonctions.c:49]   --->   Operation 2364 'getelementptr' 'OUTPUT_addr_56' <Predicate = true> <Delay = 0.00>
ST_509 : Operation 2365 [1/1] (0.00ns)   --->   "%mC_addr_60 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_179" [src/BMM_fonctions.c:49]   --->   Operation 2365 'getelementptr' 'mC_addr_60' <Predicate = true> <Delay = 0.00>
ST_509 : Operation 2366 [2/2] (3.25ns)   --->   "%mC_load_55 = load float* %mC_addr_60, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2366 'load' 'mC_load_55' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_509 : Operation 2367 [1/1] (1.42ns)   --->   "%icmp_ln49_55 = icmp eq i6 %empty_184, -1" [src/BMM_fonctions.c:49]   --->   Operation 2367 'icmp' 'icmp_ln49_55' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 510 <SV = 447> <Delay = 8.75>
ST_510 : Operation 2368 [1/2] (3.25ns)   --->   "%mC_load_55 = load float* %mC_addr_60, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2368 'load' 'mC_load_55' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_510 : Operation 2369 [1/1] (8.75ns)   --->   "%p_req180 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_56, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2369 'writereq' 'p_req180' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 511 <SV = 448> <Delay = 8.75>
ST_511 : Operation 2370 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_56, float %mC_load_55, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2370 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 512 <SV = 449> <Delay = 8.75>
ST_512 : Operation 2371 [5/5] (8.75ns)   --->   "%p_resp181 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_56)" [src/BMM_fonctions.c:49]   --->   Operation 2371 'writeresp' 'p_resp181' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 513 <SV = 450> <Delay = 8.75>
ST_513 : Operation 2372 [4/5] (8.75ns)   --->   "%p_resp181 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_56)" [src/BMM_fonctions.c:49]   --->   Operation 2372 'writeresp' 'p_resp181' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 514 <SV = 451> <Delay = 8.75>
ST_514 : Operation 2373 [3/5] (8.75ns)   --->   "%p_resp181 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_56)" [src/BMM_fonctions.c:49]   --->   Operation 2373 'writeresp' 'p_resp181' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 515 <SV = 452> <Delay = 8.75>
ST_515 : Operation 2374 [2/5] (8.75ns)   --->   "%p_resp181 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_56)" [src/BMM_fonctions.c:49]   --->   Operation 2374 'writeresp' 'p_resp181' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 516 <SV = 453> <Delay = 8.75>
ST_516 : Operation 2375 [1/5] (8.75ns)   --->   "%p_resp181 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_56)" [src/BMM_fonctions.c:49]   --->   Operation 2375 'writeresp' 'p_resp181' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_516 : Operation 2376 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2376 'specloopname' <Predicate = true> <Delay = 0.00>
ST_516 : Operation 2377 [1/1] (0.00ns)   --->   "%empty_185 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2377 'speclooptripcount' 'empty_185' <Predicate = true> <Delay = 0.00>
ST_516 : Operation 2378 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_55, label %hls_label_055, label %meminst17.55" [src/BMM_fonctions.c:49]   --->   Operation 2378 'br' <Predicate = true> <Delay = 0.00>
ST_516 : Operation 2379 [1/1] (0.00ns)   --->   "%empty_183 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_64) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2379 'specregionend' 'empty_183' <Predicate = (icmp_ln49_55)> <Delay = 0.00>
ST_516 : Operation 2380 [1/1] (0.00ns)   --->   "%tmp_65 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2380 'specregionbegin' 'tmp_65' <Predicate = (icmp_ln49_55)> <Delay = 0.00>
ST_516 : Operation 2381 [1/1] (1.76ns)   --->   "br label %meminst17.56"   --->   Operation 2381 'br' <Predicate = (icmp_ln49_55)> <Delay = 1.76>

State 517 <SV = 454> <Delay = 3.52>
ST_517 : Operation 2382 [1/1] (0.00ns)   --->   "%empty_187 = phi i6 [ 0, %hls_label_055 ], [ %add_ln49_56, %meminst17.56 ]" [src/BMM_fonctions.c:49]   --->   Operation 2382 'phi' 'empty_187' <Predicate = true> <Delay = 0.00>
ST_517 : Operation 2383 [1/1] (1.82ns)   --->   "%add_ln49_56 = add i6 %empty_187, 1" [src/BMM_fonctions.c:49]   --->   Operation 2383 'add' 'add_ln49_56' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_517 : Operation 2384 [1/1] (0.00ns)   --->   "%tmp_180 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 56, i6 %empty_187)" [src/BMM_fonctions.c:49]   --->   Operation 2384 'bitconcatenate' 'tmp_180' <Predicate = true> <Delay = 0.00>
ST_517 : Operation 2385 [1/1] (3.52ns)   --->   "%add_ln49_119 = add i64 %empty, %tmp_180" [src/BMM_fonctions.c:49]   --->   Operation 2385 'add' 'add_ln49_119' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_517 : Operation 2386 [1/1] (0.00ns)   --->   "%OUTPUT_addr_57 = getelementptr float* %OUTPUT_r, i64 %add_ln49_119" [src/BMM_fonctions.c:49]   --->   Operation 2386 'getelementptr' 'OUTPUT_addr_57' <Predicate = true> <Delay = 0.00>
ST_517 : Operation 2387 [1/1] (0.00ns)   --->   "%mC_addr_61 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_180" [src/BMM_fonctions.c:49]   --->   Operation 2387 'getelementptr' 'mC_addr_61' <Predicate = true> <Delay = 0.00>
ST_517 : Operation 2388 [2/2] (3.25ns)   --->   "%mC_load_56 = load float* %mC_addr_61, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2388 'load' 'mC_load_56' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_517 : Operation 2389 [1/1] (1.42ns)   --->   "%icmp_ln49_56 = icmp eq i6 %empty_187, -1" [src/BMM_fonctions.c:49]   --->   Operation 2389 'icmp' 'icmp_ln49_56' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 518 <SV = 455> <Delay = 8.75>
ST_518 : Operation 2390 [1/2] (3.25ns)   --->   "%mC_load_56 = load float* %mC_addr_61, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2390 'load' 'mC_load_56' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_518 : Operation 2391 [1/1] (8.75ns)   --->   "%p_req178 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_57, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2391 'writereq' 'p_req178' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 519 <SV = 456> <Delay = 8.75>
ST_519 : Operation 2392 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_57, float %mC_load_56, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2392 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 520 <SV = 457> <Delay = 8.75>
ST_520 : Operation 2393 [5/5] (8.75ns)   --->   "%p_resp179 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_57)" [src/BMM_fonctions.c:49]   --->   Operation 2393 'writeresp' 'p_resp179' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 521 <SV = 458> <Delay = 8.75>
ST_521 : Operation 2394 [4/5] (8.75ns)   --->   "%p_resp179 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_57)" [src/BMM_fonctions.c:49]   --->   Operation 2394 'writeresp' 'p_resp179' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 522 <SV = 459> <Delay = 8.75>
ST_522 : Operation 2395 [3/5] (8.75ns)   --->   "%p_resp179 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_57)" [src/BMM_fonctions.c:49]   --->   Operation 2395 'writeresp' 'p_resp179' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 523 <SV = 460> <Delay = 8.75>
ST_523 : Operation 2396 [2/5] (8.75ns)   --->   "%p_resp179 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_57)" [src/BMM_fonctions.c:49]   --->   Operation 2396 'writeresp' 'p_resp179' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 524 <SV = 461> <Delay = 8.75>
ST_524 : Operation 2397 [1/5] (8.75ns)   --->   "%p_resp179 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_57)" [src/BMM_fonctions.c:49]   --->   Operation 2397 'writeresp' 'p_resp179' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_524 : Operation 2398 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2398 'specloopname' <Predicate = true> <Delay = 0.00>
ST_524 : Operation 2399 [1/1] (0.00ns)   --->   "%empty_188 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2399 'speclooptripcount' 'empty_188' <Predicate = true> <Delay = 0.00>
ST_524 : Operation 2400 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_56, label %hls_label_056, label %meminst17.56" [src/BMM_fonctions.c:49]   --->   Operation 2400 'br' <Predicate = true> <Delay = 0.00>
ST_524 : Operation 2401 [1/1] (0.00ns)   --->   "%empty_186 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_65) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2401 'specregionend' 'empty_186' <Predicate = (icmp_ln49_56)> <Delay = 0.00>
ST_524 : Operation 2402 [1/1] (0.00ns)   --->   "%tmp_66 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2402 'specregionbegin' 'tmp_66' <Predicate = (icmp_ln49_56)> <Delay = 0.00>
ST_524 : Operation 2403 [1/1] (1.76ns)   --->   "br label %meminst17.57"   --->   Operation 2403 'br' <Predicate = (icmp_ln49_56)> <Delay = 1.76>

State 525 <SV = 462> <Delay = 3.52>
ST_525 : Operation 2404 [1/1] (0.00ns)   --->   "%empty_190 = phi i6 [ 0, %hls_label_056 ], [ %add_ln49_57, %meminst17.57 ]" [src/BMM_fonctions.c:49]   --->   Operation 2404 'phi' 'empty_190' <Predicate = true> <Delay = 0.00>
ST_525 : Operation 2405 [1/1] (1.82ns)   --->   "%add_ln49_57 = add i6 %empty_190, 1" [src/BMM_fonctions.c:49]   --->   Operation 2405 'add' 'add_ln49_57' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_525 : Operation 2406 [1/1] (0.00ns)   --->   "%tmp_181 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 57, i6 %empty_190)" [src/BMM_fonctions.c:49]   --->   Operation 2406 'bitconcatenate' 'tmp_181' <Predicate = true> <Delay = 0.00>
ST_525 : Operation 2407 [1/1] (3.52ns)   --->   "%add_ln49_120 = add i64 %empty, %tmp_181" [src/BMM_fonctions.c:49]   --->   Operation 2407 'add' 'add_ln49_120' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_525 : Operation 2408 [1/1] (0.00ns)   --->   "%OUTPUT_addr_58 = getelementptr float* %OUTPUT_r, i64 %add_ln49_120" [src/BMM_fonctions.c:49]   --->   Operation 2408 'getelementptr' 'OUTPUT_addr_58' <Predicate = true> <Delay = 0.00>
ST_525 : Operation 2409 [1/1] (0.00ns)   --->   "%mC_addr_62 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_181" [src/BMM_fonctions.c:49]   --->   Operation 2409 'getelementptr' 'mC_addr_62' <Predicate = true> <Delay = 0.00>
ST_525 : Operation 2410 [2/2] (3.25ns)   --->   "%mC_load_57 = load float* %mC_addr_62, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2410 'load' 'mC_load_57' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_525 : Operation 2411 [1/1] (1.42ns)   --->   "%icmp_ln49_57 = icmp eq i6 %empty_190, -1" [src/BMM_fonctions.c:49]   --->   Operation 2411 'icmp' 'icmp_ln49_57' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 526 <SV = 463> <Delay = 8.75>
ST_526 : Operation 2412 [1/2] (3.25ns)   --->   "%mC_load_57 = load float* %mC_addr_62, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2412 'load' 'mC_load_57' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_526 : Operation 2413 [1/1] (8.75ns)   --->   "%p_req176 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_58, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2413 'writereq' 'p_req176' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 527 <SV = 464> <Delay = 8.75>
ST_527 : Operation 2414 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_58, float %mC_load_57, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2414 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 528 <SV = 465> <Delay = 8.75>
ST_528 : Operation 2415 [5/5] (8.75ns)   --->   "%p_resp177 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_58)" [src/BMM_fonctions.c:49]   --->   Operation 2415 'writeresp' 'p_resp177' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 529 <SV = 466> <Delay = 8.75>
ST_529 : Operation 2416 [4/5] (8.75ns)   --->   "%p_resp177 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_58)" [src/BMM_fonctions.c:49]   --->   Operation 2416 'writeresp' 'p_resp177' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 530 <SV = 467> <Delay = 8.75>
ST_530 : Operation 2417 [3/5] (8.75ns)   --->   "%p_resp177 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_58)" [src/BMM_fonctions.c:49]   --->   Operation 2417 'writeresp' 'p_resp177' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 531 <SV = 468> <Delay = 8.75>
ST_531 : Operation 2418 [2/5] (8.75ns)   --->   "%p_resp177 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_58)" [src/BMM_fonctions.c:49]   --->   Operation 2418 'writeresp' 'p_resp177' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 532 <SV = 469> <Delay = 8.75>
ST_532 : Operation 2419 [1/5] (8.75ns)   --->   "%p_resp177 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_58)" [src/BMM_fonctions.c:49]   --->   Operation 2419 'writeresp' 'p_resp177' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_532 : Operation 2420 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2420 'specloopname' <Predicate = true> <Delay = 0.00>
ST_532 : Operation 2421 [1/1] (0.00ns)   --->   "%empty_191 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2421 'speclooptripcount' 'empty_191' <Predicate = true> <Delay = 0.00>
ST_532 : Operation 2422 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_57, label %hls_label_057, label %meminst17.57" [src/BMM_fonctions.c:49]   --->   Operation 2422 'br' <Predicate = true> <Delay = 0.00>
ST_532 : Operation 2423 [1/1] (0.00ns)   --->   "%empty_189 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_66) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2423 'specregionend' 'empty_189' <Predicate = (icmp_ln49_57)> <Delay = 0.00>
ST_532 : Operation 2424 [1/1] (0.00ns)   --->   "%tmp_67 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2424 'specregionbegin' 'tmp_67' <Predicate = (icmp_ln49_57)> <Delay = 0.00>
ST_532 : Operation 2425 [1/1] (1.76ns)   --->   "br label %meminst17.58"   --->   Operation 2425 'br' <Predicate = (icmp_ln49_57)> <Delay = 1.76>

State 533 <SV = 470> <Delay = 3.52>
ST_533 : Operation 2426 [1/1] (0.00ns)   --->   "%empty_193 = phi i6 [ 0, %hls_label_057 ], [ %add_ln49_58, %meminst17.58 ]" [src/BMM_fonctions.c:49]   --->   Operation 2426 'phi' 'empty_193' <Predicate = true> <Delay = 0.00>
ST_533 : Operation 2427 [1/1] (1.82ns)   --->   "%add_ln49_58 = add i6 %empty_193, 1" [src/BMM_fonctions.c:49]   --->   Operation 2427 'add' 'add_ln49_58' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_533 : Operation 2428 [1/1] (0.00ns)   --->   "%tmp_182 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 58, i6 %empty_193)" [src/BMM_fonctions.c:49]   --->   Operation 2428 'bitconcatenate' 'tmp_182' <Predicate = true> <Delay = 0.00>
ST_533 : Operation 2429 [1/1] (3.52ns)   --->   "%add_ln49_121 = add i64 %empty, %tmp_182" [src/BMM_fonctions.c:49]   --->   Operation 2429 'add' 'add_ln49_121' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_533 : Operation 2430 [1/1] (0.00ns)   --->   "%OUTPUT_addr_59 = getelementptr float* %OUTPUT_r, i64 %add_ln49_121" [src/BMM_fonctions.c:49]   --->   Operation 2430 'getelementptr' 'OUTPUT_addr_59' <Predicate = true> <Delay = 0.00>
ST_533 : Operation 2431 [1/1] (0.00ns)   --->   "%mC_addr_63 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_182" [src/BMM_fonctions.c:49]   --->   Operation 2431 'getelementptr' 'mC_addr_63' <Predicate = true> <Delay = 0.00>
ST_533 : Operation 2432 [2/2] (3.25ns)   --->   "%mC_load_58 = load float* %mC_addr_63, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2432 'load' 'mC_load_58' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_533 : Operation 2433 [1/1] (1.42ns)   --->   "%icmp_ln49_58 = icmp eq i6 %empty_193, -1" [src/BMM_fonctions.c:49]   --->   Operation 2433 'icmp' 'icmp_ln49_58' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 534 <SV = 471> <Delay = 8.75>
ST_534 : Operation 2434 [1/2] (3.25ns)   --->   "%mC_load_58 = load float* %mC_addr_63, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2434 'load' 'mC_load_58' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_534 : Operation 2435 [1/1] (8.75ns)   --->   "%p_req174 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_59, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2435 'writereq' 'p_req174' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 535 <SV = 472> <Delay = 8.75>
ST_535 : Operation 2436 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_59, float %mC_load_58, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2436 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 536 <SV = 473> <Delay = 8.75>
ST_536 : Operation 2437 [5/5] (8.75ns)   --->   "%p_resp175 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_59)" [src/BMM_fonctions.c:49]   --->   Operation 2437 'writeresp' 'p_resp175' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 537 <SV = 474> <Delay = 8.75>
ST_537 : Operation 2438 [4/5] (8.75ns)   --->   "%p_resp175 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_59)" [src/BMM_fonctions.c:49]   --->   Operation 2438 'writeresp' 'p_resp175' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 538 <SV = 475> <Delay = 8.75>
ST_538 : Operation 2439 [3/5] (8.75ns)   --->   "%p_resp175 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_59)" [src/BMM_fonctions.c:49]   --->   Operation 2439 'writeresp' 'p_resp175' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 539 <SV = 476> <Delay = 8.75>
ST_539 : Operation 2440 [2/5] (8.75ns)   --->   "%p_resp175 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_59)" [src/BMM_fonctions.c:49]   --->   Operation 2440 'writeresp' 'p_resp175' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 540 <SV = 477> <Delay = 8.75>
ST_540 : Operation 2441 [1/5] (8.75ns)   --->   "%p_resp175 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_59)" [src/BMM_fonctions.c:49]   --->   Operation 2441 'writeresp' 'p_resp175' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_540 : Operation 2442 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2442 'specloopname' <Predicate = true> <Delay = 0.00>
ST_540 : Operation 2443 [1/1] (0.00ns)   --->   "%empty_194 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2443 'speclooptripcount' 'empty_194' <Predicate = true> <Delay = 0.00>
ST_540 : Operation 2444 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_58, label %hls_label_058, label %meminst17.58" [src/BMM_fonctions.c:49]   --->   Operation 2444 'br' <Predicate = true> <Delay = 0.00>
ST_540 : Operation 2445 [1/1] (0.00ns)   --->   "%empty_192 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_67) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2445 'specregionend' 'empty_192' <Predicate = (icmp_ln49_58)> <Delay = 0.00>
ST_540 : Operation 2446 [1/1] (0.00ns)   --->   "%tmp_68 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2446 'specregionbegin' 'tmp_68' <Predicate = (icmp_ln49_58)> <Delay = 0.00>
ST_540 : Operation 2447 [1/1] (1.76ns)   --->   "br label %meminst17.59"   --->   Operation 2447 'br' <Predicate = (icmp_ln49_58)> <Delay = 1.76>

State 541 <SV = 478> <Delay = 3.52>
ST_541 : Operation 2448 [1/1] (0.00ns)   --->   "%empty_196 = phi i6 [ 0, %hls_label_058 ], [ %add_ln49_59, %meminst17.59 ]" [src/BMM_fonctions.c:49]   --->   Operation 2448 'phi' 'empty_196' <Predicate = true> <Delay = 0.00>
ST_541 : Operation 2449 [1/1] (1.82ns)   --->   "%add_ln49_59 = add i6 %empty_196, 1" [src/BMM_fonctions.c:49]   --->   Operation 2449 'add' 'add_ln49_59' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_541 : Operation 2450 [1/1] (0.00ns)   --->   "%tmp_183 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 59, i6 %empty_196)" [src/BMM_fonctions.c:49]   --->   Operation 2450 'bitconcatenate' 'tmp_183' <Predicate = true> <Delay = 0.00>
ST_541 : Operation 2451 [1/1] (3.52ns)   --->   "%add_ln49_122 = add i64 %empty, %tmp_183" [src/BMM_fonctions.c:49]   --->   Operation 2451 'add' 'add_ln49_122' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_541 : Operation 2452 [1/1] (0.00ns)   --->   "%OUTPUT_addr_60 = getelementptr float* %OUTPUT_r, i64 %add_ln49_122" [src/BMM_fonctions.c:49]   --->   Operation 2452 'getelementptr' 'OUTPUT_addr_60' <Predicate = true> <Delay = 0.00>
ST_541 : Operation 2453 [1/1] (0.00ns)   --->   "%mC_addr_64 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_183" [src/BMM_fonctions.c:49]   --->   Operation 2453 'getelementptr' 'mC_addr_64' <Predicate = true> <Delay = 0.00>
ST_541 : Operation 2454 [2/2] (3.25ns)   --->   "%mC_load_59 = load float* %mC_addr_64, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2454 'load' 'mC_load_59' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_541 : Operation 2455 [1/1] (1.42ns)   --->   "%icmp_ln49_59 = icmp eq i6 %empty_196, -1" [src/BMM_fonctions.c:49]   --->   Operation 2455 'icmp' 'icmp_ln49_59' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 542 <SV = 479> <Delay = 8.75>
ST_542 : Operation 2456 [1/2] (3.25ns)   --->   "%mC_load_59 = load float* %mC_addr_64, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2456 'load' 'mC_load_59' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_542 : Operation 2457 [1/1] (8.75ns)   --->   "%p_req172 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_60, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2457 'writereq' 'p_req172' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 543 <SV = 480> <Delay = 8.75>
ST_543 : Operation 2458 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_60, float %mC_load_59, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2458 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 544 <SV = 481> <Delay = 8.75>
ST_544 : Operation 2459 [5/5] (8.75ns)   --->   "%p_resp173 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_60)" [src/BMM_fonctions.c:49]   --->   Operation 2459 'writeresp' 'p_resp173' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 545 <SV = 482> <Delay = 8.75>
ST_545 : Operation 2460 [4/5] (8.75ns)   --->   "%p_resp173 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_60)" [src/BMM_fonctions.c:49]   --->   Operation 2460 'writeresp' 'p_resp173' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 546 <SV = 483> <Delay = 8.75>
ST_546 : Operation 2461 [3/5] (8.75ns)   --->   "%p_resp173 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_60)" [src/BMM_fonctions.c:49]   --->   Operation 2461 'writeresp' 'p_resp173' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 547 <SV = 484> <Delay = 8.75>
ST_547 : Operation 2462 [2/5] (8.75ns)   --->   "%p_resp173 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_60)" [src/BMM_fonctions.c:49]   --->   Operation 2462 'writeresp' 'p_resp173' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 548 <SV = 485> <Delay = 8.75>
ST_548 : Operation 2463 [1/5] (8.75ns)   --->   "%p_resp173 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_60)" [src/BMM_fonctions.c:49]   --->   Operation 2463 'writeresp' 'p_resp173' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_548 : Operation 2464 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2464 'specloopname' <Predicate = true> <Delay = 0.00>
ST_548 : Operation 2465 [1/1] (0.00ns)   --->   "%empty_197 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2465 'speclooptripcount' 'empty_197' <Predicate = true> <Delay = 0.00>
ST_548 : Operation 2466 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_59, label %hls_label_059, label %meminst17.59" [src/BMM_fonctions.c:49]   --->   Operation 2466 'br' <Predicate = true> <Delay = 0.00>
ST_548 : Operation 2467 [1/1] (0.00ns)   --->   "%empty_195 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_68) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2467 'specregionend' 'empty_195' <Predicate = (icmp_ln49_59)> <Delay = 0.00>
ST_548 : Operation 2468 [1/1] (0.00ns)   --->   "%tmp_69 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2468 'specregionbegin' 'tmp_69' <Predicate = (icmp_ln49_59)> <Delay = 0.00>
ST_548 : Operation 2469 [1/1] (1.76ns)   --->   "br label %meminst17.60"   --->   Operation 2469 'br' <Predicate = (icmp_ln49_59)> <Delay = 1.76>

State 549 <SV = 486> <Delay = 3.52>
ST_549 : Operation 2470 [1/1] (0.00ns)   --->   "%empty_199 = phi i6 [ 0, %hls_label_059 ], [ %add_ln49_60, %meminst17.60 ]" [src/BMM_fonctions.c:49]   --->   Operation 2470 'phi' 'empty_199' <Predicate = true> <Delay = 0.00>
ST_549 : Operation 2471 [1/1] (1.82ns)   --->   "%add_ln49_60 = add i6 %empty_199, 1" [src/BMM_fonctions.c:49]   --->   Operation 2471 'add' 'add_ln49_60' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_549 : Operation 2472 [1/1] (0.00ns)   --->   "%tmp_184 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 60, i6 %empty_199)" [src/BMM_fonctions.c:49]   --->   Operation 2472 'bitconcatenate' 'tmp_184' <Predicate = true> <Delay = 0.00>
ST_549 : Operation 2473 [1/1] (3.52ns)   --->   "%add_ln49_123 = add i64 %empty, %tmp_184" [src/BMM_fonctions.c:49]   --->   Operation 2473 'add' 'add_ln49_123' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_549 : Operation 2474 [1/1] (0.00ns)   --->   "%OUTPUT_addr_61 = getelementptr float* %OUTPUT_r, i64 %add_ln49_123" [src/BMM_fonctions.c:49]   --->   Operation 2474 'getelementptr' 'OUTPUT_addr_61' <Predicate = true> <Delay = 0.00>
ST_549 : Operation 2475 [1/1] (0.00ns)   --->   "%mC_addr_65 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_184" [src/BMM_fonctions.c:49]   --->   Operation 2475 'getelementptr' 'mC_addr_65' <Predicate = true> <Delay = 0.00>
ST_549 : Operation 2476 [2/2] (3.25ns)   --->   "%mC_load_60 = load float* %mC_addr_65, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2476 'load' 'mC_load_60' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_549 : Operation 2477 [1/1] (1.42ns)   --->   "%icmp_ln49_60 = icmp eq i6 %empty_199, -1" [src/BMM_fonctions.c:49]   --->   Operation 2477 'icmp' 'icmp_ln49_60' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 550 <SV = 487> <Delay = 8.75>
ST_550 : Operation 2478 [1/2] (3.25ns)   --->   "%mC_load_60 = load float* %mC_addr_65, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2478 'load' 'mC_load_60' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_550 : Operation 2479 [1/1] (8.75ns)   --->   "%p_req170 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_61, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2479 'writereq' 'p_req170' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 551 <SV = 488> <Delay = 8.75>
ST_551 : Operation 2480 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_61, float %mC_load_60, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2480 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 552 <SV = 489> <Delay = 8.75>
ST_552 : Operation 2481 [5/5] (8.75ns)   --->   "%p_resp171 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_61)" [src/BMM_fonctions.c:49]   --->   Operation 2481 'writeresp' 'p_resp171' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 553 <SV = 490> <Delay = 8.75>
ST_553 : Operation 2482 [4/5] (8.75ns)   --->   "%p_resp171 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_61)" [src/BMM_fonctions.c:49]   --->   Operation 2482 'writeresp' 'p_resp171' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 554 <SV = 491> <Delay = 8.75>
ST_554 : Operation 2483 [3/5] (8.75ns)   --->   "%p_resp171 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_61)" [src/BMM_fonctions.c:49]   --->   Operation 2483 'writeresp' 'p_resp171' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 555 <SV = 492> <Delay = 8.75>
ST_555 : Operation 2484 [2/5] (8.75ns)   --->   "%p_resp171 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_61)" [src/BMM_fonctions.c:49]   --->   Operation 2484 'writeresp' 'p_resp171' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 556 <SV = 493> <Delay = 8.75>
ST_556 : Operation 2485 [1/5] (8.75ns)   --->   "%p_resp171 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_61)" [src/BMM_fonctions.c:49]   --->   Operation 2485 'writeresp' 'p_resp171' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_556 : Operation 2486 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2486 'specloopname' <Predicate = true> <Delay = 0.00>
ST_556 : Operation 2487 [1/1] (0.00ns)   --->   "%empty_200 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2487 'speclooptripcount' 'empty_200' <Predicate = true> <Delay = 0.00>
ST_556 : Operation 2488 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_60, label %hls_label_060, label %meminst17.60" [src/BMM_fonctions.c:49]   --->   Operation 2488 'br' <Predicate = true> <Delay = 0.00>
ST_556 : Operation 2489 [1/1] (0.00ns)   --->   "%empty_198 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_69) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2489 'specregionend' 'empty_198' <Predicate = (icmp_ln49_60)> <Delay = 0.00>
ST_556 : Operation 2490 [1/1] (0.00ns)   --->   "%tmp_70 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2490 'specregionbegin' 'tmp_70' <Predicate = (icmp_ln49_60)> <Delay = 0.00>
ST_556 : Operation 2491 [1/1] (1.76ns)   --->   "br label %meminst17.61"   --->   Operation 2491 'br' <Predicate = (icmp_ln49_60)> <Delay = 1.76>

State 557 <SV = 494> <Delay = 3.52>
ST_557 : Operation 2492 [1/1] (0.00ns)   --->   "%empty_202 = phi i6 [ 0, %hls_label_060 ], [ %add_ln49_61, %meminst17.61 ]" [src/BMM_fonctions.c:49]   --->   Operation 2492 'phi' 'empty_202' <Predicate = true> <Delay = 0.00>
ST_557 : Operation 2493 [1/1] (1.82ns)   --->   "%add_ln49_61 = add i6 %empty_202, 1" [src/BMM_fonctions.c:49]   --->   Operation 2493 'add' 'add_ln49_61' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_557 : Operation 2494 [1/1] (0.00ns)   --->   "%tmp_185 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 61, i6 %empty_202)" [src/BMM_fonctions.c:49]   --->   Operation 2494 'bitconcatenate' 'tmp_185' <Predicate = true> <Delay = 0.00>
ST_557 : Operation 2495 [1/1] (3.52ns)   --->   "%add_ln49_124 = add i64 %empty, %tmp_185" [src/BMM_fonctions.c:49]   --->   Operation 2495 'add' 'add_ln49_124' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_557 : Operation 2496 [1/1] (0.00ns)   --->   "%OUTPUT_addr_62 = getelementptr float* %OUTPUT_r, i64 %add_ln49_124" [src/BMM_fonctions.c:49]   --->   Operation 2496 'getelementptr' 'OUTPUT_addr_62' <Predicate = true> <Delay = 0.00>
ST_557 : Operation 2497 [1/1] (0.00ns)   --->   "%mC_addr_66 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_185" [src/BMM_fonctions.c:49]   --->   Operation 2497 'getelementptr' 'mC_addr_66' <Predicate = true> <Delay = 0.00>
ST_557 : Operation 2498 [2/2] (3.25ns)   --->   "%mC_load_61 = load float* %mC_addr_66, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2498 'load' 'mC_load_61' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_557 : Operation 2499 [1/1] (1.42ns)   --->   "%icmp_ln49_61 = icmp eq i6 %empty_202, -1" [src/BMM_fonctions.c:49]   --->   Operation 2499 'icmp' 'icmp_ln49_61' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 558 <SV = 495> <Delay = 8.75>
ST_558 : Operation 2500 [1/2] (3.25ns)   --->   "%mC_load_61 = load float* %mC_addr_66, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2500 'load' 'mC_load_61' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_558 : Operation 2501 [1/1] (8.75ns)   --->   "%p_req168 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_62, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2501 'writereq' 'p_req168' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 559 <SV = 496> <Delay = 8.75>
ST_559 : Operation 2502 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_62, float %mC_load_61, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2502 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 560 <SV = 497> <Delay = 8.75>
ST_560 : Operation 2503 [5/5] (8.75ns)   --->   "%p_resp169 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_62)" [src/BMM_fonctions.c:49]   --->   Operation 2503 'writeresp' 'p_resp169' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 561 <SV = 498> <Delay = 8.75>
ST_561 : Operation 2504 [4/5] (8.75ns)   --->   "%p_resp169 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_62)" [src/BMM_fonctions.c:49]   --->   Operation 2504 'writeresp' 'p_resp169' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 562 <SV = 499> <Delay = 8.75>
ST_562 : Operation 2505 [3/5] (8.75ns)   --->   "%p_resp169 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_62)" [src/BMM_fonctions.c:49]   --->   Operation 2505 'writeresp' 'p_resp169' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 563 <SV = 500> <Delay = 8.75>
ST_563 : Operation 2506 [2/5] (8.75ns)   --->   "%p_resp169 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_62)" [src/BMM_fonctions.c:49]   --->   Operation 2506 'writeresp' 'p_resp169' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 564 <SV = 501> <Delay = 8.75>
ST_564 : Operation 2507 [1/5] (8.75ns)   --->   "%p_resp169 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_62)" [src/BMM_fonctions.c:49]   --->   Operation 2507 'writeresp' 'p_resp169' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_564 : Operation 2508 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2508 'specloopname' <Predicate = true> <Delay = 0.00>
ST_564 : Operation 2509 [1/1] (0.00ns)   --->   "%empty_203 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2509 'speclooptripcount' 'empty_203' <Predicate = true> <Delay = 0.00>
ST_564 : Operation 2510 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_61, label %hls_label_061, label %meminst17.61" [src/BMM_fonctions.c:49]   --->   Operation 2510 'br' <Predicate = true> <Delay = 0.00>
ST_564 : Operation 2511 [1/1] (0.00ns)   --->   "%empty_201 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_70) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2511 'specregionend' 'empty_201' <Predicate = (icmp_ln49_61)> <Delay = 0.00>
ST_564 : Operation 2512 [1/1] (0.00ns)   --->   "%tmp_71 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2512 'specregionbegin' 'tmp_71' <Predicate = (icmp_ln49_61)> <Delay = 0.00>
ST_564 : Operation 2513 [1/1] (1.76ns)   --->   "br label %meminst17.62"   --->   Operation 2513 'br' <Predicate = (icmp_ln49_61)> <Delay = 1.76>

State 565 <SV = 502> <Delay = 3.52>
ST_565 : Operation 2514 [1/1] (0.00ns)   --->   "%empty_205 = phi i6 [ 0, %hls_label_061 ], [ %add_ln49_62, %meminst17.62 ]" [src/BMM_fonctions.c:49]   --->   Operation 2514 'phi' 'empty_205' <Predicate = true> <Delay = 0.00>
ST_565 : Operation 2515 [1/1] (1.82ns)   --->   "%add_ln49_62 = add i6 %empty_205, 1" [src/BMM_fonctions.c:49]   --->   Operation 2515 'add' 'add_ln49_62' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_565 : Operation 2516 [1/1] (0.00ns)   --->   "%tmp_186 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 62, i6 %empty_205)" [src/BMM_fonctions.c:49]   --->   Operation 2516 'bitconcatenate' 'tmp_186' <Predicate = true> <Delay = 0.00>
ST_565 : Operation 2517 [1/1] (3.52ns)   --->   "%add_ln49_125 = add i64 %empty, %tmp_186" [src/BMM_fonctions.c:49]   --->   Operation 2517 'add' 'add_ln49_125' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_565 : Operation 2518 [1/1] (0.00ns)   --->   "%OUTPUT_addr_63 = getelementptr float* %OUTPUT_r, i64 %add_ln49_125" [src/BMM_fonctions.c:49]   --->   Operation 2518 'getelementptr' 'OUTPUT_addr_63' <Predicate = true> <Delay = 0.00>
ST_565 : Operation 2519 [1/1] (0.00ns)   --->   "%mC_addr_67 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_186" [src/BMM_fonctions.c:49]   --->   Operation 2519 'getelementptr' 'mC_addr_67' <Predicate = true> <Delay = 0.00>
ST_565 : Operation 2520 [2/2] (3.25ns)   --->   "%mC_load_62 = load float* %mC_addr_67, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2520 'load' 'mC_load_62' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_565 : Operation 2521 [1/1] (1.42ns)   --->   "%icmp_ln49_62 = icmp eq i6 %empty_205, -1" [src/BMM_fonctions.c:49]   --->   Operation 2521 'icmp' 'icmp_ln49_62' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 566 <SV = 503> <Delay = 8.75>
ST_566 : Operation 2522 [1/2] (3.25ns)   --->   "%mC_load_62 = load float* %mC_addr_67, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2522 'load' 'mC_load_62' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_566 : Operation 2523 [1/1] (8.75ns)   --->   "%p_req166 = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_63, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2523 'writereq' 'p_req166' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 567 <SV = 504> <Delay = 8.75>
ST_567 : Operation 2524 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_63, float %mC_load_62, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2524 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 568 <SV = 505> <Delay = 8.75>
ST_568 : Operation 2525 [5/5] (8.75ns)   --->   "%p_resp167 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_63)" [src/BMM_fonctions.c:49]   --->   Operation 2525 'writeresp' 'p_resp167' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 569 <SV = 506> <Delay = 8.75>
ST_569 : Operation 2526 [4/5] (8.75ns)   --->   "%p_resp167 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_63)" [src/BMM_fonctions.c:49]   --->   Operation 2526 'writeresp' 'p_resp167' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 570 <SV = 507> <Delay = 8.75>
ST_570 : Operation 2527 [3/5] (8.75ns)   --->   "%p_resp167 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_63)" [src/BMM_fonctions.c:49]   --->   Operation 2527 'writeresp' 'p_resp167' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 571 <SV = 508> <Delay = 8.75>
ST_571 : Operation 2528 [2/5] (8.75ns)   --->   "%p_resp167 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_63)" [src/BMM_fonctions.c:49]   --->   Operation 2528 'writeresp' 'p_resp167' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 572 <SV = 509> <Delay = 8.75>
ST_572 : Operation 2529 [1/5] (8.75ns)   --->   "%p_resp167 = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_63)" [src/BMM_fonctions.c:49]   --->   Operation 2529 'writeresp' 'p_resp167' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_572 : Operation 2530 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2530 'specloopname' <Predicate = true> <Delay = 0.00>
ST_572 : Operation 2531 [1/1] (0.00ns)   --->   "%empty_206 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2531 'speclooptripcount' 'empty_206' <Predicate = true> <Delay = 0.00>
ST_572 : Operation 2532 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_62, label %hls_label_062, label %meminst17.62" [src/BMM_fonctions.c:49]   --->   Operation 2532 'br' <Predicate = true> <Delay = 0.00>
ST_572 : Operation 2533 [1/1] (0.00ns)   --->   "%empty_204 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_71) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2533 'specregionend' 'empty_204' <Predicate = (icmp_ln49_62)> <Delay = 0.00>
ST_572 : Operation 2534 [1/1] (0.00ns)   --->   "%tmp_72 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str16) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2534 'specregionbegin' 'tmp_72' <Predicate = (icmp_ln49_62)> <Delay = 0.00>
ST_572 : Operation 2535 [1/1] (1.76ns)   --->   "br label %meminst17.63"   --->   Operation 2535 'br' <Predicate = (icmp_ln49_62)> <Delay = 1.76>

State 573 <SV = 510> <Delay = 3.52>
ST_573 : Operation 2536 [1/1] (0.00ns)   --->   "%empty_208 = phi i6 [ 0, %hls_label_062 ], [ %add_ln49_63, %meminst17.63 ]" [src/BMM_fonctions.c:49]   --->   Operation 2536 'phi' 'empty_208' <Predicate = true> <Delay = 0.00>
ST_573 : Operation 2537 [1/1] (1.82ns)   --->   "%add_ln49_63 = add i6 %empty_208, 1" [src/BMM_fonctions.c:49]   --->   Operation 2537 'add' 'add_ln49_63' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_573 : Operation 2538 [1/1] (0.00ns)   --->   "%tmp_187 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 63, i6 %empty_208)" [src/BMM_fonctions.c:49]   --->   Operation 2538 'bitconcatenate' 'tmp_187' <Predicate = true> <Delay = 0.00>
ST_573 : Operation 2539 [1/1] (3.52ns)   --->   "%add_ln49_126 = add i64 %empty, %tmp_187" [src/BMM_fonctions.c:49]   --->   Operation 2539 'add' 'add_ln49_126' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_573 : Operation 2540 [1/1] (0.00ns)   --->   "%OUTPUT_addr_64 = getelementptr float* %OUTPUT_r, i64 %add_ln49_126" [src/BMM_fonctions.c:49]   --->   Operation 2540 'getelementptr' 'OUTPUT_addr_64' <Predicate = true> <Delay = 0.00>
ST_573 : Operation 2541 [1/1] (0.00ns)   --->   "%mC_addr_68 = getelementptr [4096 x float]* %mC, i64 0, i64 %tmp_187" [src/BMM_fonctions.c:49]   --->   Operation 2541 'getelementptr' 'mC_addr_68' <Predicate = true> <Delay = 0.00>
ST_573 : Operation 2542 [2/2] (3.25ns)   --->   "%mC_load_63 = load float* %mC_addr_68, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2542 'load' 'mC_load_63' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_573 : Operation 2543 [1/1] (1.42ns)   --->   "%icmp_ln49_63 = icmp eq i6 %empty_208, -1" [src/BMM_fonctions.c:49]   --->   Operation 2543 'icmp' 'icmp_ln49_63' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 574 <SV = 511> <Delay = 8.75>
ST_574 : Operation 2544 [1/2] (3.25ns)   --->   "%mC_load_63 = load float* %mC_addr_68, align 4" [src/BMM_fonctions.c:49]   --->   Operation 2544 'load' 'mC_load_63' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_574 : Operation 2545 [1/1] (8.75ns)   --->   "%p_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_64, i32 1)" [src/BMM_fonctions.c:49]   --->   Operation 2545 'writereq' 'p_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 575 <SV = 512> <Delay = 8.75>
ST_575 : Operation 2546 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_64, float %mC_load_63, i4 -1)" [src/BMM_fonctions.c:49]   --->   Operation 2546 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 576 <SV = 513> <Delay = 8.75>
ST_576 : Operation 2547 [5/5] (8.75ns)   --->   "%p_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_64)" [src/BMM_fonctions.c:49]   --->   Operation 2547 'writeresp' 'p_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 577 <SV = 514> <Delay = 8.75>
ST_577 : Operation 2548 [4/5] (8.75ns)   --->   "%p_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_64)" [src/BMM_fonctions.c:49]   --->   Operation 2548 'writeresp' 'p_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 578 <SV = 515> <Delay = 8.75>
ST_578 : Operation 2549 [3/5] (8.75ns)   --->   "%p_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_64)" [src/BMM_fonctions.c:49]   --->   Operation 2549 'writeresp' 'p_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 579 <SV = 516> <Delay = 8.75>
ST_579 : Operation 2550 [2/5] (8.75ns)   --->   "%p_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_64)" [src/BMM_fonctions.c:49]   --->   Operation 2550 'writeresp' 'p_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 580 <SV = 517> <Delay = 8.75>
ST_580 : Operation 2551 [1/5] (8.75ns)   --->   "%p_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_64)" [src/BMM_fonctions.c:49]   --->   Operation 2551 'writeresp' 'p_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_580 : Operation 2552 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @memcpy_str)"   --->   Operation 2552 'specloopname' <Predicate = true> <Delay = 0.00>
ST_580 : Operation 2553 [1/1] (0.00ns)   --->   "%empty_209 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"   --->   Operation 2553 'speclooptripcount' 'empty_209' <Predicate = true> <Delay = 0.00>
ST_580 : Operation 2554 [1/1] (0.00ns)   --->   "br i1 %icmp_ln49_63, label %hls_label_0_end, label %meminst17.63" [src/BMM_fonctions.c:49]   --->   Operation 2554 'br' <Predicate = true> <Delay = 0.00>
ST_580 : Operation 2555 [1/1] (0.00ns)   --->   "%empty_207 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str16, i32 %tmp_72) nounwind" [src/BMM_fonctions.c:49]   --->   Operation 2555 'specregionend' 'empty_207' <Predicate = (icmp_ln49_63)> <Delay = 0.00>
ST_580 : Operation 2556 [1/1] (0.00ns)   --->   "ret void" [src/BMM_fonctions.c:51]   --->   Operation 2556 'ret' <Predicate = (icmp_ln49_63)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:20) [30]  (1.77 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln20', src/BMM_fonctions.c:20) [31]  (1.49 ns)
	blocking operation 0.978 ns on control path)

 <State 3>: 2.49ns
The critical path consists of the following:
	'phi' operation ('empty_6', src/BMM_fonctions.c:21) with incoming values : ('add_ln21', src/BMM_fonctions.c:21) [40]  (0 ns)
	'add' operation ('add_ln21_1', src/BMM_fonctions.c:21) [45]  (2.49 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('INPUT_addr', src/BMM_fonctions.c:21) [47]  (0 ns)
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [49]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [50]  (8.75 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mA_addr', src/BMM_fonctions.c:21) [48]  (0 ns)
	'store' operation ('store_ln21', src/BMM_fonctions.c:21) of variable 'INPUT_addr_read', src/BMM_fonctions.c:21 on array 'mA', src/BMM_fonctions.c:17 [51]  (3.25 ns)

 <State 13>: 2.47ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln22', src/BMM_fonctions.c:22) [63]  (1.49 ns)
	blocking operation 0.978 ns on control path)

 <State 14>: 2.49ns
The critical path consists of the following:
	'phi' operation ('empty_10', src/BMM_fonctions.c:23) with incoming values : ('add_ln23', src/BMM_fonctions.c:23) [72]  (0 ns)
	'add' operation ('add_ln23_1', src/BMM_fonctions.c:23) [77]  (2.49 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('INPUT_addr_1', src/BMM_fonctions.c:23) [79]  (0 ns)
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [81]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [82]  (8.75 ns)

 <State 23>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mB_addr', src/BMM_fonctions.c:23) [80]  (0 ns)
	'store' operation ('store_ln23', src/BMM_fonctions.c:23) of variable 'INPUT_addr_1_read', src/BMM_fonctions.c:23 on array 'mB', src/BMM_fonctions.c:18 [83]  (3.25 ns)

 <State 24>: 2.47ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln24', src/BMM_fonctions.c:24) [95]  (1.49 ns)
	blocking operation 0.978 ns on control path)

 <State 25>: 2.49ns
The critical path consists of the following:
	'phi' operation ('empty_14', src/BMM_fonctions.c:25) with incoming values : ('add_ln25', src/BMM_fonctions.c:25) [104]  (0 ns)
	'add' operation ('add_ln25_1', src/BMM_fonctions.c:25) [109]  (2.49 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUTPUT_addr', src/BMM_fonctions.c:25) [111]  (0 ns)
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [113]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [114]  (8.75 ns)

 <State 34>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mC_addr', src/BMM_fonctions.c:25) [112]  (0 ns)
	'store' operation ('store_ln25', src/BMM_fonctions.c:25) of variable 'OUTPUT_addr_read', src/BMM_fonctions.c:25 on array 'mC', src/BMM_fonctions.c:19 [115]  (3.25 ns)

 <State 35>: 5.92ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten113', src/BMM_fonctions.c:31) with incoming values : ('select_ln31_44', src/BMM_fonctions.c:31) [128]  (0 ns)
	'icmp' operation ('icmp_ln31', src/BMM_fonctions.c:31) [174]  (1.99 ns)
	'xor' operation ('xor_ln31', src/BMM_fonctions.c:31) [205]  (0.978 ns)
	'and' operation ('and_ln31_1', src/BMM_fonctions.c:31) [209]  (0.978 ns)
	'or' operation ('or_ln31', src/BMM_fonctions.c:31) [213]  (0.978 ns)
	'select' operation ('select_ln31_20', src/BMM_fonctions.c:31) [214]  (0.993 ns)

 <State 36>: 8.5ns
The critical path consists of the following:
	'add' operation ('j', src/BMM_fonctions.c:31) [211]  (1.87 ns)
	'select' operation ('select_ln31_21', src/BMM_fonctions.c:31) [219]  (0.993 ns)
	'add' operation ('add_ln40_7', src/BMM_fonctions.c:40) [275]  (1.68 ns)
	'select' operation ('select_ln32_2', src/BMM_fonctions.c:32) [281]  (0.702 ns)
	'getelementptr' operation ('mB_addr_1', src/BMM_fonctions.c:40) [283]  (0 ns)
	'load' operation ('mB_load', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [284]  (3.25 ns)

 <State 37>: 5.92ns
The critical path consists of the following:
	'select' operation ('select_ln31_2', src/BMM_fonctions.c:31) [177]  (0 ns)
	'select' operation ('select_ln31_23', src/BMM_fonctions.c:31) [227]  (1.19 ns)
	'select' operation ('select_ln32_10', src/BMM_fonctions.c:32) [330]  (1.48 ns)
	'getelementptr' operation ('mB_addr_9', src/BMM_fonctions.c:40) [331]  (0 ns)
	'load' operation ('mB_load_8', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [332]  (3.25 ns)

 <State 38>: 5.87ns
The critical path consists of the following:
	'add' operation ('add_ln40_5', src/BMM_fonctions.c:40) [232]  (1.92 ns)
	'select' operation ('select_ln31_26', src/BMM_fonctions.c:31) [237]  (0 ns)
	'select' operation ('select_ln32_3', src/BMM_fonctions.c:32) [292]  (0.7 ns)
	'getelementptr' operation ('mB_addr_2', src/BMM_fonctions.c:40) [294]  (0 ns)
	'load' operation ('mB_load_1', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [295]  (3.25 ns)

 <State 39>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', src/BMM_fonctions.c:40) [386]  (5.7 ns)

 <State 40>: 6.28ns
The critical path consists of the following:
	'add' operation ('add_ln40_9', src/BMM_fonctions.c:40) [299]  (1.55 ns)
	'select' operation ('select_ln32_4', src/BMM_fonctions.c:32) [304]  (1.48 ns)
	'getelementptr' operation ('mB_addr_3', src/BMM_fonctions.c:40) [305]  (0 ns)
	'load' operation ('mB_load_2', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [306]  (3.25 ns)

 <State 41>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', src/BMM_fonctions.c:40) [386]  (5.7 ns)

 <State 42>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_73', src/BMM_fonctions.c:40) [388]  (7.26 ns)

 <State 43>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_73', src/BMM_fonctions.c:40) [388]  (7.26 ns)

 <State 44>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_73', src/BMM_fonctions.c:40) [388]  (7.26 ns)

 <State 45>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_73', src/BMM_fonctions.c:40) [388]  (7.26 ns)

 <State 46>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_73', src/BMM_fonctions.c:40) [388]  (7.26 ns)

 <State 47>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:40) [391]  (7.26 ns)

 <State 48>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:40) [391]  (7.26 ns)

 <State 49>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:40) [391]  (7.26 ns)

 <State 50>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:40) [391]  (7.26 ns)

 <State 51>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:40) [391]  (7.26 ns)

 <State 52>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:40) [394]  (7.26 ns)

 <State 53>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:40) [394]  (7.26 ns)

 <State 54>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:40) [394]  (7.26 ns)

 <State 55>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:40) [394]  (7.26 ns)

 <State 56>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:40) [394]  (7.26 ns)

 <State 57>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:40) [397]  (7.26 ns)

 <State 58>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:40) [397]  (7.26 ns)

 <State 59>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:40) [397]  (7.26 ns)

 <State 60>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:40) [397]  (7.26 ns)

 <State 61>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:40) [397]  (7.26 ns)

 <State 62>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:40) [417]  (7.26 ns)

 <State 63>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:40) [417]  (7.26 ns)

 <State 64>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:40) [417]  (7.26 ns)

 <State 65>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:40) [417]  (7.26 ns)

 <State 66>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:40) [417]  (7.26 ns)

 <State 67>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln40', src/BMM_fonctions.c:40) of variable 'tmp_1_2_3', src/BMM_fonctions.c:40 on array 'mC', src/BMM_fonctions.c:19 [418]  (3.25 ns)

 <State 68>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUTPUT_addr_1', src/BMM_fonctions.c:49) [439]  (0 ns)
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [440]  (8.75 ns)

 <State 69>: 3.25ns
The critical path consists of the following:
	'phi' operation ('phi_ln49', src/BMM_fonctions.c:49) with incoming values : ('add_ln49', src/BMM_fonctions.c:49) [443]  (0 ns)
	'getelementptr' operation ('mC_addr_1', src/BMM_fonctions.c:49) [446]  (0 ns)
	'load' operation ('mC_load', src/BMM_fonctions.c:49) on array 'mC', src/BMM_fonctions.c:19 [447]  (3.25 ns)

 <State 70>: 3.25ns
The critical path consists of the following:
	'load' operation ('mC_load', src/BMM_fonctions.c:49) on array 'mC', src/BMM_fonctions.c:19 [447]  (3.25 ns)

 <State 71>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [448]  (8.75 ns)

 <State 72>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [454]  (8.75 ns)

 <State 73>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [454]  (8.75 ns)

 <State 74>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [454]  (8.75 ns)

 <State 75>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [454]  (8.75 ns)

 <State 76>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [454]  (8.75 ns)

 <State 77>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_22', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_1', src/BMM_fonctions.c:49) [459]  (0 ns)
	'add' operation ('add_ln49_64', src/BMM_fonctions.c:49) [462]  (3.52 ns)

 <State 78>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [466]  (8.75 ns)

 <State 79>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [467]  (8.75 ns)

 <State 80>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [468]  (8.75 ns)

 <State 81>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [468]  (8.75 ns)

 <State 82>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [468]  (8.75 ns)

 <State 83>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [468]  (8.75 ns)

 <State 84>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [468]  (8.75 ns)

 <State 85>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_25', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_2', src/BMM_fonctions.c:49) [478]  (0 ns)
	'add' operation ('add_ln49_65', src/BMM_fonctions.c:49) [481]  (3.52 ns)

 <State 86>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [485]  (8.75 ns)

 <State 87>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [486]  (8.75 ns)

 <State 88>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [487]  (8.75 ns)

 <State 89>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [487]  (8.75 ns)

 <State 90>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [487]  (8.75 ns)

 <State 91>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [487]  (8.75 ns)

 <State 92>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [487]  (8.75 ns)

 <State 93>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_28', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_3', src/BMM_fonctions.c:49) [497]  (0 ns)
	'add' operation ('add_ln49_66', src/BMM_fonctions.c:49) [500]  (3.52 ns)

 <State 94>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [504]  (8.75 ns)

 <State 95>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [505]  (8.75 ns)

 <State 96>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [506]  (8.75 ns)

 <State 97>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [506]  (8.75 ns)

 <State 98>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [506]  (8.75 ns)

 <State 99>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [506]  (8.75 ns)

 <State 100>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [506]  (8.75 ns)

 <State 101>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_31', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_4', src/BMM_fonctions.c:49) [516]  (0 ns)
	'add' operation ('add_ln49_67', src/BMM_fonctions.c:49) [519]  (3.52 ns)

 <State 102>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [523]  (8.75 ns)

 <State 103>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [524]  (8.75 ns)

 <State 104>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [525]  (8.75 ns)

 <State 105>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [525]  (8.75 ns)

 <State 106>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [525]  (8.75 ns)

 <State 107>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [525]  (8.75 ns)

 <State 108>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [525]  (8.75 ns)

 <State 109>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_34', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_5', src/BMM_fonctions.c:49) [535]  (0 ns)
	'add' operation ('add_ln49_68', src/BMM_fonctions.c:49) [538]  (3.52 ns)

 <State 110>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [542]  (8.75 ns)

 <State 111>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [543]  (8.75 ns)

 <State 112>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [544]  (8.75 ns)

 <State 113>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [544]  (8.75 ns)

 <State 114>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [544]  (8.75 ns)

 <State 115>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [544]  (8.75 ns)

 <State 116>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [544]  (8.75 ns)

 <State 117>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_37', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_6', src/BMM_fonctions.c:49) [554]  (0 ns)
	'add' operation ('add_ln49_69', src/BMM_fonctions.c:49) [557]  (3.52 ns)

 <State 118>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [561]  (8.75 ns)

 <State 119>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [562]  (8.75 ns)

 <State 120>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [563]  (8.75 ns)

 <State 121>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [563]  (8.75 ns)

 <State 122>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [563]  (8.75 ns)

 <State 123>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [563]  (8.75 ns)

 <State 124>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [563]  (8.75 ns)

 <State 125>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_40', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_7', src/BMM_fonctions.c:49) [573]  (0 ns)
	'add' operation ('add_ln49_70', src/BMM_fonctions.c:49) [576]  (3.52 ns)

 <State 126>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [580]  (8.75 ns)

 <State 127>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [581]  (8.75 ns)

 <State 128>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [582]  (8.75 ns)

 <State 129>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [582]  (8.75 ns)

 <State 130>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [582]  (8.75 ns)

 <State 131>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [582]  (8.75 ns)

 <State 132>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [582]  (8.75 ns)

 <State 133>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_43', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_8', src/BMM_fonctions.c:49) [592]  (0 ns)
	'add' operation ('add_ln49_71', src/BMM_fonctions.c:49) [595]  (3.52 ns)

 <State 134>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [599]  (8.75 ns)

 <State 135>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [600]  (8.75 ns)

 <State 136>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [601]  (8.75 ns)

 <State 137>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [601]  (8.75 ns)

 <State 138>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [601]  (8.75 ns)

 <State 139>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [601]  (8.75 ns)

 <State 140>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [601]  (8.75 ns)

 <State 141>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_46', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_9', src/BMM_fonctions.c:49) [611]  (0 ns)
	'add' operation ('add_ln49_72', src/BMM_fonctions.c:49) [614]  (3.52 ns)

 <State 142>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [618]  (8.75 ns)

 <State 143>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [619]  (8.75 ns)

 <State 144>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [620]  (8.75 ns)

 <State 145>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [620]  (8.75 ns)

 <State 146>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [620]  (8.75 ns)

 <State 147>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [620]  (8.75 ns)

 <State 148>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [620]  (8.75 ns)

 <State 149>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_49', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_10', src/BMM_fonctions.c:49) [630]  (0 ns)
	'add' operation ('add_ln49_73', src/BMM_fonctions.c:49) [633]  (3.52 ns)

 <State 150>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [637]  (8.75 ns)

 <State 151>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [638]  (8.75 ns)

 <State 152>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [639]  (8.75 ns)

 <State 153>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [639]  (8.75 ns)

 <State 154>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [639]  (8.75 ns)

 <State 155>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [639]  (8.75 ns)

 <State 156>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [639]  (8.75 ns)

 <State 157>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_52', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_11', src/BMM_fonctions.c:49) [649]  (0 ns)
	'add' operation ('add_ln49_74', src/BMM_fonctions.c:49) [652]  (3.52 ns)

 <State 158>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [656]  (8.75 ns)

 <State 159>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [657]  (8.75 ns)

 <State 160>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [658]  (8.75 ns)

 <State 161>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [658]  (8.75 ns)

 <State 162>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [658]  (8.75 ns)

 <State 163>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [658]  (8.75 ns)

 <State 164>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [658]  (8.75 ns)

 <State 165>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_55', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_12', src/BMM_fonctions.c:49) [668]  (0 ns)
	'add' operation ('add_ln49_75', src/BMM_fonctions.c:49) [671]  (3.52 ns)

 <State 166>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [675]  (8.75 ns)

 <State 167>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [676]  (8.75 ns)

 <State 168>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [677]  (8.75 ns)

 <State 169>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [677]  (8.75 ns)

 <State 170>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [677]  (8.75 ns)

 <State 171>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [677]  (8.75 ns)

 <State 172>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [677]  (8.75 ns)

 <State 173>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_58', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_13', src/BMM_fonctions.c:49) [687]  (0 ns)
	'add' operation ('add_ln49_76', src/BMM_fonctions.c:49) [690]  (3.52 ns)

 <State 174>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [694]  (8.75 ns)

 <State 175>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [695]  (8.75 ns)

 <State 176>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [696]  (8.75 ns)

 <State 177>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [696]  (8.75 ns)

 <State 178>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [696]  (8.75 ns)

 <State 179>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [696]  (8.75 ns)

 <State 180>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [696]  (8.75 ns)

 <State 181>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_61', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_14', src/BMM_fonctions.c:49) [706]  (0 ns)
	'add' operation ('add_ln49_77', src/BMM_fonctions.c:49) [709]  (3.52 ns)

 <State 182>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [713]  (8.75 ns)

 <State 183>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [714]  (8.75 ns)

 <State 184>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [715]  (8.75 ns)

 <State 185>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [715]  (8.75 ns)

 <State 186>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [715]  (8.75 ns)

 <State 187>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [715]  (8.75 ns)

 <State 188>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [715]  (8.75 ns)

 <State 189>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_64', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_15', src/BMM_fonctions.c:49) [725]  (0 ns)
	'add' operation ('add_ln49_78', src/BMM_fonctions.c:49) [728]  (3.52 ns)

 <State 190>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [732]  (8.75 ns)

 <State 191>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [733]  (8.75 ns)

 <State 192>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [734]  (8.75 ns)

 <State 193>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [734]  (8.75 ns)

 <State 194>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [734]  (8.75 ns)

 <State 195>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [734]  (8.75 ns)

 <State 196>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [734]  (8.75 ns)

 <State 197>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_67', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_16', src/BMM_fonctions.c:49) [744]  (0 ns)
	'add' operation ('add_ln49_79', src/BMM_fonctions.c:49) [747]  (3.52 ns)

 <State 198>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [751]  (8.75 ns)

 <State 199>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [752]  (8.75 ns)

 <State 200>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [753]  (8.75 ns)

 <State 201>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [753]  (8.75 ns)

 <State 202>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [753]  (8.75 ns)

 <State 203>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [753]  (8.75 ns)

 <State 204>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [753]  (8.75 ns)

 <State 205>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_70', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_17', src/BMM_fonctions.c:49) [763]  (0 ns)
	'add' operation ('add_ln49_80', src/BMM_fonctions.c:49) [766]  (3.52 ns)

 <State 206>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [770]  (8.75 ns)

 <State 207>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [771]  (8.75 ns)

 <State 208>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [772]  (8.75 ns)

 <State 209>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [772]  (8.75 ns)

 <State 210>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [772]  (8.75 ns)

 <State 211>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [772]  (8.75 ns)

 <State 212>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [772]  (8.75 ns)

 <State 213>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_73', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_18', src/BMM_fonctions.c:49) [782]  (0 ns)
	'add' operation ('add_ln49_81', src/BMM_fonctions.c:49) [785]  (3.52 ns)

 <State 214>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [789]  (8.75 ns)

 <State 215>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [790]  (8.75 ns)

 <State 216>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [791]  (8.75 ns)

 <State 217>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [791]  (8.75 ns)

 <State 218>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [791]  (8.75 ns)

 <State 219>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [791]  (8.75 ns)

 <State 220>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [791]  (8.75 ns)

 <State 221>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_76', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_19', src/BMM_fonctions.c:49) [801]  (0 ns)
	'add' operation ('add_ln49_82', src/BMM_fonctions.c:49) [804]  (3.52 ns)

 <State 222>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [808]  (8.75 ns)

 <State 223>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [809]  (8.75 ns)

 <State 224>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [810]  (8.75 ns)

 <State 225>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [810]  (8.75 ns)

 <State 226>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [810]  (8.75 ns)

 <State 227>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [810]  (8.75 ns)

 <State 228>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [810]  (8.75 ns)

 <State 229>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_79', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_20', src/BMM_fonctions.c:49) [820]  (0 ns)
	'add' operation ('add_ln49_83', src/BMM_fonctions.c:49) [823]  (3.52 ns)

 <State 230>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [827]  (8.75 ns)

 <State 231>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [828]  (8.75 ns)

 <State 232>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [829]  (8.75 ns)

 <State 233>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [829]  (8.75 ns)

 <State 234>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [829]  (8.75 ns)

 <State 235>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [829]  (8.75 ns)

 <State 236>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [829]  (8.75 ns)

 <State 237>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_82', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_21', src/BMM_fonctions.c:49) [839]  (0 ns)
	'add' operation ('add_ln49_84', src/BMM_fonctions.c:49) [842]  (3.52 ns)

 <State 238>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [846]  (8.75 ns)

 <State 239>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [847]  (8.75 ns)

 <State 240>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [848]  (8.75 ns)

 <State 241>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [848]  (8.75 ns)

 <State 242>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [848]  (8.75 ns)

 <State 243>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [848]  (8.75 ns)

 <State 244>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [848]  (8.75 ns)

 <State 245>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_85', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_22', src/BMM_fonctions.c:49) [858]  (0 ns)
	'add' operation ('add_ln49_85', src/BMM_fonctions.c:49) [861]  (3.52 ns)

 <State 246>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [865]  (8.75 ns)

 <State 247>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [866]  (8.75 ns)

 <State 248>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [867]  (8.75 ns)

 <State 249>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [867]  (8.75 ns)

 <State 250>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [867]  (8.75 ns)

 <State 251>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [867]  (8.75 ns)

 <State 252>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [867]  (8.75 ns)

 <State 253>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_88', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_23', src/BMM_fonctions.c:49) [877]  (0 ns)
	'add' operation ('add_ln49_86', src/BMM_fonctions.c:49) [880]  (3.52 ns)

 <State 254>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [884]  (8.75 ns)

 <State 255>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [885]  (8.75 ns)

 <State 256>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [886]  (8.75 ns)

 <State 257>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [886]  (8.75 ns)

 <State 258>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [886]  (8.75 ns)

 <State 259>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [886]  (8.75 ns)

 <State 260>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [886]  (8.75 ns)

 <State 261>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_91', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_24', src/BMM_fonctions.c:49) [896]  (0 ns)
	'add' operation ('add_ln49_87', src/BMM_fonctions.c:49) [899]  (3.52 ns)

 <State 262>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [903]  (8.75 ns)

 <State 263>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [904]  (8.75 ns)

 <State 264>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [905]  (8.75 ns)

 <State 265>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [905]  (8.75 ns)

 <State 266>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [905]  (8.75 ns)

 <State 267>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [905]  (8.75 ns)

 <State 268>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [905]  (8.75 ns)

 <State 269>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_94', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_25', src/BMM_fonctions.c:49) [915]  (0 ns)
	'add' operation ('add_ln49_88', src/BMM_fonctions.c:49) [918]  (3.52 ns)

 <State 270>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [922]  (8.75 ns)

 <State 271>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [923]  (8.75 ns)

 <State 272>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [924]  (8.75 ns)

 <State 273>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [924]  (8.75 ns)

 <State 274>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [924]  (8.75 ns)

 <State 275>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [924]  (8.75 ns)

 <State 276>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [924]  (8.75 ns)

 <State 277>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_97', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_26', src/BMM_fonctions.c:49) [934]  (0 ns)
	'add' operation ('add_ln49_89', src/BMM_fonctions.c:49) [937]  (3.52 ns)

 <State 278>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [941]  (8.75 ns)

 <State 279>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [942]  (8.75 ns)

 <State 280>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [943]  (8.75 ns)

 <State 281>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [943]  (8.75 ns)

 <State 282>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [943]  (8.75 ns)

 <State 283>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [943]  (8.75 ns)

 <State 284>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [943]  (8.75 ns)

 <State 285>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_100', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_27', src/BMM_fonctions.c:49) [953]  (0 ns)
	'add' operation ('add_ln49_90', src/BMM_fonctions.c:49) [956]  (3.52 ns)

 <State 286>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [960]  (8.75 ns)

 <State 287>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [961]  (8.75 ns)

 <State 288>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [962]  (8.75 ns)

 <State 289>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [962]  (8.75 ns)

 <State 290>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [962]  (8.75 ns)

 <State 291>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [962]  (8.75 ns)

 <State 292>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [962]  (8.75 ns)

 <State 293>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_103', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_28', src/BMM_fonctions.c:49) [972]  (0 ns)
	'add' operation ('add_ln49_91', src/BMM_fonctions.c:49) [975]  (3.52 ns)

 <State 294>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [979]  (8.75 ns)

 <State 295>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [980]  (8.75 ns)

 <State 296>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [981]  (8.75 ns)

 <State 297>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [981]  (8.75 ns)

 <State 298>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [981]  (8.75 ns)

 <State 299>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [981]  (8.75 ns)

 <State 300>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [981]  (8.75 ns)

 <State 301>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_106', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_29', src/BMM_fonctions.c:49) [991]  (0 ns)
	'add' operation ('add_ln49_92', src/BMM_fonctions.c:49) [994]  (3.52 ns)

 <State 302>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [998]  (8.75 ns)

 <State 303>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [999]  (8.75 ns)

 <State 304>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1000]  (8.75 ns)

 <State 305>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1000]  (8.75 ns)

 <State 306>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1000]  (8.75 ns)

 <State 307>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1000]  (8.75 ns)

 <State 308>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1000]  (8.75 ns)

 <State 309>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_109', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_30', src/BMM_fonctions.c:49) [1010]  (0 ns)
	'add' operation ('add_ln49_93', src/BMM_fonctions.c:49) [1013]  (3.52 ns)

 <State 310>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1017]  (8.75 ns)

 <State 311>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1018]  (8.75 ns)

 <State 312>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1019]  (8.75 ns)

 <State 313>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1019]  (8.75 ns)

 <State 314>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1019]  (8.75 ns)

 <State 315>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1019]  (8.75 ns)

 <State 316>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1019]  (8.75 ns)

 <State 317>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_112', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_31', src/BMM_fonctions.c:49) [1029]  (0 ns)
	'add' operation ('add_ln49_94', src/BMM_fonctions.c:49) [1032]  (3.52 ns)

 <State 318>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1036]  (8.75 ns)

 <State 319>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1037]  (8.75 ns)

 <State 320>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1038]  (8.75 ns)

 <State 321>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1038]  (8.75 ns)

 <State 322>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1038]  (8.75 ns)

 <State 323>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1038]  (8.75 ns)

 <State 324>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1038]  (8.75 ns)

 <State 325>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_115', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_32', src/BMM_fonctions.c:49) [1048]  (0 ns)
	'add' operation ('add_ln49_95', src/BMM_fonctions.c:49) [1051]  (3.52 ns)

 <State 326>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1055]  (8.75 ns)

 <State 327>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1056]  (8.75 ns)

 <State 328>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1057]  (8.75 ns)

 <State 329>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1057]  (8.75 ns)

 <State 330>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1057]  (8.75 ns)

 <State 331>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1057]  (8.75 ns)

 <State 332>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1057]  (8.75 ns)

 <State 333>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_118', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_33', src/BMM_fonctions.c:49) [1067]  (0 ns)
	'add' operation ('add_ln49_96', src/BMM_fonctions.c:49) [1070]  (3.52 ns)

 <State 334>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1074]  (8.75 ns)

 <State 335>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1075]  (8.75 ns)

 <State 336>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1076]  (8.75 ns)

 <State 337>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1076]  (8.75 ns)

 <State 338>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1076]  (8.75 ns)

 <State 339>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1076]  (8.75 ns)

 <State 340>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1076]  (8.75 ns)

 <State 341>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_121', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_34', src/BMM_fonctions.c:49) [1086]  (0 ns)
	'add' operation ('add_ln49_97', src/BMM_fonctions.c:49) [1089]  (3.52 ns)

 <State 342>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1093]  (8.75 ns)

 <State 343>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1094]  (8.75 ns)

 <State 344>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1095]  (8.75 ns)

 <State 345>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1095]  (8.75 ns)

 <State 346>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1095]  (8.75 ns)

 <State 347>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1095]  (8.75 ns)

 <State 348>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1095]  (8.75 ns)

 <State 349>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_124', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_35', src/BMM_fonctions.c:49) [1105]  (0 ns)
	'add' operation ('add_ln49_98', src/BMM_fonctions.c:49) [1108]  (3.52 ns)

 <State 350>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1112]  (8.75 ns)

 <State 351>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1113]  (8.75 ns)

 <State 352>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1114]  (8.75 ns)

 <State 353>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1114]  (8.75 ns)

 <State 354>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1114]  (8.75 ns)

 <State 355>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1114]  (8.75 ns)

 <State 356>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1114]  (8.75 ns)

 <State 357>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_127', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_36', src/BMM_fonctions.c:49) [1124]  (0 ns)
	'add' operation ('add_ln49_99', src/BMM_fonctions.c:49) [1127]  (3.52 ns)

 <State 358>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1131]  (8.75 ns)

 <State 359>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1132]  (8.75 ns)

 <State 360>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1133]  (8.75 ns)

 <State 361>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1133]  (8.75 ns)

 <State 362>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1133]  (8.75 ns)

 <State 363>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1133]  (8.75 ns)

 <State 364>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1133]  (8.75 ns)

 <State 365>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_130', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_37', src/BMM_fonctions.c:49) [1143]  (0 ns)
	'add' operation ('add_ln49_100', src/BMM_fonctions.c:49) [1146]  (3.52 ns)

 <State 366>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1150]  (8.75 ns)

 <State 367>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1151]  (8.75 ns)

 <State 368>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1152]  (8.75 ns)

 <State 369>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1152]  (8.75 ns)

 <State 370>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1152]  (8.75 ns)

 <State 371>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1152]  (8.75 ns)

 <State 372>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1152]  (8.75 ns)

 <State 373>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_133', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_38', src/BMM_fonctions.c:49) [1162]  (0 ns)
	'add' operation ('add_ln49_101', src/BMM_fonctions.c:49) [1165]  (3.52 ns)

 <State 374>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1169]  (8.75 ns)

 <State 375>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1170]  (8.75 ns)

 <State 376>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1171]  (8.75 ns)

 <State 377>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1171]  (8.75 ns)

 <State 378>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1171]  (8.75 ns)

 <State 379>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1171]  (8.75 ns)

 <State 380>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1171]  (8.75 ns)

 <State 381>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_136', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_39', src/BMM_fonctions.c:49) [1181]  (0 ns)
	'add' operation ('add_ln49_102', src/BMM_fonctions.c:49) [1184]  (3.52 ns)

 <State 382>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1188]  (8.75 ns)

 <State 383>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1189]  (8.75 ns)

 <State 384>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1190]  (8.75 ns)

 <State 385>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1190]  (8.75 ns)

 <State 386>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1190]  (8.75 ns)

 <State 387>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1190]  (8.75 ns)

 <State 388>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1190]  (8.75 ns)

 <State 389>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_139', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_40', src/BMM_fonctions.c:49) [1200]  (0 ns)
	'add' operation ('add_ln49_103', src/BMM_fonctions.c:49) [1203]  (3.52 ns)

 <State 390>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1207]  (8.75 ns)

 <State 391>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1208]  (8.75 ns)

 <State 392>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1209]  (8.75 ns)

 <State 393>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1209]  (8.75 ns)

 <State 394>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1209]  (8.75 ns)

 <State 395>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1209]  (8.75 ns)

 <State 396>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1209]  (8.75 ns)

 <State 397>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_142', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_41', src/BMM_fonctions.c:49) [1219]  (0 ns)
	'add' operation ('add_ln49_104', src/BMM_fonctions.c:49) [1222]  (3.52 ns)

 <State 398>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1226]  (8.75 ns)

 <State 399>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1227]  (8.75 ns)

 <State 400>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1228]  (8.75 ns)

 <State 401>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1228]  (8.75 ns)

 <State 402>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1228]  (8.75 ns)

 <State 403>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1228]  (8.75 ns)

 <State 404>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1228]  (8.75 ns)

 <State 405>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_145', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_42', src/BMM_fonctions.c:49) [1238]  (0 ns)
	'add' operation ('add_ln49_105', src/BMM_fonctions.c:49) [1241]  (3.52 ns)

 <State 406>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1245]  (8.75 ns)

 <State 407>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1246]  (8.75 ns)

 <State 408>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1247]  (8.75 ns)

 <State 409>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1247]  (8.75 ns)

 <State 410>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1247]  (8.75 ns)

 <State 411>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1247]  (8.75 ns)

 <State 412>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1247]  (8.75 ns)

 <State 413>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_148', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_43', src/BMM_fonctions.c:49) [1257]  (0 ns)
	'add' operation ('add_ln49_106', src/BMM_fonctions.c:49) [1260]  (3.52 ns)

 <State 414>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1264]  (8.75 ns)

 <State 415>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1265]  (8.75 ns)

 <State 416>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1266]  (8.75 ns)

 <State 417>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1266]  (8.75 ns)

 <State 418>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1266]  (8.75 ns)

 <State 419>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1266]  (8.75 ns)

 <State 420>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1266]  (8.75 ns)

 <State 421>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_151', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_44', src/BMM_fonctions.c:49) [1276]  (0 ns)
	'add' operation ('add_ln49_107', src/BMM_fonctions.c:49) [1279]  (3.52 ns)

 <State 422>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1283]  (8.75 ns)

 <State 423>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1284]  (8.75 ns)

 <State 424>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1285]  (8.75 ns)

 <State 425>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1285]  (8.75 ns)

 <State 426>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1285]  (8.75 ns)

 <State 427>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1285]  (8.75 ns)

 <State 428>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1285]  (8.75 ns)

 <State 429>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_154', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_45', src/BMM_fonctions.c:49) [1295]  (0 ns)
	'add' operation ('add_ln49_108', src/BMM_fonctions.c:49) [1298]  (3.52 ns)

 <State 430>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1302]  (8.75 ns)

 <State 431>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1303]  (8.75 ns)

 <State 432>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1304]  (8.75 ns)

 <State 433>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1304]  (8.75 ns)

 <State 434>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1304]  (8.75 ns)

 <State 435>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1304]  (8.75 ns)

 <State 436>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1304]  (8.75 ns)

 <State 437>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_157', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_46', src/BMM_fonctions.c:49) [1314]  (0 ns)
	'add' operation ('add_ln49_109', src/BMM_fonctions.c:49) [1317]  (3.52 ns)

 <State 438>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1321]  (8.75 ns)

 <State 439>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1322]  (8.75 ns)

 <State 440>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1323]  (8.75 ns)

 <State 441>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1323]  (8.75 ns)

 <State 442>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1323]  (8.75 ns)

 <State 443>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1323]  (8.75 ns)

 <State 444>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1323]  (8.75 ns)

 <State 445>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_160', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_47', src/BMM_fonctions.c:49) [1333]  (0 ns)
	'add' operation ('add_ln49_110', src/BMM_fonctions.c:49) [1336]  (3.52 ns)

 <State 446>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1340]  (8.75 ns)

 <State 447>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1341]  (8.75 ns)

 <State 448>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1342]  (8.75 ns)

 <State 449>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1342]  (8.75 ns)

 <State 450>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1342]  (8.75 ns)

 <State 451>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1342]  (8.75 ns)

 <State 452>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1342]  (8.75 ns)

 <State 453>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_163', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_48', src/BMM_fonctions.c:49) [1352]  (0 ns)
	'add' operation ('add_ln49_111', src/BMM_fonctions.c:49) [1355]  (3.52 ns)

 <State 454>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1359]  (8.75 ns)

 <State 455>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1360]  (8.75 ns)

 <State 456>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1361]  (8.75 ns)

 <State 457>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1361]  (8.75 ns)

 <State 458>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1361]  (8.75 ns)

 <State 459>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1361]  (8.75 ns)

 <State 460>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1361]  (8.75 ns)

 <State 461>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_166', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_49', src/BMM_fonctions.c:49) [1371]  (0 ns)
	'add' operation ('add_ln49_112', src/BMM_fonctions.c:49) [1374]  (3.52 ns)

 <State 462>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1378]  (8.75 ns)

 <State 463>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1379]  (8.75 ns)

 <State 464>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1380]  (8.75 ns)

 <State 465>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1380]  (8.75 ns)

 <State 466>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1380]  (8.75 ns)

 <State 467>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1380]  (8.75 ns)

 <State 468>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1380]  (8.75 ns)

 <State 469>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_169', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_50', src/BMM_fonctions.c:49) [1390]  (0 ns)
	'add' operation ('add_ln49_113', src/BMM_fonctions.c:49) [1393]  (3.52 ns)

 <State 470>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1397]  (8.75 ns)

 <State 471>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1398]  (8.75 ns)

 <State 472>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1399]  (8.75 ns)

 <State 473>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1399]  (8.75 ns)

 <State 474>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1399]  (8.75 ns)

 <State 475>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1399]  (8.75 ns)

 <State 476>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1399]  (8.75 ns)

 <State 477>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_172', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_51', src/BMM_fonctions.c:49) [1409]  (0 ns)
	'add' operation ('add_ln49_114', src/BMM_fonctions.c:49) [1412]  (3.52 ns)

 <State 478>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1416]  (8.75 ns)

 <State 479>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1417]  (8.75 ns)

 <State 480>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1418]  (8.75 ns)

 <State 481>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1418]  (8.75 ns)

 <State 482>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1418]  (8.75 ns)

 <State 483>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1418]  (8.75 ns)

 <State 484>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1418]  (8.75 ns)

 <State 485>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_175', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_52', src/BMM_fonctions.c:49) [1428]  (0 ns)
	'add' operation ('add_ln49_115', src/BMM_fonctions.c:49) [1431]  (3.52 ns)

 <State 486>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1435]  (8.75 ns)

 <State 487>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1436]  (8.75 ns)

 <State 488>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1437]  (8.75 ns)

 <State 489>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1437]  (8.75 ns)

 <State 490>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1437]  (8.75 ns)

 <State 491>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1437]  (8.75 ns)

 <State 492>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1437]  (8.75 ns)

 <State 493>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_178', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_53', src/BMM_fonctions.c:49) [1447]  (0 ns)
	'add' operation ('add_ln49_116', src/BMM_fonctions.c:49) [1450]  (3.52 ns)

 <State 494>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1454]  (8.75 ns)

 <State 495>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1455]  (8.75 ns)

 <State 496>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1456]  (8.75 ns)

 <State 497>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1456]  (8.75 ns)

 <State 498>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1456]  (8.75 ns)

 <State 499>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1456]  (8.75 ns)

 <State 500>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1456]  (8.75 ns)

 <State 501>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_181', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_54', src/BMM_fonctions.c:49) [1466]  (0 ns)
	'add' operation ('add_ln49_117', src/BMM_fonctions.c:49) [1469]  (3.52 ns)

 <State 502>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1473]  (8.75 ns)

 <State 503>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1474]  (8.75 ns)

 <State 504>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1475]  (8.75 ns)

 <State 505>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1475]  (8.75 ns)

 <State 506>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1475]  (8.75 ns)

 <State 507>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1475]  (8.75 ns)

 <State 508>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1475]  (8.75 ns)

 <State 509>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_184', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_55', src/BMM_fonctions.c:49) [1485]  (0 ns)
	'add' operation ('add_ln49_118', src/BMM_fonctions.c:49) [1488]  (3.52 ns)

 <State 510>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1492]  (8.75 ns)

 <State 511>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1493]  (8.75 ns)

 <State 512>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1494]  (8.75 ns)

 <State 513>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1494]  (8.75 ns)

 <State 514>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1494]  (8.75 ns)

 <State 515>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1494]  (8.75 ns)

 <State 516>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1494]  (8.75 ns)

 <State 517>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_187', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_56', src/BMM_fonctions.c:49) [1504]  (0 ns)
	'add' operation ('add_ln49_119', src/BMM_fonctions.c:49) [1507]  (3.52 ns)

 <State 518>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1511]  (8.75 ns)

 <State 519>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1512]  (8.75 ns)

 <State 520>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1513]  (8.75 ns)

 <State 521>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1513]  (8.75 ns)

 <State 522>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1513]  (8.75 ns)

 <State 523>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1513]  (8.75 ns)

 <State 524>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1513]  (8.75 ns)

 <State 525>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_190', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_57', src/BMM_fonctions.c:49) [1523]  (0 ns)
	'add' operation ('add_ln49_120', src/BMM_fonctions.c:49) [1526]  (3.52 ns)

 <State 526>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1530]  (8.75 ns)

 <State 527>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1531]  (8.75 ns)

 <State 528>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1532]  (8.75 ns)

 <State 529>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1532]  (8.75 ns)

 <State 530>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1532]  (8.75 ns)

 <State 531>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1532]  (8.75 ns)

 <State 532>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1532]  (8.75 ns)

 <State 533>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_193', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_58', src/BMM_fonctions.c:49) [1542]  (0 ns)
	'add' operation ('add_ln49_121', src/BMM_fonctions.c:49) [1545]  (3.52 ns)

 <State 534>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1549]  (8.75 ns)

 <State 535>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1550]  (8.75 ns)

 <State 536>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1551]  (8.75 ns)

 <State 537>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1551]  (8.75 ns)

 <State 538>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1551]  (8.75 ns)

 <State 539>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1551]  (8.75 ns)

 <State 540>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1551]  (8.75 ns)

 <State 541>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_196', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_59', src/BMM_fonctions.c:49) [1561]  (0 ns)
	'add' operation ('add_ln49_122', src/BMM_fonctions.c:49) [1564]  (3.52 ns)

 <State 542>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1568]  (8.75 ns)

 <State 543>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1569]  (8.75 ns)

 <State 544>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1570]  (8.75 ns)

 <State 545>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1570]  (8.75 ns)

 <State 546>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1570]  (8.75 ns)

 <State 547>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1570]  (8.75 ns)

 <State 548>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1570]  (8.75 ns)

 <State 549>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_199', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_60', src/BMM_fonctions.c:49) [1580]  (0 ns)
	'add' operation ('add_ln49_123', src/BMM_fonctions.c:49) [1583]  (3.52 ns)

 <State 550>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1587]  (8.75 ns)

 <State 551>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1588]  (8.75 ns)

 <State 552>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1589]  (8.75 ns)

 <State 553>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1589]  (8.75 ns)

 <State 554>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1589]  (8.75 ns)

 <State 555>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1589]  (8.75 ns)

 <State 556>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1589]  (8.75 ns)

 <State 557>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_202', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_61', src/BMM_fonctions.c:49) [1599]  (0 ns)
	'add' operation ('add_ln49_124', src/BMM_fonctions.c:49) [1602]  (3.52 ns)

 <State 558>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1606]  (8.75 ns)

 <State 559>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1607]  (8.75 ns)

 <State 560>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1608]  (8.75 ns)

 <State 561>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1608]  (8.75 ns)

 <State 562>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1608]  (8.75 ns)

 <State 563>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1608]  (8.75 ns)

 <State 564>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1608]  (8.75 ns)

 <State 565>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_205', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_62', src/BMM_fonctions.c:49) [1618]  (0 ns)
	'add' operation ('add_ln49_125', src/BMM_fonctions.c:49) [1621]  (3.52 ns)

 <State 566>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1625]  (8.75 ns)

 <State 567>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1626]  (8.75 ns)

 <State 568>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1627]  (8.75 ns)

 <State 569>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1627]  (8.75 ns)

 <State 570>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1627]  (8.75 ns)

 <State 571>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1627]  (8.75 ns)

 <State 572>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1627]  (8.75 ns)

 <State 573>: 3.52ns
The critical path consists of the following:
	'phi' operation ('empty_208', src/BMM_fonctions.c:49) with incoming values : ('add_ln49_63', src/BMM_fonctions.c:49) [1637]  (0 ns)
	'add' operation ('add_ln49_126', src/BMM_fonctions.c:49) [1640]  (3.52 ns)

 <State 574>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1644]  (8.75 ns)

 <State 575>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1645]  (8.75 ns)

 <State 576>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1646]  (8.75 ns)

 <State 577>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1646]  (8.75 ns)

 <State 578>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1646]  (8.75 ns)

 <State 579>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1646]  (8.75 ns)

 <State 580>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:49) [1646]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185
	State 186
	State 187
	State 188
	State 189
	State 190
	State 191
	State 192
	State 193
	State 194
	State 195
	State 196
	State 197
	State 198
	State 199
	State 200
	State 201
	State 202
	State 203
	State 204
	State 205
	State 206
	State 207
	State 208
	State 209
	State 210
	State 211
	State 212
	State 213
	State 214
	State 215
	State 216
	State 217
	State 218
	State 219
	State 220
	State 221
	State 222
	State 223
	State 224
	State 225
	State 226
	State 227
	State 228
	State 229
	State 230
	State 231
	State 232
	State 233
	State 234
	State 235
	State 236
	State 237
	State 238
	State 239
	State 240
	State 241
	State 242
	State 243
	State 244
	State 245
	State 246
	State 247
	State 248
	State 249
	State 250
	State 251
	State 252
	State 253
	State 254
	State 255
	State 256
	State 257
	State 258
	State 259
	State 260
	State 261
	State 262
	State 263
	State 264
	State 265
	State 266
	State 267
	State 268
	State 269
	State 270
	State 271
	State 272
	State 273
	State 274
	State 275
	State 276
	State 277
	State 278
	State 279
	State 280
	State 281
	State 282
	State 283
	State 284
	State 285
	State 286
	State 287
	State 288
	State 289
	State 290
	State 291
	State 292
	State 293
	State 294
	State 295
	State 296
	State 297
	State 298
	State 299
	State 300
	State 301
	State 302
	State 303
	State 304
	State 305
	State 306
	State 307
	State 308
	State 309
	State 310
	State 311
	State 312
	State 313
	State 314
	State 315
	State 316
	State 317
	State 318
	State 319
	State 320
	State 321
	State 322
	State 323
	State 324
	State 325
	State 326
	State 327
	State 328
	State 329
	State 330
	State 331
	State 332
	State 333
	State 334
	State 335
	State 336
	State 337
	State 338
	State 339
	State 340
	State 341
	State 342
	State 343
	State 344
	State 345
	State 346
	State 347
	State 348
	State 349
	State 350
	State 351
	State 352
	State 353
	State 354
	State 355
	State 356
	State 357
	State 358
	State 359
	State 360
	State 361
	State 362
	State 363
	State 364
	State 365
	State 366
	State 367
	State 368
	State 369
	State 370
	State 371
	State 372
	State 373
	State 374
	State 375
	State 376
	State 377
	State 378
	State 379
	State 380
	State 381
	State 382
	State 383
	State 384
	State 385
	State 386
	State 387
	State 388
	State 389
	State 390
	State 391
	State 392
	State 393
	State 394
	State 395
	State 396
	State 397
	State 398
	State 399
	State 400
	State 401
	State 402
	State 403
	State 404
	State 405
	State 406
	State 407
	State 408
	State 409
	State 410
	State 411
	State 412
	State 413
	State 414
	State 415
	State 416
	State 417
	State 418
	State 419
	State 420
	State 421
	State 422
	State 423
	State 424
	State 425
	State 426
	State 427
	State 428
	State 429
	State 430
	State 431
	State 432
	State 433
	State 434
	State 435
	State 436
	State 437
	State 438
	State 439
	State 440
	State 441
	State 442
	State 443
	State 444
	State 445
	State 446
	State 447
	State 448
	State 449
	State 450
	State 451
	State 452
	State 453
	State 454
	State 455
	State 456
	State 457
	State 458
	State 459
	State 460
	State 461
	State 462
	State 463
	State 464
	State 465
	State 466
	State 467
	State 468
	State 469
	State 470
	State 471
	State 472
	State 473
	State 474
	State 475
	State 476
	State 477
	State 478
	State 479
	State 480
	State 481
	State 482
	State 483
	State 484
	State 485
	State 486
	State 487
	State 488
	State 489
	State 490
	State 491
	State 492
	State 493
	State 494
	State 495
	State 496
	State 497
	State 498
	State 499
	State 500
	State 501
	State 502
	State 503
	State 504
	State 505
	State 506
	State 507
	State 508
	State 509
	State 510
	State 511
	State 512
	State 513
	State 514
	State 515
	State 516
	State 517
	State 518
	State 519
	State 520
	State 521
	State 522
	State 523
	State 524
	State 525
	State 526
	State 527
	State 528
	State 529
	State 530
	State 531
	State 532
	State 533
	State 534
	State 535
	State 536
	State 537
	State 538
	State 539
	State 540
	State 541
	State 542
	State 543
	State 544
	State 545
	State 546
	State 547
	State 548
	State 549
	State 550
	State 551
	State 552
	State 553
	State 554
	State 555
	State 556
	State 557
	State 558
	State 559
	State 560
	State 561
	State 562
	State 563
	State 564
	State 565
	State 566
	State 567
	State 568
	State 569
	State 570
	State 571
	State 572
	State 573
	State 574
	State 575
	State 576
	State 577
	State 578
	State 579
	State 580


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
