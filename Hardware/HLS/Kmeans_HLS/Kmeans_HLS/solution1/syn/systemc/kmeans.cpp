// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kmeans.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kmeans::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kmeans::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<112> kmeans::ap_ST_fsm_state1 = "1";
const sc_lv<112> kmeans::ap_ST_fsm_state2 = "10";
const sc_lv<112> kmeans::ap_ST_fsm_state3 = "100";
const sc_lv<112> kmeans::ap_ST_fsm_state4 = "1000";
const sc_lv<112> kmeans::ap_ST_fsm_state5 = "10000";
const sc_lv<112> kmeans::ap_ST_fsm_state6 = "100000";
const sc_lv<112> kmeans::ap_ST_fsm_state7 = "1000000";
const sc_lv<112> kmeans::ap_ST_fsm_state8 = "10000000";
const sc_lv<112> kmeans::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<112> kmeans::ap_ST_fsm_state12 = "1000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state13 = "10000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state14 = "100000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_pp1_stage0 = "10000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state22 = "100000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state23 = "1000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state24 = "10000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state25 = "100000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state26 = "1000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state27 = "10000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state28 = "100000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_pp2_stage0 = "1000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state31 = "10000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state32 = "100000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state33 = "1000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state34 = "10000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state35 = "100000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state36 = "1000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state37 = "10000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_pp3_stage0 = "100000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state40 = "1000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state41 = "10000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state42 = "100000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state43 = "1000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state44 = "10000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state45 = "100000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_pp4_stage0 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state116 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state117 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state118 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state119 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> kmeans::ap_ST_fsm_state120 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> kmeans::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kmeans::ap_const_boolean_1 = true;
const sc_lv<32> kmeans::ap_const_lv32_9 = "1001";
const sc_lv<32> kmeans::ap_const_lv32_10 = "10000";
const bool kmeans::ap_const_boolean_0 = false;
const sc_lv<1> kmeans::ap_const_lv1_0 = "0";
const sc_lv<32> kmeans::ap_const_lv32_1 = "1";
const sc_lv<32> kmeans::ap_const_lv32_8 = "1000";
const sc_lv<32> kmeans::ap_const_lv32_19 = "11001";
const sc_lv<32> kmeans::ap_const_lv32_20 = "100000";
const sc_lv<32> kmeans::ap_const_lv32_11 = "10001";
const sc_lv<32> kmeans::ap_const_lv32_18 = "11000";
const sc_lv<32> kmeans::ap_const_lv32_22 = "100010";
const sc_lv<1> kmeans::ap_const_lv1_1 = "1";
const sc_lv<32> kmeans::ap_const_lv32_6F = "1101111";
const int kmeans::C_S_AXI_DATA_WIDTH = "100000";
const int kmeans::C_M_AXI_INPUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kmeans::C_M_AXI_INPUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kmeans::C_M_AXI_INPUT_R_CACHE_VALUE = "11";
const int kmeans::C_M_AXI_DATA_WIDTH = "100000";
const int kmeans::C_M_AXI_OUTPUT_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kmeans::C_M_AXI_OUTPUT_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int kmeans::C_M_AXI_OUTPUT_R_CACHE_VALUE = "11";
const sc_lv<32> kmeans::ap_const_lv32_24 = "100100";
const sc_lv<32> kmeans::ap_const_lv32_38 = "111000";
const sc_lv<32> kmeans::ap_const_lv32_7 = "111";
const sc_lv<32> kmeans::ap_const_lv32_23 = "100011";
const sc_lv<32> kmeans::ap_const_lv32_25 = "100101";
const sc_lv<32> kmeans::ap_const_lv32_2A = "101010";
const sc_lv<32> kmeans::ap_const_lv32_2C = "101100";
const sc_lv<32> kmeans::ap_const_lv32_2D = "101101";
const sc_lv<32> kmeans::ap_const_lv32_31 = "110001";
const sc_lv<32> kmeans::ap_const_lv32_33 = "110011";
const sc_lv<32> kmeans::ap_const_lv32_35 = "110101";
const sc_lv<32> kmeans::ap_const_lv32_36 = "110110";
const sc_lv<32> kmeans::ap_const_lv32_37 = "110111";
const sc_lv<32> kmeans::ap_const_lv32_3D = "111101";
const sc_lv<32> kmeans::ap_const_lv32_42 = "1000010";
const sc_lv<32> kmeans::ap_const_lv32_52 = "1010010";
const sc_lv<32> kmeans::ap_const_lv32_53 = "1010011";
const sc_lv<32> kmeans::ap_const_lv32_58 = "1011000";
const sc_lv<32> kmeans::ap_const_lv32_68 = "1101000";
const sc_lv<32> kmeans::ap_const_lv32_6A = "1101010";
const sc_lv<32> kmeans::ap_const_lv32_F = "1111";
const sc_lv<32> kmeans::ap_const_lv32_17 = "10111";
const sc_lv<32> kmeans::ap_const_lv32_1F = "11111";
const sc_lv<8> kmeans::ap_const_lv8_0 = "00000000";
const sc_lv<3> kmeans::ap_const_lv3_0 = "000";
const sc_lv<4> kmeans::ap_const_lv4_0 = "0000";
const sc_lv<32> kmeans::ap_const_lv32_21 = "100001";
const sc_lv<32> kmeans::ap_const_lv32_47C34F80 = "1000111110000110100111110000000";
const sc_lv<32> kmeans::ap_const_lv32_69 = "1101001";
const sc_lv<32> kmeans::ap_const_lv32_80 = "10000000";
const sc_lv<2> kmeans::ap_const_lv2_0 = "00";
const sc_lv<32> kmeans::ap_const_lv32_4 = "100";
const sc_lv<4> kmeans::ap_const_lv4_F = "1111";
const sc_lv<2> kmeans::ap_const_lv2_1 = "1";
const sc_lv<2> kmeans::ap_const_lv2_2 = "10";
const sc_lv<2> kmeans::ap_const_lv2_3 = "11";
const sc_lv<32> kmeans::ap_const_lv32_26 = "100110";
const sc_lv<32> kmeans::ap_const_lv32_39 = "111001";
const sc_lv<32> kmeans::ap_const_lv32_43 = "1000011";
const sc_lv<32> kmeans::ap_const_lv32_59 = "1011001";
const sc_lv<32> kmeans::ap_const_lv32_32 = "110010";
const sc_lv<32> kmeans::ap_const_lv32_2B = "101011";
const sc_lv<32> kmeans::ap_const_lv32_34 = "110100";
const sc_lv<32> kmeans::ap_const_lv32_2 = "10";
const sc_lv<8> kmeans::ap_const_lv8_80 = "10000000";
const sc_lv<8> kmeans::ap_const_lv8_1 = "1";
const sc_lv<3> kmeans::ap_const_lv3_4 = "100";
const sc_lv<3> kmeans::ap_const_lv3_1 = "1";
const sc_lv<4> kmeans::ap_const_lv4_A = "1010";
const sc_lv<4> kmeans::ap_const_lv4_1 = "1";
const sc_lv<32> kmeans::ap_const_lv32_1E = "11110";
const sc_lv<8> kmeans::ap_const_lv8_FF = "11111111";
const sc_lv<23> kmeans::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> kmeans::ap_const_lv5_4 = "100";

kmeans::kmeans(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kmeans_CONTROL_BUS_s_axi_U = new kmeans_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>("kmeans_CONTROL_BUS_s_axi_U");
    kmeans_CONTROL_BUS_s_axi_U->AWVALID(s_axi_CONTROL_BUS_AWVALID);
    kmeans_CONTROL_BUS_s_axi_U->AWREADY(s_axi_CONTROL_BUS_AWREADY);
    kmeans_CONTROL_BUS_s_axi_U->AWADDR(s_axi_CONTROL_BUS_AWADDR);
    kmeans_CONTROL_BUS_s_axi_U->WVALID(s_axi_CONTROL_BUS_WVALID);
    kmeans_CONTROL_BUS_s_axi_U->WREADY(s_axi_CONTROL_BUS_WREADY);
    kmeans_CONTROL_BUS_s_axi_U->WDATA(s_axi_CONTROL_BUS_WDATA);
    kmeans_CONTROL_BUS_s_axi_U->WSTRB(s_axi_CONTROL_BUS_WSTRB);
    kmeans_CONTROL_BUS_s_axi_U->ARVALID(s_axi_CONTROL_BUS_ARVALID);
    kmeans_CONTROL_BUS_s_axi_U->ARREADY(s_axi_CONTROL_BUS_ARREADY);
    kmeans_CONTROL_BUS_s_axi_U->ARADDR(s_axi_CONTROL_BUS_ARADDR);
    kmeans_CONTROL_BUS_s_axi_U->RVALID(s_axi_CONTROL_BUS_RVALID);
    kmeans_CONTROL_BUS_s_axi_U->RREADY(s_axi_CONTROL_BUS_RREADY);
    kmeans_CONTROL_BUS_s_axi_U->RDATA(s_axi_CONTROL_BUS_RDATA);
    kmeans_CONTROL_BUS_s_axi_U->RRESP(s_axi_CONTROL_BUS_RRESP);
    kmeans_CONTROL_BUS_s_axi_U->BVALID(s_axi_CONTROL_BUS_BVALID);
    kmeans_CONTROL_BUS_s_axi_U->BREADY(s_axi_CONTROL_BUS_BREADY);
    kmeans_CONTROL_BUS_s_axi_U->BRESP(s_axi_CONTROL_BUS_BRESP);
    kmeans_CONTROL_BUS_s_axi_U->ACLK(ap_clk);
    kmeans_CONTROL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    kmeans_CONTROL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    kmeans_CONTROL_BUS_s_axi_U->ap_start(ap_start);
    kmeans_CONTROL_BUS_s_axi_U->interrupt(interrupt);
    kmeans_CONTROL_BUS_s_axi_U->ap_ready(ap_ready);
    kmeans_CONTROL_BUS_s_axi_U->ap_done(ap_done);
    kmeans_CONTROL_BUS_s_axi_U->ap_idle(ap_idle);
    kmeans_CONTROL_BUS_s_axi_U->in_X_prot(in_X_prot);
    kmeans_CONTROL_BUS_s_axi_U->in_Y_prot(in_Y_prot);
    kmeans_CONTROL_BUS_s_axi_U->in_X(in_X);
    kmeans_CONTROL_BUS_s_axi_U->in_Y(in_Y);
    kmeans_CONTROL_BUS_s_axi_U->out_cluster(out_cluster);
    kmeans_INPUT_r_m_axi_U = new kmeans_INPUT_r_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_INPUT_R_ID_WIDTH,C_M_AXI_INPUT_R_ADDR_WIDTH,C_M_AXI_INPUT_R_DATA_WIDTH,C_M_AXI_INPUT_R_AWUSER_WIDTH,C_M_AXI_INPUT_R_ARUSER_WIDTH,C_M_AXI_INPUT_R_WUSER_WIDTH,C_M_AXI_INPUT_R_RUSER_WIDTH,C_M_AXI_INPUT_R_BUSER_WIDTH,C_M_AXI_INPUT_R_USER_VALUE,C_M_AXI_INPUT_R_PROT_VALUE,C_M_AXI_INPUT_R_CACHE_VALUE>("kmeans_INPUT_r_m_axi_U");
    kmeans_INPUT_r_m_axi_U->AWVALID(m_axi_INPUT_r_AWVALID);
    kmeans_INPUT_r_m_axi_U->AWREADY(m_axi_INPUT_r_AWREADY);
    kmeans_INPUT_r_m_axi_U->AWADDR(m_axi_INPUT_r_AWADDR);
    kmeans_INPUT_r_m_axi_U->AWID(m_axi_INPUT_r_AWID);
    kmeans_INPUT_r_m_axi_U->AWLEN(m_axi_INPUT_r_AWLEN);
    kmeans_INPUT_r_m_axi_U->AWSIZE(m_axi_INPUT_r_AWSIZE);
    kmeans_INPUT_r_m_axi_U->AWBURST(m_axi_INPUT_r_AWBURST);
    kmeans_INPUT_r_m_axi_U->AWLOCK(m_axi_INPUT_r_AWLOCK);
    kmeans_INPUT_r_m_axi_U->AWCACHE(m_axi_INPUT_r_AWCACHE);
    kmeans_INPUT_r_m_axi_U->AWPROT(m_axi_INPUT_r_AWPROT);
    kmeans_INPUT_r_m_axi_U->AWQOS(m_axi_INPUT_r_AWQOS);
    kmeans_INPUT_r_m_axi_U->AWREGION(m_axi_INPUT_r_AWREGION);
    kmeans_INPUT_r_m_axi_U->AWUSER(m_axi_INPUT_r_AWUSER);
    kmeans_INPUT_r_m_axi_U->WVALID(m_axi_INPUT_r_WVALID);
    kmeans_INPUT_r_m_axi_U->WREADY(m_axi_INPUT_r_WREADY);
    kmeans_INPUT_r_m_axi_U->WDATA(m_axi_INPUT_r_WDATA);
    kmeans_INPUT_r_m_axi_U->WSTRB(m_axi_INPUT_r_WSTRB);
    kmeans_INPUT_r_m_axi_U->WLAST(m_axi_INPUT_r_WLAST);
    kmeans_INPUT_r_m_axi_U->WID(m_axi_INPUT_r_WID);
    kmeans_INPUT_r_m_axi_U->WUSER(m_axi_INPUT_r_WUSER);
    kmeans_INPUT_r_m_axi_U->ARVALID(m_axi_INPUT_r_ARVALID);
    kmeans_INPUT_r_m_axi_U->ARREADY(m_axi_INPUT_r_ARREADY);
    kmeans_INPUT_r_m_axi_U->ARADDR(m_axi_INPUT_r_ARADDR);
    kmeans_INPUT_r_m_axi_U->ARID(m_axi_INPUT_r_ARID);
    kmeans_INPUT_r_m_axi_U->ARLEN(m_axi_INPUT_r_ARLEN);
    kmeans_INPUT_r_m_axi_U->ARSIZE(m_axi_INPUT_r_ARSIZE);
    kmeans_INPUT_r_m_axi_U->ARBURST(m_axi_INPUT_r_ARBURST);
    kmeans_INPUT_r_m_axi_U->ARLOCK(m_axi_INPUT_r_ARLOCK);
    kmeans_INPUT_r_m_axi_U->ARCACHE(m_axi_INPUT_r_ARCACHE);
    kmeans_INPUT_r_m_axi_U->ARPROT(m_axi_INPUT_r_ARPROT);
    kmeans_INPUT_r_m_axi_U->ARQOS(m_axi_INPUT_r_ARQOS);
    kmeans_INPUT_r_m_axi_U->ARREGION(m_axi_INPUT_r_ARREGION);
    kmeans_INPUT_r_m_axi_U->ARUSER(m_axi_INPUT_r_ARUSER);
    kmeans_INPUT_r_m_axi_U->RVALID(m_axi_INPUT_r_RVALID);
    kmeans_INPUT_r_m_axi_U->RREADY(m_axi_INPUT_r_RREADY);
    kmeans_INPUT_r_m_axi_U->RDATA(m_axi_INPUT_r_RDATA);
    kmeans_INPUT_r_m_axi_U->RLAST(m_axi_INPUT_r_RLAST);
    kmeans_INPUT_r_m_axi_U->RID(m_axi_INPUT_r_RID);
    kmeans_INPUT_r_m_axi_U->RUSER(m_axi_INPUT_r_RUSER);
    kmeans_INPUT_r_m_axi_U->RRESP(m_axi_INPUT_r_RRESP);
    kmeans_INPUT_r_m_axi_U->BVALID(m_axi_INPUT_r_BVALID);
    kmeans_INPUT_r_m_axi_U->BREADY(m_axi_INPUT_r_BREADY);
    kmeans_INPUT_r_m_axi_U->BRESP(m_axi_INPUT_r_BRESP);
    kmeans_INPUT_r_m_axi_U->BID(m_axi_INPUT_r_BID);
    kmeans_INPUT_r_m_axi_U->BUSER(m_axi_INPUT_r_BUSER);
    kmeans_INPUT_r_m_axi_U->ACLK(ap_clk);
    kmeans_INPUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    kmeans_INPUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    kmeans_INPUT_r_m_axi_U->I_ARVALID(INPUT_r_ARVALID);
    kmeans_INPUT_r_m_axi_U->I_ARREADY(INPUT_r_ARREADY);
    kmeans_INPUT_r_m_axi_U->I_ARADDR(INPUT_r_ARADDR);
    kmeans_INPUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_ARLEN(INPUT_r_ARLEN);
    kmeans_INPUT_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    kmeans_INPUT_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    kmeans_INPUT_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    kmeans_INPUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    kmeans_INPUT_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_RVALID(INPUT_r_RVALID);
    kmeans_INPUT_r_m_axi_U->I_RREADY(INPUT_r_RREADY);
    kmeans_INPUT_r_m_axi_U->I_RDATA(INPUT_r_RDATA);
    kmeans_INPUT_r_m_axi_U->I_RID(INPUT_r_RID);
    kmeans_INPUT_r_m_axi_U->I_RUSER(INPUT_r_RUSER);
    kmeans_INPUT_r_m_axi_U->I_RRESP(INPUT_r_RRESP);
    kmeans_INPUT_r_m_axi_U->I_RLAST(INPUT_r_RLAST);
    kmeans_INPUT_r_m_axi_U->I_AWVALID(ap_var_for_const5);
    kmeans_INPUT_r_m_axi_U->I_AWREADY(INPUT_r_AWREADY);
    kmeans_INPUT_r_m_axi_U->I_AWADDR(ap_var_for_const6);
    kmeans_INPUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_AWLEN(ap_var_for_const6);
    kmeans_INPUT_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    kmeans_INPUT_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    kmeans_INPUT_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    kmeans_INPUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    kmeans_INPUT_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_WVALID(ap_var_for_const5);
    kmeans_INPUT_r_m_axi_U->I_WREADY(INPUT_r_WREADY);
    kmeans_INPUT_r_m_axi_U->I_WDATA(ap_var_for_const6);
    kmeans_INPUT_r_m_axi_U->I_WID(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    kmeans_INPUT_r_m_axi_U->I_WLAST(ap_var_for_const5);
    kmeans_INPUT_r_m_axi_U->I_WSTRB(ap_var_for_const4);
    kmeans_INPUT_r_m_axi_U->I_BVALID(INPUT_r_BVALID);
    kmeans_INPUT_r_m_axi_U->I_BREADY(ap_var_for_const5);
    kmeans_INPUT_r_m_axi_U->I_BRESP(INPUT_r_BRESP);
    kmeans_INPUT_r_m_axi_U->I_BID(INPUT_r_BID);
    kmeans_INPUT_r_m_axi_U->I_BUSER(INPUT_r_BUSER);
    kmeans_OUTPUT_r_m_axi_U = new kmeans_OUTPUT_r_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_OUTPUT_R_ID_WIDTH,C_M_AXI_OUTPUT_R_ADDR_WIDTH,C_M_AXI_OUTPUT_R_DATA_WIDTH,C_M_AXI_OUTPUT_R_AWUSER_WIDTH,C_M_AXI_OUTPUT_R_ARUSER_WIDTH,C_M_AXI_OUTPUT_R_WUSER_WIDTH,C_M_AXI_OUTPUT_R_RUSER_WIDTH,C_M_AXI_OUTPUT_R_BUSER_WIDTH,C_M_AXI_OUTPUT_R_USER_VALUE,C_M_AXI_OUTPUT_R_PROT_VALUE,C_M_AXI_OUTPUT_R_CACHE_VALUE>("kmeans_OUTPUT_r_m_axi_U");
    kmeans_OUTPUT_r_m_axi_U->AWVALID(m_axi_OUTPUT_r_AWVALID);
    kmeans_OUTPUT_r_m_axi_U->AWREADY(m_axi_OUTPUT_r_AWREADY);
    kmeans_OUTPUT_r_m_axi_U->AWADDR(m_axi_OUTPUT_r_AWADDR);
    kmeans_OUTPUT_r_m_axi_U->AWID(m_axi_OUTPUT_r_AWID);
    kmeans_OUTPUT_r_m_axi_U->AWLEN(m_axi_OUTPUT_r_AWLEN);
    kmeans_OUTPUT_r_m_axi_U->AWSIZE(m_axi_OUTPUT_r_AWSIZE);
    kmeans_OUTPUT_r_m_axi_U->AWBURST(m_axi_OUTPUT_r_AWBURST);
    kmeans_OUTPUT_r_m_axi_U->AWLOCK(m_axi_OUTPUT_r_AWLOCK);
    kmeans_OUTPUT_r_m_axi_U->AWCACHE(m_axi_OUTPUT_r_AWCACHE);
    kmeans_OUTPUT_r_m_axi_U->AWPROT(m_axi_OUTPUT_r_AWPROT);
    kmeans_OUTPUT_r_m_axi_U->AWQOS(m_axi_OUTPUT_r_AWQOS);
    kmeans_OUTPUT_r_m_axi_U->AWREGION(m_axi_OUTPUT_r_AWREGION);
    kmeans_OUTPUT_r_m_axi_U->AWUSER(m_axi_OUTPUT_r_AWUSER);
    kmeans_OUTPUT_r_m_axi_U->WVALID(m_axi_OUTPUT_r_WVALID);
    kmeans_OUTPUT_r_m_axi_U->WREADY(m_axi_OUTPUT_r_WREADY);
    kmeans_OUTPUT_r_m_axi_U->WDATA(m_axi_OUTPUT_r_WDATA);
    kmeans_OUTPUT_r_m_axi_U->WSTRB(m_axi_OUTPUT_r_WSTRB);
    kmeans_OUTPUT_r_m_axi_U->WLAST(m_axi_OUTPUT_r_WLAST);
    kmeans_OUTPUT_r_m_axi_U->WID(m_axi_OUTPUT_r_WID);
    kmeans_OUTPUT_r_m_axi_U->WUSER(m_axi_OUTPUT_r_WUSER);
    kmeans_OUTPUT_r_m_axi_U->ARVALID(m_axi_OUTPUT_r_ARVALID);
    kmeans_OUTPUT_r_m_axi_U->ARREADY(m_axi_OUTPUT_r_ARREADY);
    kmeans_OUTPUT_r_m_axi_U->ARADDR(m_axi_OUTPUT_r_ARADDR);
    kmeans_OUTPUT_r_m_axi_U->ARID(m_axi_OUTPUT_r_ARID);
    kmeans_OUTPUT_r_m_axi_U->ARLEN(m_axi_OUTPUT_r_ARLEN);
    kmeans_OUTPUT_r_m_axi_U->ARSIZE(m_axi_OUTPUT_r_ARSIZE);
    kmeans_OUTPUT_r_m_axi_U->ARBURST(m_axi_OUTPUT_r_ARBURST);
    kmeans_OUTPUT_r_m_axi_U->ARLOCK(m_axi_OUTPUT_r_ARLOCK);
    kmeans_OUTPUT_r_m_axi_U->ARCACHE(m_axi_OUTPUT_r_ARCACHE);
    kmeans_OUTPUT_r_m_axi_U->ARPROT(m_axi_OUTPUT_r_ARPROT);
    kmeans_OUTPUT_r_m_axi_U->ARQOS(m_axi_OUTPUT_r_ARQOS);
    kmeans_OUTPUT_r_m_axi_U->ARREGION(m_axi_OUTPUT_r_ARREGION);
    kmeans_OUTPUT_r_m_axi_U->ARUSER(m_axi_OUTPUT_r_ARUSER);
    kmeans_OUTPUT_r_m_axi_U->RVALID(m_axi_OUTPUT_r_RVALID);
    kmeans_OUTPUT_r_m_axi_U->RREADY(m_axi_OUTPUT_r_RREADY);
    kmeans_OUTPUT_r_m_axi_U->RDATA(m_axi_OUTPUT_r_RDATA);
    kmeans_OUTPUT_r_m_axi_U->RLAST(m_axi_OUTPUT_r_RLAST);
    kmeans_OUTPUT_r_m_axi_U->RID(m_axi_OUTPUT_r_RID);
    kmeans_OUTPUT_r_m_axi_U->RUSER(m_axi_OUTPUT_r_RUSER);
    kmeans_OUTPUT_r_m_axi_U->RRESP(m_axi_OUTPUT_r_RRESP);
    kmeans_OUTPUT_r_m_axi_U->BVALID(m_axi_OUTPUT_r_BVALID);
    kmeans_OUTPUT_r_m_axi_U->BREADY(m_axi_OUTPUT_r_BREADY);
    kmeans_OUTPUT_r_m_axi_U->BRESP(m_axi_OUTPUT_r_BRESP);
    kmeans_OUTPUT_r_m_axi_U->BID(m_axi_OUTPUT_r_BID);
    kmeans_OUTPUT_r_m_axi_U->BUSER(m_axi_OUTPUT_r_BUSER);
    kmeans_OUTPUT_r_m_axi_U->ACLK(ap_clk);
    kmeans_OUTPUT_r_m_axi_U->ARESET(ap_rst_n_inv);
    kmeans_OUTPUT_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    kmeans_OUTPUT_r_m_axi_U->I_ARVALID(ap_var_for_const5);
    kmeans_OUTPUT_r_m_axi_U->I_ARREADY(OUTPUT_r_ARREADY);
    kmeans_OUTPUT_r_m_axi_U->I_ARADDR(ap_var_for_const6);
    kmeans_OUTPUT_r_m_axi_U->I_ARID(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_ARLEN(ap_var_for_const6);
    kmeans_OUTPUT_r_m_axi_U->I_ARSIZE(ap_var_for_const2);
    kmeans_OUTPUT_r_m_axi_U->I_ARLOCK(ap_var_for_const3);
    kmeans_OUTPUT_r_m_axi_U->I_ARCACHE(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_ARQOS(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_ARPROT(ap_var_for_const2);
    kmeans_OUTPUT_r_m_axi_U->I_ARUSER(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_ARBURST(ap_var_for_const3);
    kmeans_OUTPUT_r_m_axi_U->I_ARREGION(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_RVALID(OUTPUT_r_RVALID);
    kmeans_OUTPUT_r_m_axi_U->I_RREADY(ap_var_for_const5);
    kmeans_OUTPUT_r_m_axi_U->I_RDATA(OUTPUT_r_RDATA);
    kmeans_OUTPUT_r_m_axi_U->I_RID(OUTPUT_r_RID);
    kmeans_OUTPUT_r_m_axi_U->I_RUSER(OUTPUT_r_RUSER);
    kmeans_OUTPUT_r_m_axi_U->I_RRESP(OUTPUT_r_RRESP);
    kmeans_OUTPUT_r_m_axi_U->I_RLAST(OUTPUT_r_RLAST);
    kmeans_OUTPUT_r_m_axi_U->I_AWVALID(OUTPUT_r_AWVALID);
    kmeans_OUTPUT_r_m_axi_U->I_AWREADY(OUTPUT_r_AWREADY);
    kmeans_OUTPUT_r_m_axi_U->I_AWADDR(OUTPUT_addr_reg_1483);
    kmeans_OUTPUT_r_m_axi_U->I_AWID(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_AWLEN(ap_var_for_const7);
    kmeans_OUTPUT_r_m_axi_U->I_AWSIZE(ap_var_for_const2);
    kmeans_OUTPUT_r_m_axi_U->I_AWLOCK(ap_var_for_const3);
    kmeans_OUTPUT_r_m_axi_U->I_AWCACHE(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_AWQOS(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_AWPROT(ap_var_for_const2);
    kmeans_OUTPUT_r_m_axi_U->I_AWUSER(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_AWBURST(ap_var_for_const3);
    kmeans_OUTPUT_r_m_axi_U->I_AWREGION(ap_var_for_const4);
    kmeans_OUTPUT_r_m_axi_U->I_WVALID(OUTPUT_r_WVALID);
    kmeans_OUTPUT_r_m_axi_U->I_WREADY(OUTPUT_r_WREADY);
    kmeans_OUTPUT_r_m_axi_U->I_WDATA(cluster_load_reg_1956);
    kmeans_OUTPUT_r_m_axi_U->I_WID(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_WUSER(ap_var_for_const1);
    kmeans_OUTPUT_r_m_axi_U->I_WLAST(ap_var_for_const5);
    kmeans_OUTPUT_r_m_axi_U->I_WSTRB(ap_var_for_const8);
    kmeans_OUTPUT_r_m_axi_U->I_BVALID(OUTPUT_r_BVALID);
    kmeans_OUTPUT_r_m_axi_U->I_BREADY(OUTPUT_r_BREADY);
    kmeans_OUTPUT_r_m_axi_U->I_BRESP(OUTPUT_r_BRESP);
    kmeans_OUTPUT_r_m_axi_U->I_BID(OUTPUT_r_BID);
    kmeans_OUTPUT_r_m_axi_U->I_BUSER(OUTPUT_r_BUSER);
    X_U = new kmeans_X("X_U");
    X_U->clk(ap_clk);
    X_U->reset(ap_rst_n_inv);
    X_U->address0(X_address0);
    X_U->ce0(X_ce0);
    X_U->we0(X_we0);
    X_U->d0(INPUT_addr_1_read_reg_1516);
    X_U->q0(X_q0);
    Y_U = new kmeans_X("Y_U");
    Y_U->clk(ap_clk);
    Y_U->reset(ap_rst_n_inv);
    Y_U->address0(Y_address0);
    Y_U->ce0(Y_ce0);
    Y_U->we0(Y_we0);
    Y_U->d0(INPUT_addr_read_reg_1530);
    Y_U->q0(Y_q0);
    cluster_U = new kmeans_X("cluster_U");
    cluster_U->clk(ap_clk);
    cluster_U->reset(ap_rst_n_inv);
    cluster_U->address0(cluster_address0);
    cluster_U->ce0(cluster_ce0);
    cluster_U->we0(cluster_we0);
    cluster_U->d0(belonging_cluster_in_1_reg_521);
    cluster_U->q0(cluster_q0);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1 = new kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1");
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_626_p0);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din1(reg_689);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->opcode(grp_fu_626_opcode);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->ce(ap_var_for_const0);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_626_p2);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2 = new kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2");
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_630_p0);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->din1(reg_694);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->opcode(grp_fu_630_opcode);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->ce(ap_var_for_const0);
    kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_630_p2);
    kmeans_fdiv_32ns_32ns_32_16_1_U3 = new kmeans_fdiv_32ns_32ns_32_16_1<1,16,32,32,32>("kmeans_fdiv_32ns_32ns_32_16_1_U3");
    kmeans_fdiv_32ns_32ns_32_16_1_U3->clk(ap_clk);
    kmeans_fdiv_32ns_32ns_32_16_1_U3->reset(ap_rst_n_inv);
    kmeans_fdiv_32ns_32ns_32_16_1_U3->din0(grp_fu_636_p0);
    kmeans_fdiv_32ns_32ns_32_16_1_U3->din1(grp_fu_636_p1);
    kmeans_fdiv_32ns_32ns_32_16_1_U3->ce(ap_var_for_const0);
    kmeans_fdiv_32ns_32ns_32_16_1_U3->dout(grp_fu_636_p2);
    kmeans_sitofp_32ns_32_6_1_U4 = new kmeans_sitofp_32ns_32_6_1<1,6,32,32>("kmeans_sitofp_32ns_32_6_1_U4");
    kmeans_sitofp_32ns_32_6_1_U4->clk(ap_clk);
    kmeans_sitofp_32ns_32_6_1_U4->reset(ap_rst_n_inv);
    kmeans_sitofp_32ns_32_6_1_U4->din0(grp_fu_642_p0);
    kmeans_sitofp_32ns_32_6_1_U4->ce(ap_var_for_const0);
    kmeans_sitofp_32ns_32_6_1_U4->dout(grp_fu_642_p1);
    kmeans_fptrunc_64ns_32_2_1_U5 = new kmeans_fptrunc_64ns_32_2_1<1,2,64,32>("kmeans_fptrunc_64ns_32_2_1_U5");
    kmeans_fptrunc_64ns_32_2_1_U5->clk(ap_clk);
    kmeans_fptrunc_64ns_32_2_1_U5->reset(ap_rst_n_inv);
    kmeans_fptrunc_64ns_32_2_1_U5->din0(tmp_i_20_reg_1790);
    kmeans_fptrunc_64ns_32_2_1_U5->ce(ap_var_for_const0);
    kmeans_fptrunc_64ns_32_2_1_U5->dout(grp_fu_647_p1);
    kmeans_fpext_32ns_64_2_1_U6 = new kmeans_fpext_32ns_64_2_1<1,2,32,64>("kmeans_fpext_32ns_64_2_1_U6");
    kmeans_fpext_32ns_64_2_1_U6->clk(ap_clk);
    kmeans_fpext_32ns_64_2_1_U6->reset(ap_rst_n_inv);
    kmeans_fpext_32ns_64_2_1_U6->din0(tmp_i_reg_1760);
    kmeans_fpext_32ns_64_2_1_U6->ce(ap_var_for_const0);
    kmeans_fpext_32ns_64_2_1_U6->dout(grp_fu_650_p1);
    kmeans_fpext_32ns_64_2_1_U7 = new kmeans_fpext_32ns_64_2_1<1,2,32,64>("kmeans_fpext_32ns_64_2_1_U7");
    kmeans_fpext_32ns_64_2_1_U7->clk(ap_clk);
    kmeans_fpext_32ns_64_2_1_U7->reset(ap_rst_n_inv);
    kmeans_fpext_32ns_64_2_1_U7->din0(tmp_7_i_reg_1765);
    kmeans_fpext_32ns_64_2_1_U7->ce(ap_var_for_const0);
    kmeans_fpext_32ns_64_2_1_U7->dout(grp_fu_653_p1);
    kmeans_fcmp_32ns_32ns_1_2_1_U8 = new kmeans_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("kmeans_fcmp_32ns_32ns_1_2_1_U8");
    kmeans_fcmp_32ns_32ns_1_2_1_U8->clk(ap_clk);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->reset(ap_rst_n_inv);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->din0(distance_reg_1795);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->din1(min_distance_0_reg_509);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->ce(ap_var_for_const0);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->opcode(ap_var_for_const9);
    kmeans_fcmp_32ns_32ns_1_2_1_U8->dout(grp_fu_656_p2);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9 = new kmeans_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>("kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9");
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->clk(ap_clk);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->reset(ap_rst_n_inv);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->din0(grp_fu_661_p0);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->din1(grp_fu_661_p1);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->ce(ap_var_for_const0);
    kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9->dout(grp_fu_661_p2);
    kmeans_mux_42_32_1_1_U10 = new kmeans_mux_42_32_1_1<1,1,32,32,32,32,2,32>("kmeans_mux_42_32_1_1_U10");
    kmeans_mux_42_32_1_1_U10->din0(X_prot_3_7_fu_226);
    kmeans_mux_42_32_1_1_U10->din1(X_prot_3_8_fu_230);
    kmeans_mux_42_32_1_1_U10->din2(X_prot_3_9_fu_234);
    kmeans_mux_42_32_1_1_U10->din3(X_prot_3_2_fu_238);
    kmeans_mux_42_32_1_1_U10->din4(trunc_ln45_fu_1003_p1);
    kmeans_mux_42_32_1_1_U10->dout(x1_assign_fu_1007_p6);
    kmeans_mux_42_32_1_1_U11 = new kmeans_mux_42_32_1_1<1,1,32,32,32,32,2,32>("kmeans_mux_42_32_1_1_U11");
    kmeans_mux_42_32_1_1_U11->din0(Y_prot_3_6_fu_242);
    kmeans_mux_42_32_1_1_U11->din1(Y_prot_3_7_fu_246);
    kmeans_mux_42_32_1_1_U11->din2(Y_prot_3_8_fu_250);
    kmeans_mux_42_32_1_1_U11->din3(Y_prot_3_2_fu_254);
    kmeans_mux_42_32_1_1_U11->din4(trunc_ln45_fu_1003_p1);
    kmeans_mux_42_32_1_1_U11->dout(y1_assign_fu_1021_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_INPUT_r_ARADDR);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( INPUT_r_ARREADY );
    sensitive << ( INPUT_addr_reg_1489 );
    sensitive << ( INPUT_addr_2_reg_1495 );
    sensitive << ( INPUT_addr_3_reg_1501 );
    sensitive << ( empty_6_fu_749_p1 );

    SC_METHOD(thread_INPUT_r_ARLEN);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( INPUT_r_ARREADY );

    SC_METHOD(thread_INPUT_r_ARVALID);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( INPUT_r_ARREADY );

    SC_METHOD(thread_INPUT_r_RREADY);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln28_reg_1616 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln27_reg_1559 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_block_pp3_stage0_11001 );

    SC_METHOD(thread_INPUT_r_blk_n_AR);
    sensitive << ( m_axi_INPUT_r_ARREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_INPUT_r_blk_n_R);
    sensitive << ( m_axi_INPUT_r_RVALID );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( icmp_ln28_reg_1616 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( icmp_ln27_reg_1559 );

    SC_METHOD(thread_OUTPUT_r_AWVALID);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( icmp_ln36_fu_957_p2 );
    sensitive << ( ap_block_state41_io );

    SC_METHOD(thread_OUTPUT_r_BREADY);
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_OUTPUT_r_WVALID);
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( icmp_ln75_reg_1942_pp4_iter1_reg );
    sensitive << ( ap_block_pp4_stage0_11001 );

    SC_METHOD(thread_OUTPUT_r_blk_n_AW);
    sensitive << ( m_axi_OUTPUT_r_AWREADY );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( icmp_ln36_fu_957_p2 );

    SC_METHOD(thread_OUTPUT_r_blk_n_B);
    sensitive << ( m_axi_OUTPUT_r_BVALID );
    sensitive << ( ap_CS_fsm_state120 );

    SC_METHOD(thread_OUTPUT_r_blk_n_W);
    sensitive << ( m_axi_OUTPUT_r_WREADY );
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( icmp_ln75_reg_1942_pp4_iter1_reg );

    SC_METHOD(thread_X_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( zext_ln45_fu_981_p1 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln25_fu_807_p1 );
    sensitive << ( zext_ln63_fu_1200_p1 );

    SC_METHOD(thread_X_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_X_clus_1_fu_1231_p3);
    sensitive << ( grp_fu_626_p2 );
    sensitive << ( icmp_ln63_reg_1852 );
    sensitive << ( somme_assign_reg_569 );

    SC_METHOD(thread_X_prot_3_11_fu_1267_p3);
    sensitive << ( icmp_ln70_1_fu_1262_p2 );
    sensitive << ( X_prot_3_2_fu_238 );
    sensitive << ( X_prot_3_fu_1254_p3 );

    SC_METHOD(thread_X_prot_3_12_fu_1280_p3);
    sensitive << ( icmp_ln70_2_fu_1275_p2 );
    sensitive << ( X_prot_3_2_fu_238 );
    sensitive << ( X_prot_3_11_fu_1267_p3 );

    SC_METHOD(thread_X_prot_3_13_fu_1288_p3);
    sensitive << ( icmp_ln70_fu_1249_p2 );
    sensitive << ( X_prot_3_19_reg_593 );
    sensitive << ( X_prot_3_9_fu_234 );

    SC_METHOD(thread_X_prot_3_14_fu_1296_p3);
    sensitive << ( icmp_ln70_1_fu_1262_p2 );
    sensitive << ( X_prot_3_9_fu_234 );
    sensitive << ( X_prot_3_13_fu_1288_p3 );

    SC_METHOD(thread_X_prot_3_15_fu_1304_p3);
    sensitive << ( icmp_ln70_2_fu_1275_p2 );
    sensitive << ( X_prot_3_9_fu_234 );
    sensitive << ( X_prot_3_14_fu_1296_p3 );

    SC_METHOD(thread_X_prot_3_16_fu_1312_p3);
    sensitive << ( icmp_ln70_1_fu_1262_p2 );
    sensitive << ( X_prot_3_19_reg_593 );
    sensitive << ( X_prot_3_8_fu_230 );

    SC_METHOD(thread_X_prot_3_17_fu_1320_p3);
    sensitive << ( icmp_ln70_2_fu_1275_p2 );
    sensitive << ( X_prot_3_8_fu_230 );
    sensitive << ( X_prot_3_16_fu_1312_p3 );

    SC_METHOD(thread_X_prot_3_18_fu_1328_p3);
    sensitive << ( icmp_ln70_2_fu_1275_p2 );
    sensitive << ( X_prot_3_19_reg_593 );
    sensitive << ( X_prot_3_7_fu_226 );

    SC_METHOD(thread_X_prot_3_fu_1254_p3);
    sensitive << ( icmp_ln70_fu_1249_p2 );
    sensitive << ( X_prot_3_19_reg_593 );
    sensitive << ( X_prot_3_2_fu_238 );

    SC_METHOD(thread_X_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln25_reg_1507_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_Y_address0);
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( zext_ln45_fu_981_p1 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( zext_ln26_fu_824_p1 );
    sensitive << ( zext_ln63_fu_1200_p1 );

    SC_METHOD(thread_Y_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_Y_clus_1_fu_1238_p3);
    sensitive << ( grp_fu_630_p2 );
    sensitive << ( icmp_ln63_reg_1852 );
    sensitive << ( somme_assign_1_reg_581 );

    SC_METHOD(thread_Y_prot_3_11_fu_1359_p3);
    sensitive << ( icmp_ln70_1_reg_1897 );
    sensitive << ( Y_prot_3_2_fu_254 );
    sensitive << ( Y_prot_3_fu_1352_p3 );

    SC_METHOD(thread_Y_prot_3_12_fu_1366_p3);
    sensitive << ( icmp_ln70_2_reg_1904 );
    sensitive << ( Y_prot_3_2_fu_254 );
    sensitive << ( Y_prot_3_11_fu_1359_p3 );

    SC_METHOD(thread_Y_prot_3_13_fu_1373_p3);
    sensitive << ( icmp_ln70_reg_1891 );
    sensitive << ( Y_prot_3_19_reg_604 );
    sensitive << ( Y_prot_3_8_fu_250 );

    SC_METHOD(thread_Y_prot_3_14_fu_1380_p3);
    sensitive << ( icmp_ln70_1_reg_1897 );
    sensitive << ( Y_prot_3_8_fu_250 );
    sensitive << ( Y_prot_3_13_fu_1373_p3 );

    SC_METHOD(thread_Y_prot_3_15_fu_1387_p3);
    sensitive << ( icmp_ln70_2_reg_1904 );
    sensitive << ( Y_prot_3_8_fu_250 );
    sensitive << ( Y_prot_3_14_fu_1380_p3 );

    SC_METHOD(thread_Y_prot_3_16_fu_1394_p3);
    sensitive << ( icmp_ln70_1_reg_1897 );
    sensitive << ( Y_prot_3_19_reg_604 );
    sensitive << ( Y_prot_3_7_fu_246 );

    SC_METHOD(thread_Y_prot_3_17_fu_1401_p3);
    sensitive << ( icmp_ln70_2_reg_1904 );
    sensitive << ( Y_prot_3_7_fu_246 );
    sensitive << ( Y_prot_3_16_fu_1394_p3 );

    SC_METHOD(thread_Y_prot_3_18_fu_1408_p3);
    sensitive << ( icmp_ln70_2_reg_1904 );
    sensitive << ( Y_prot_3_19_reg_604 );
    sensitive << ( Y_prot_3_6_fu_242 );

    SC_METHOD(thread_Y_prot_3_fu_1352_p3);
    sensitive << ( icmp_ln70_reg_1891 );
    sensitive << ( Y_prot_3_19_reg_604 );
    sensitive << ( Y_prot_3_2_fu_254 );

    SC_METHOD(thread_Y_we0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln26_reg_1521_pp1_iter1_reg );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_add_ln25_fu_801_p2);
    sensitive << ( ap_phi_mux_phi_ln25_phi_fu_434_p4 );

    SC_METHOD(thread_add_ln26_fu_818_p2);
    sensitive << ( ap_phi_mux_phi_ln26_phi_fu_446_p4 );

    SC_METHOD(thread_add_ln27_fu_835_p2);
    sensitive << ( phi_ln27_reg_454 );

    SC_METHOD(thread_add_ln28_fu_883_p2);
    sensitive << ( phi_ln28_reg_465 );

    SC_METHOD(thread_add_ln75_fu_1441_p2);
    sensitive << ( phi_ln75_reg_615 );

    SC_METHOD(thread_and_ln46_1_fu_1152_p2);
    sensitive << ( and_ln46_fu_1146_p2 );
    sensitive << ( grp_fu_656_p2 );

    SC_METHOD(thread_and_ln46_fu_1146_p2);
    sensitive << ( or_ln46_fu_1122_p2 );
    sensitive << ( or_ln46_1_fu_1140_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln27_reg_1559 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln27_reg_1559 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln28_reg_1616 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln28_reg_1616 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_pp4_stage0);

    SC_METHOD(thread_ap_block_pp4_stage0_01001);

    SC_METHOD(thread_ap_block_pp4_stage0_11001);
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_block_state115_io );

    SC_METHOD(thread_ap_block_pp4_stage0_subdone);
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_block_state115_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state113_pp4_stage0_iter0);

    SC_METHOD(thread_ap_block_state114_pp4_stage0_iter1);

    SC_METHOD(thread_ap_block_state115_io);
    sensitive << ( icmp_ln75_reg_1942_pp4_iter1_reg );
    sensitive << ( OUTPUT_r_WREADY );

    SC_METHOD(thread_ap_block_state115_pp4_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state20_pp1_stage0_iter1);
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state21_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state29_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp2_stage0_iter1);
    sensitive << ( icmp_ln27_reg_1559 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state38_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state39_pp3_stage0_iter1);
    sensitive << ( icmp_ln28_reg_1616 );
    sensitive << ( INPUT_r_RVALID );

    SC_METHOD(thread_ap_block_state41_io);
    sensitive << ( icmp_ln36_fu_957_p2 );
    sensitive << ( OUTPUT_r_AWREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( icmp_ln25_fu_795_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state19);
    sensitive << ( icmp_ln26_fu_812_p2 );

    SC_METHOD(thread_ap_condition_pp4_exit_iter0_state113);
    sensitive << ( icmp_ln75_fu_1435_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_enable_pp4);
    sensitive << ( ap_idle_pp4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_ap_idle_pp4);
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_ap_phi_mux_phi_ln25_phi_fu_434_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln25_reg_1507 );
    sensitive << ( phi_ln25_reg_430 );
    sensitive << ( add_ln25_reg_1511 );

    SC_METHOD(thread_ap_phi_mux_phi_ln26_phi_fu_446_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln26_reg_1521 );
    sensitive << ( phi_ln26_reg_442 );
    sensitive << ( add_ln26_reg_1525 );

    SC_METHOD(thread_ap_phi_mux_taille_assign_phi_fu_561_p4);
    sensitive << ( taille_assign_reg_557 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( OUTPUT_r_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_belonging_cluster_in_2_fu_1165_p3);
    sensitive << ( zext_ln43_reg_1737 );
    sensitive << ( belonging_cluster_in_1_reg_521 );
    sensitive << ( and_ln46_1_fu_1152_p2 );

    SC_METHOD(thread_bitcast_ln46_1_fu_1092_p1);
    sensitive << ( min_distance_0_reg_509 );

    SC_METHOD(thread_bitcast_ln46_fu_1075_p1);
    sensitive << ( distance_reg_1795 );

    SC_METHOD(thread_cluster_address0);
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( zext_ln45_reg_1722 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( zext_ln63_fu_1200_p1 );
    sensitive << ( zext_ln75_fu_1447_p1 );

    SC_METHOD(thread_cluster_ce0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );

    SC_METHOD(thread_cluster_we0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( icmp_ln43_fu_991_p2 );

    SC_METHOD(thread_empty_5_fu_768_p1);
    sensitive << ( in_Y7_reg_1457 );

    SC_METHOD(thread_empty_6_fu_749_p1);
    sensitive << ( in_X5_reg_1462 );

    SC_METHOD(thread_empty_7_fu_777_p1);
    sensitive << ( in_Y_prot3_reg_1467 );

    SC_METHOD(thread_empty_8_fu_786_p1);
    sensitive << ( in_X_prot1_reg_1472 );

    SC_METHOD(thread_empty_fu_759_p1);
    sensitive << ( out_cluster9_reg_1452 );

    SC_METHOD(thread_grp_fu_626_opcode);
    sensitive << ( icmp_ln63_reg_1852 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_grp_fu_626_p0);
    sensitive << ( x1_assign_reg_1750 );
    sensitive << ( somme_assign_reg_569 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_grp_fu_630_opcode);
    sensitive << ( icmp_ln63_reg_1852 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_grp_fu_630_p0);
    sensitive << ( y1_assign_reg_1755 );
    sensitive << ( somme_assign_1_reg_581 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state64 );

    SC_METHOD(thread_grp_fu_636_p0);
    sensitive << ( somme_assign_reg_569 );
    sensitive << ( somme_assign_1_reg_581 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state96 );

    SC_METHOD(thread_grp_fu_636_p1);
    sensitive << ( tmp_i1_reg_1874 );
    sensitive << ( tmp_i2_reg_1932 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state96 );

    SC_METHOD(thread_grp_fu_642_p0);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_phi_mux_taille_assign_phi_fu_561_p4 );
    sensitive << ( taille_assign_reg_557 );

    SC_METHOD(thread_grp_fu_661_p0);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( p_Result_s_fu_1051_p3 );

    SC_METHOD(thread_grp_fu_661_p1);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( p_Result_1_fu_1063_p3 );

    SC_METHOD(thread_i_2_fu_1182_p2);
    sensitive << ( i_1_reg_534 );

    SC_METHOD(thread_i_fu_997_p2);
    sensitive << ( belonging_cluster_in_reg_498 );

    SC_METHOD(thread_icmp_ln25_fu_795_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_phi_ln25_phi_fu_434_p4 );

    SC_METHOD(thread_icmp_ln26_fu_812_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_phi_ln26_phi_fu_446_p4 );

    SC_METHOD(thread_icmp_ln27_fu_829_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( phi_ln27_reg_454 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_icmp_ln28_fu_877_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( phi_ln28_reg_465 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_icmp_ln36_fu_957_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_block_state41_io );
    sensitive << ( it_0_reg_476 );

    SC_METHOD(thread_icmp_ln38_fu_969_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( j_0_reg_487 );

    SC_METHOD(thread_icmp_ln43_fu_991_p2);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( belonging_cluster_in_reg_498 );

    SC_METHOD(thread_icmp_ln46_1_fu_1116_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( trunc_ln46_fu_1088_p1 );

    SC_METHOD(thread_icmp_ln46_2_fu_1128_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( tmp_6_fu_1096_p4 );

    SC_METHOD(thread_icmp_ln46_3_fu_1134_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( trunc_ln46_1_fu_1106_p1 );

    SC_METHOD(thread_icmp_ln46_fu_1110_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( tmp_fu_1078_p4 );

    SC_METHOD(thread_icmp_ln56_fu_1176_p2);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( i_1_reg_534 );

    SC_METHOD(thread_icmp_ln62_fu_1188_p2);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( j_1_reg_546 );

    SC_METHOD(thread_icmp_ln63_fu_1213_p2);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( zext_ln56_reg_1812 );
    sensitive << ( cluster_q0 );

    SC_METHOD(thread_icmp_ln70_1_fu_1262_p2);
    sensitive << ( trunc_ln70_reg_1884 );
    sensitive << ( ap_CS_fsm_state90 );

    SC_METHOD(thread_icmp_ln70_2_fu_1275_p2);
    sensitive << ( trunc_ln70_reg_1884 );
    sensitive << ( ap_CS_fsm_state90 );

    SC_METHOD(thread_icmp_ln70_fu_1249_p2);
    sensitive << ( trunc_ln70_reg_1884 );
    sensitive << ( ap_CS_fsm_state90 );

    SC_METHOD(thread_icmp_ln75_fu_1435_p2);
    sensitive << ( phi_ln75_reg_615 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );

    SC_METHOD(thread_icmp_ln90_fu_1207_p2);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( icmp_ln62_fu_1188_p2 );
    sensitive << ( taille_assign_reg_557 );

    SC_METHOD(thread_it_fu_963_p2);
    sensitive << ( it_0_reg_476 );

    SC_METHOD(thread_j_2_fu_1194_p2);
    sensitive << ( j_1_reg_546 );

    SC_METHOD(thread_j_fu_975_p2);
    sensitive << ( j_0_reg_487 );

    SC_METHOD(thread_min_distance_1_fu_1158_p3);
    sensitive << ( distance_reg_1795 );
    sensitive << ( min_distance_0_reg_509 );
    sensitive << ( and_ln46_1_fu_1152_p2 );

    SC_METHOD(thread_or_ln46_1_fu_1140_p2);
    sensitive << ( icmp_ln46_3_fu_1134_p2 );
    sensitive << ( icmp_ln46_2_fu_1128_p2 );

    SC_METHOD(thread_or_ln46_fu_1122_p2);
    sensitive << ( icmp_ln46_1_fu_1116_p2 );
    sensitive << ( icmp_ln46_fu_1110_p2 );

    SC_METHOD(thread_p_Result_1_fu_1063_p3);
    sensitive << ( trunc_ln368_1_reg_1775 );

    SC_METHOD(thread_p_Result_s_fu_1051_p3);
    sensitive << ( trunc_ln368_reg_1770 );

    SC_METHOD(thread_p_Val2_1_fu_1043_p1);
    sensitive << ( grp_fu_653_p1 );

    SC_METHOD(thread_p_Val2_s_fu_1035_p1);
    sensitive << ( grp_fu_650_p1 );

    SC_METHOD(thread_size_1_fu_1224_p3);
    sensitive << ( icmp_ln63_reg_1852 );
    sensitive << ( taille_assign_reg_557 );
    sensitive << ( size_fu_1218_p2 );

    SC_METHOD(thread_size_fu_1218_p2);
    sensitive << ( taille_assign_reg_557 );

    SC_METHOD(thread_tmp_6_fu_1096_p4);
    sensitive << ( bitcast_ln46_1_fu_1092_p1 );

    SC_METHOD(thread_tmp_fu_1078_p4);
    sensitive << ( bitcast_ln46_fu_1075_p1 );

    SC_METHOD(thread_trunc_ln27_fu_841_p1);
    sensitive << ( phi_ln27_reg_454 );

    SC_METHOD(thread_trunc_ln28_fu_889_p1);
    sensitive << ( phi_ln28_reg_465 );

    SC_METHOD(thread_trunc_ln368_1_fu_1047_p1);
    sensitive << ( p_Val2_1_fu_1043_p1 );

    SC_METHOD(thread_trunc_ln368_fu_1039_p1);
    sensitive << ( p_Val2_s_fu_1035_p1 );

    SC_METHOD(thread_trunc_ln45_fu_1003_p1);
    sensitive << ( belonging_cluster_in_reg_498 );

    SC_METHOD(thread_trunc_ln46_1_fu_1106_p1);
    sensitive << ( bitcast_ln46_1_fu_1092_p1 );

    SC_METHOD(thread_trunc_ln46_fu_1088_p1);
    sensitive << ( bitcast_ln46_fu_1075_p1 );

    SC_METHOD(thread_trunc_ln70_fu_1245_p1);
    sensitive << ( i_1_reg_534 );

    SC_METHOD(thread_zext_ln25_fu_807_p1);
    sensitive << ( phi_ln25_reg_430_pp0_iter1_reg );

    SC_METHOD(thread_zext_ln26_fu_824_p1);
    sensitive << ( phi_ln26_reg_442_pp1_iter1_reg );

    SC_METHOD(thread_zext_ln43_fu_987_p1);
    sensitive << ( belonging_cluster_in_reg_498 );

    SC_METHOD(thread_zext_ln45_fu_981_p1);
    sensitive << ( j_0_reg_487 );

    SC_METHOD(thread_zext_ln56_fu_1172_p1);
    sensitive << ( i_1_reg_534 );

    SC_METHOD(thread_zext_ln63_fu_1200_p1);
    sensitive << ( j_1_reg_546 );

    SC_METHOD(thread_zext_ln75_fu_1447_p1);
    sensitive << ( phi_ln75_reg_615 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( icmp_ln36_fu_957_p2 );
    sensitive << ( ap_enable_reg_pp4_iter2 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( INPUT_r_ARREADY );
    sensitive << ( OUTPUT_r_BVALID );
    sensitive << ( icmp_ln25_fu_795_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln26_fu_812_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_state41_io );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln38_fu_969_p2 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( icmp_ln43_fu_991_p2 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( icmp_ln62_fu_1188_p2 );
    sensitive << ( icmp_ln90_fu_1207_p2 );
    sensitive << ( icmp_ln90_reg_1848 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( icmp_ln75_fu_1435_p2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_block_pp4_stage0_subdone );
    sensitive << ( icmp_ln56_fu_1176_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kmeans_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWVALID, "(port)m_axi_INPUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWREADY, "(port)m_axi_INPUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWADDR, "(port)m_axi_INPUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWID, "(port)m_axi_INPUT_r_AWID");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWLEN, "(port)m_axi_INPUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWSIZE, "(port)m_axi_INPUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWBURST, "(port)m_axi_INPUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWLOCK, "(port)m_axi_INPUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWCACHE, "(port)m_axi_INPUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWPROT, "(port)m_axi_INPUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWQOS, "(port)m_axi_INPUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWREGION, "(port)m_axi_INPUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_INPUT_r_AWUSER, "(port)m_axi_INPUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_WVALID, "(port)m_axi_INPUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_WREADY, "(port)m_axi_INPUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_WDATA, "(port)m_axi_INPUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_INPUT_r_WSTRB, "(port)m_axi_INPUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_INPUT_r_WLAST, "(port)m_axi_INPUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_INPUT_r_WID, "(port)m_axi_INPUT_r_WID");
    sc_trace(mVcdFile, m_axi_INPUT_r_WUSER, "(port)m_axi_INPUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARVALID, "(port)m_axi_INPUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARREADY, "(port)m_axi_INPUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARADDR, "(port)m_axi_INPUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARID, "(port)m_axi_INPUT_r_ARID");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARLEN, "(port)m_axi_INPUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARSIZE, "(port)m_axi_INPUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARBURST, "(port)m_axi_INPUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARLOCK, "(port)m_axi_INPUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARCACHE, "(port)m_axi_INPUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARPROT, "(port)m_axi_INPUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARQOS, "(port)m_axi_INPUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARREGION, "(port)m_axi_INPUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_INPUT_r_ARUSER, "(port)m_axi_INPUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_RVALID, "(port)m_axi_INPUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_RREADY, "(port)m_axi_INPUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_RDATA, "(port)m_axi_INPUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_INPUT_r_RLAST, "(port)m_axi_INPUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_INPUT_r_RID, "(port)m_axi_INPUT_r_RID");
    sc_trace(mVcdFile, m_axi_INPUT_r_RUSER, "(port)m_axi_INPUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_INPUT_r_RRESP, "(port)m_axi_INPUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_INPUT_r_BVALID, "(port)m_axi_INPUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_INPUT_r_BREADY, "(port)m_axi_INPUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_INPUT_r_BRESP, "(port)m_axi_INPUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_INPUT_r_BID, "(port)m_axi_INPUT_r_BID");
    sc_trace(mVcdFile, m_axi_INPUT_r_BUSER, "(port)m_axi_INPUT_r_BUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWVALID, "(port)m_axi_OUTPUT_r_AWVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWREADY, "(port)m_axi_OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWADDR, "(port)m_axi_OUTPUT_r_AWADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWID, "(port)m_axi_OUTPUT_r_AWID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWLEN, "(port)m_axi_OUTPUT_r_AWLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWSIZE, "(port)m_axi_OUTPUT_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWBURST, "(port)m_axi_OUTPUT_r_AWBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWLOCK, "(port)m_axi_OUTPUT_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWCACHE, "(port)m_axi_OUTPUT_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWPROT, "(port)m_axi_OUTPUT_r_AWPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWQOS, "(port)m_axi_OUTPUT_r_AWQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWREGION, "(port)m_axi_OUTPUT_r_AWREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_AWUSER, "(port)m_axi_OUTPUT_r_AWUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WVALID, "(port)m_axi_OUTPUT_r_WVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WREADY, "(port)m_axi_OUTPUT_r_WREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WDATA, "(port)m_axi_OUTPUT_r_WDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WSTRB, "(port)m_axi_OUTPUT_r_WSTRB");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WLAST, "(port)m_axi_OUTPUT_r_WLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WID, "(port)m_axi_OUTPUT_r_WID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_WUSER, "(port)m_axi_OUTPUT_r_WUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARVALID, "(port)m_axi_OUTPUT_r_ARVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARREADY, "(port)m_axi_OUTPUT_r_ARREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARADDR, "(port)m_axi_OUTPUT_r_ARADDR");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARID, "(port)m_axi_OUTPUT_r_ARID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARLEN, "(port)m_axi_OUTPUT_r_ARLEN");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARSIZE, "(port)m_axi_OUTPUT_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARBURST, "(port)m_axi_OUTPUT_r_ARBURST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARLOCK, "(port)m_axi_OUTPUT_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARCACHE, "(port)m_axi_OUTPUT_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARPROT, "(port)m_axi_OUTPUT_r_ARPROT");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARQOS, "(port)m_axi_OUTPUT_r_ARQOS");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARREGION, "(port)m_axi_OUTPUT_r_ARREGION");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_ARUSER, "(port)m_axi_OUTPUT_r_ARUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RVALID, "(port)m_axi_OUTPUT_r_RVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RREADY, "(port)m_axi_OUTPUT_r_RREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RDATA, "(port)m_axi_OUTPUT_r_RDATA");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RLAST, "(port)m_axi_OUTPUT_r_RLAST");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RID, "(port)m_axi_OUTPUT_r_RID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RUSER, "(port)m_axi_OUTPUT_r_RUSER");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_RRESP, "(port)m_axi_OUTPUT_r_RRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BVALID, "(port)m_axi_OUTPUT_r_BVALID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BREADY, "(port)m_axi_OUTPUT_r_BREADY");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BRESP, "(port)m_axi_OUTPUT_r_BRESP");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BID, "(port)m_axi_OUTPUT_r_BID");
    sc_trace(mVcdFile, m_axi_OUTPUT_r_BUSER, "(port)m_axi_OUTPUT_r_BUSER");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWVALID, "(port)s_axi_CONTROL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWREADY, "(port)s_axi_CONTROL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWADDR, "(port)s_axi_CONTROL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WVALID, "(port)s_axi_CONTROL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WREADY, "(port)s_axi_CONTROL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WDATA, "(port)s_axi_CONTROL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WSTRB, "(port)s_axi_CONTROL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARVALID, "(port)s_axi_CONTROL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARREADY, "(port)s_axi_CONTROL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARADDR, "(port)s_axi_CONTROL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RVALID, "(port)s_axi_CONTROL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RREADY, "(port)s_axi_CONTROL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RDATA, "(port)s_axi_CONTROL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RRESP, "(port)s_axi_CONTROL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BVALID, "(port)s_axi_CONTROL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BREADY, "(port)s_axi_CONTROL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BRESP, "(port)s_axi_CONTROL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_X_prot, "in_X_prot");
    sc_trace(mVcdFile, in_Y_prot, "in_Y_prot");
    sc_trace(mVcdFile, in_X, "in_X");
    sc_trace(mVcdFile, in_Y, "in_Y");
    sc_trace(mVcdFile, out_cluster, "out_cluster");
    sc_trace(mVcdFile, INPUT_r_blk_n_AR, "INPUT_r_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, INPUT_r_blk_n_R, "INPUT_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln26_reg_1521, "icmp_ln26_reg_1521");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln25_reg_1507, "icmp_ln25_reg_1507");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, icmp_ln28_reg_1616, "icmp_ln28_reg_1616");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, icmp_ln27_reg_1559, "icmp_ln27_reg_1559");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_AW, "OUTPUT_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, icmp_ln36_fu_957_p2, "icmp_ln36_fu_957_p2");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_W, "OUTPUT_r_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter2, "ap_enable_reg_pp4_iter2");
    sc_trace(mVcdFile, ap_block_pp4_stage0, "ap_block_pp4_stage0");
    sc_trace(mVcdFile, icmp_ln75_reg_1942, "icmp_ln75_reg_1942");
    sc_trace(mVcdFile, icmp_ln75_reg_1942_pp4_iter1_reg, "icmp_ln75_reg_1942_pp4_iter1_reg");
    sc_trace(mVcdFile, OUTPUT_r_blk_n_B, "OUTPUT_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state120, "ap_CS_fsm_state120");
    sc_trace(mVcdFile, INPUT_r_AWREADY, "INPUT_r_AWREADY");
    sc_trace(mVcdFile, INPUT_r_WREADY, "INPUT_r_WREADY");
    sc_trace(mVcdFile, INPUT_r_ARVALID, "INPUT_r_ARVALID");
    sc_trace(mVcdFile, INPUT_r_ARREADY, "INPUT_r_ARREADY");
    sc_trace(mVcdFile, INPUT_r_ARADDR, "INPUT_r_ARADDR");
    sc_trace(mVcdFile, INPUT_r_ARLEN, "INPUT_r_ARLEN");
    sc_trace(mVcdFile, INPUT_r_RVALID, "INPUT_r_RVALID");
    sc_trace(mVcdFile, INPUT_r_RREADY, "INPUT_r_RREADY");
    sc_trace(mVcdFile, INPUT_r_RDATA, "INPUT_r_RDATA");
    sc_trace(mVcdFile, INPUT_r_RLAST, "INPUT_r_RLAST");
    sc_trace(mVcdFile, INPUT_r_RID, "INPUT_r_RID");
    sc_trace(mVcdFile, INPUT_r_RUSER, "INPUT_r_RUSER");
    sc_trace(mVcdFile, INPUT_r_RRESP, "INPUT_r_RRESP");
    sc_trace(mVcdFile, INPUT_r_BVALID, "INPUT_r_BVALID");
    sc_trace(mVcdFile, INPUT_r_BRESP, "INPUT_r_BRESP");
    sc_trace(mVcdFile, INPUT_r_BID, "INPUT_r_BID");
    sc_trace(mVcdFile, INPUT_r_BUSER, "INPUT_r_BUSER");
    sc_trace(mVcdFile, OUTPUT_r_AWVALID, "OUTPUT_r_AWVALID");
    sc_trace(mVcdFile, OUTPUT_r_AWREADY, "OUTPUT_r_AWREADY");
    sc_trace(mVcdFile, OUTPUT_r_WVALID, "OUTPUT_r_WVALID");
    sc_trace(mVcdFile, OUTPUT_r_WREADY, "OUTPUT_r_WREADY");
    sc_trace(mVcdFile, OUTPUT_r_ARREADY, "OUTPUT_r_ARREADY");
    sc_trace(mVcdFile, OUTPUT_r_RVALID, "OUTPUT_r_RVALID");
    sc_trace(mVcdFile, OUTPUT_r_RDATA, "OUTPUT_r_RDATA");
    sc_trace(mVcdFile, OUTPUT_r_RLAST, "OUTPUT_r_RLAST");
    sc_trace(mVcdFile, OUTPUT_r_RID, "OUTPUT_r_RID");
    sc_trace(mVcdFile, OUTPUT_r_RUSER, "OUTPUT_r_RUSER");
    sc_trace(mVcdFile, OUTPUT_r_RRESP, "OUTPUT_r_RRESP");
    sc_trace(mVcdFile, OUTPUT_r_BVALID, "OUTPUT_r_BVALID");
    sc_trace(mVcdFile, OUTPUT_r_BREADY, "OUTPUT_r_BREADY");
    sc_trace(mVcdFile, OUTPUT_r_BRESP, "OUTPUT_r_BRESP");
    sc_trace(mVcdFile, OUTPUT_r_BID, "OUTPUT_r_BID");
    sc_trace(mVcdFile, OUTPUT_r_BUSER, "OUTPUT_r_BUSER");
    sc_trace(mVcdFile, phi_ln25_reg_430, "phi_ln25_reg_430");
    sc_trace(mVcdFile, phi_ln25_reg_430_pp0_iter1_reg, "phi_ln25_reg_430_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, phi_ln26_reg_442, "phi_ln26_reg_442");
    sc_trace(mVcdFile, phi_ln26_reg_442_pp1_iter1_reg, "phi_ln26_reg_442_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter0, "ap_block_state19_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage0_iter1, "ap_block_state20_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage0_iter2, "ap_block_state21_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, phi_ln27_reg_454, "phi_ln27_reg_454");
    sc_trace(mVcdFile, phi_ln28_reg_465, "phi_ln28_reg_465");
    sc_trace(mVcdFile, phi_ln75_reg_615, "phi_ln75_reg_615");
    sc_trace(mVcdFile, X_q0, "X_q0");
    sc_trace(mVcdFile, reg_689, "reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, Y_q0, "Y_q0");
    sc_trace(mVcdFile, reg_694, "reg_694");
    sc_trace(mVcdFile, out_cluster9_reg_1452, "out_cluster9_reg_1452");
    sc_trace(mVcdFile, in_Y7_reg_1457, "in_Y7_reg_1457");
    sc_trace(mVcdFile, in_X5_reg_1462, "in_X5_reg_1462");
    sc_trace(mVcdFile, in_Y_prot3_reg_1467, "in_Y_prot3_reg_1467");
    sc_trace(mVcdFile, in_X_prot1_reg_1472, "in_X_prot1_reg_1472");
    sc_trace(mVcdFile, OUTPUT_addr_reg_1483, "OUTPUT_addr_reg_1483");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, INPUT_addr_reg_1489, "INPUT_addr_reg_1489");
    sc_trace(mVcdFile, INPUT_addr_2_reg_1495, "INPUT_addr_2_reg_1495");
    sc_trace(mVcdFile, INPUT_addr_3_reg_1501, "INPUT_addr_3_reg_1501");
    sc_trace(mVcdFile, icmp_ln25_fu_795_p2, "icmp_ln25_fu_795_p2");
    sc_trace(mVcdFile, icmp_ln25_reg_1507_pp0_iter1_reg, "icmp_ln25_reg_1507_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln25_fu_801_p2, "add_ln25_fu_801_p2");
    sc_trace(mVcdFile, add_ln25_reg_1511, "add_ln25_reg_1511");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, INPUT_addr_1_read_reg_1516, "INPUT_addr_1_read_reg_1516");
    sc_trace(mVcdFile, icmp_ln26_fu_812_p2, "icmp_ln26_fu_812_p2");
    sc_trace(mVcdFile, icmp_ln26_reg_1521_pp1_iter1_reg, "icmp_ln26_reg_1521_pp1_iter1_reg");
    sc_trace(mVcdFile, add_ln26_fu_818_p2, "add_ln26_fu_818_p2");
    sc_trace(mVcdFile, add_ln26_reg_1525, "add_ln26_reg_1525");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, INPUT_addr_read_reg_1530, "INPUT_addr_read_reg_1530");
    sc_trace(mVcdFile, icmp_ln27_fu_829_p2, "icmp_ln27_fu_829_p2");
    sc_trace(mVcdFile, ap_block_state29_pp2_stage0_iter0, "ap_block_state29_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state30_pp2_stage0_iter1, "ap_block_state30_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, add_ln27_fu_835_p2, "add_ln27_fu_835_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, trunc_ln27_fu_841_p1, "trunc_ln27_fu_841_p1");
    sc_trace(mVcdFile, trunc_ln27_reg_1568, "trunc_ln27_reg_1568");
    sc_trace(mVcdFile, X_prot_3_1_load_reg_1572, "X_prot_3_1_load_reg_1572");
    sc_trace(mVcdFile, X_prot_3_3_load_reg_1577, "X_prot_3_3_load_reg_1577");
    sc_trace(mVcdFile, X_prot_3_4_load_reg_1582, "X_prot_3_4_load_reg_1582");
    sc_trace(mVcdFile, X_prot_3_5_load_reg_1587, "X_prot_3_5_load_reg_1587");
    sc_trace(mVcdFile, icmp_ln28_fu_877_p2, "icmp_ln28_fu_877_p2");
    sc_trace(mVcdFile, ap_block_state38_pp3_stage0_iter0, "ap_block_state38_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state39_pp3_stage0_iter1, "ap_block_state39_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, add_ln28_fu_883_p2, "add_ln28_fu_883_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, trunc_ln28_fu_889_p1, "trunc_ln28_fu_889_p1");
    sc_trace(mVcdFile, trunc_ln28_reg_1625, "trunc_ln28_reg_1625");
    sc_trace(mVcdFile, Y_prot_3_1_load_reg_1629, "Y_prot_3_1_load_reg_1629");
    sc_trace(mVcdFile, Y_prot_3_3_load_reg_1634, "Y_prot_3_3_load_reg_1634");
    sc_trace(mVcdFile, Y_prot_3_4_load_reg_1639, "Y_prot_3_4_load_reg_1639");
    sc_trace(mVcdFile, Y_prot_3_5_load_reg_1644, "Y_prot_3_5_load_reg_1644");
    sc_trace(mVcdFile, ap_block_state41_io, "ap_block_state41_io");
    sc_trace(mVcdFile, it_fu_963_p2, "it_fu_963_p2");
    sc_trace(mVcdFile, it_reg_1709, "it_reg_1709");
    sc_trace(mVcdFile, j_fu_975_p2, "j_fu_975_p2");
    sc_trace(mVcdFile, j_reg_1717, "j_reg_1717");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, zext_ln45_fu_981_p1, "zext_ln45_fu_981_p1");
    sc_trace(mVcdFile, zext_ln45_reg_1722, "zext_ln45_reg_1722");
    sc_trace(mVcdFile, icmp_ln38_fu_969_p2, "icmp_ln38_fu_969_p2");
    sc_trace(mVcdFile, zext_ln43_fu_987_p1, "zext_ln43_fu_987_p1");
    sc_trace(mVcdFile, zext_ln43_reg_1737, "zext_ln43_reg_1737");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, i_fu_997_p2, "i_fu_997_p2");
    sc_trace(mVcdFile, i_reg_1745, "i_reg_1745");
    sc_trace(mVcdFile, x1_assign_fu_1007_p6, "x1_assign_fu_1007_p6");
    sc_trace(mVcdFile, x1_assign_reg_1750, "x1_assign_reg_1750");
    sc_trace(mVcdFile, icmp_ln43_fu_991_p2, "icmp_ln43_fu_991_p2");
    sc_trace(mVcdFile, y1_assign_fu_1021_p6, "y1_assign_fu_1021_p6");
    sc_trace(mVcdFile, y1_assign_reg_1755, "y1_assign_reg_1755");
    sc_trace(mVcdFile, grp_fu_626_p2, "grp_fu_626_p2");
    sc_trace(mVcdFile, tmp_i_reg_1760, "tmp_i_reg_1760");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_fu_630_p2, "grp_fu_630_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_1765, "tmp_7_i_reg_1765");
    sc_trace(mVcdFile, trunc_ln368_fu_1039_p1, "trunc_ln368_fu_1039_p1");
    sc_trace(mVcdFile, trunc_ln368_reg_1770, "trunc_ln368_reg_1770");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, trunc_ln368_1_fu_1047_p1, "trunc_ln368_1_fu_1047_p1");
    sc_trace(mVcdFile, trunc_ln368_1_reg_1775, "trunc_ln368_1_reg_1775");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, grp_fu_661_p2, "grp_fu_661_p2");
    sc_trace(mVcdFile, tmp_i_20_reg_1790, "tmp_i_20_reg_1790");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, grp_fu_647_p1, "grp_fu_647_p1");
    sc_trace(mVcdFile, distance_reg_1795, "distance_reg_1795");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, min_distance_1_fu_1158_p3, "min_distance_1_fu_1158_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, belonging_cluster_in_2_fu_1165_p3, "belonging_cluster_in_2_fu_1165_p3");
    sc_trace(mVcdFile, zext_ln56_fu_1172_p1, "zext_ln56_fu_1172_p1");
    sc_trace(mVcdFile, zext_ln56_reg_1812, "zext_ln56_reg_1812");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, i_2_fu_1182_p2, "i_2_fu_1182_p2");
    sc_trace(mVcdFile, i_2_reg_1820, "i_2_reg_1820");
    sc_trace(mVcdFile, j_2_fu_1194_p2, "j_2_fu_1194_p2");
    sc_trace(mVcdFile, j_2_reg_1828, "j_2_reg_1828");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, icmp_ln62_fu_1188_p2, "icmp_ln62_fu_1188_p2");
    sc_trace(mVcdFile, icmp_ln90_fu_1207_p2, "icmp_ln90_fu_1207_p2");
    sc_trace(mVcdFile, icmp_ln90_reg_1848, "icmp_ln90_reg_1848");
    sc_trace(mVcdFile, icmp_ln63_fu_1213_p2, "icmp_ln63_fu_1213_p2");
    sc_trace(mVcdFile, icmp_ln63_reg_1852, "icmp_ln63_reg_1852");
    sc_trace(mVcdFile, size_1_fu_1224_p3, "size_1_fu_1224_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, X_clus_1_fu_1231_p3, "X_clus_1_fu_1231_p3");
    sc_trace(mVcdFile, Y_clus_1_fu_1238_p3, "Y_clus_1_fu_1238_p3");
    sc_trace(mVcdFile, grp_fu_642_p1, "grp_fu_642_p1");
    sc_trace(mVcdFile, tmp_i1_reg_1874, "tmp_i1_reg_1874");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, grp_fu_636_p2, "grp_fu_636_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, trunc_ln70_fu_1245_p1, "trunc_ln70_fu_1245_p1");
    sc_trace(mVcdFile, trunc_ln70_reg_1884, "trunc_ln70_reg_1884");
    sc_trace(mVcdFile, icmp_ln70_fu_1249_p2, "icmp_ln70_fu_1249_p2");
    sc_trace(mVcdFile, icmp_ln70_reg_1891, "icmp_ln70_reg_1891");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, icmp_ln70_1_fu_1262_p2, "icmp_ln70_1_fu_1262_p2");
    sc_trace(mVcdFile, icmp_ln70_1_reg_1897, "icmp_ln70_1_reg_1897");
    sc_trace(mVcdFile, icmp_ln70_2_fu_1275_p2, "icmp_ln70_2_fu_1275_p2");
    sc_trace(mVcdFile, icmp_ln70_2_reg_1904, "icmp_ln70_2_reg_1904");
    sc_trace(mVcdFile, X_prot_3_12_fu_1280_p3, "X_prot_3_12_fu_1280_p3");
    sc_trace(mVcdFile, X_prot_3_12_reg_1912, "X_prot_3_12_reg_1912");
    sc_trace(mVcdFile, X_prot_3_15_fu_1304_p3, "X_prot_3_15_fu_1304_p3");
    sc_trace(mVcdFile, X_prot_3_15_reg_1917, "X_prot_3_15_reg_1917");
    sc_trace(mVcdFile, X_prot_3_17_fu_1320_p3, "X_prot_3_17_fu_1320_p3");
    sc_trace(mVcdFile, X_prot_3_17_reg_1922, "X_prot_3_17_reg_1922");
    sc_trace(mVcdFile, X_prot_3_18_fu_1328_p3, "X_prot_3_18_fu_1328_p3");
    sc_trace(mVcdFile, X_prot_3_18_reg_1927, "X_prot_3_18_reg_1927");
    sc_trace(mVcdFile, tmp_i2_reg_1932, "tmp_i2_reg_1932");
    sc_trace(mVcdFile, ap_CS_fsm_state95, "ap_CS_fsm_state95");
    sc_trace(mVcdFile, ap_CS_fsm_state111, "ap_CS_fsm_state111");
    sc_trace(mVcdFile, icmp_ln75_fu_1435_p2, "icmp_ln75_fu_1435_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage0, "ap_CS_fsm_pp4_stage0");
    sc_trace(mVcdFile, ap_block_state113_pp4_stage0_iter0, "ap_block_state113_pp4_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state114_pp4_stage0_iter1, "ap_block_state114_pp4_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state115_pp4_stage0_iter2, "ap_block_state115_pp4_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state115_io, "ap_block_state115_io");
    sc_trace(mVcdFile, ap_block_pp4_stage0_11001, "ap_block_pp4_stage0_11001");
    sc_trace(mVcdFile, add_ln75_fu_1441_p2, "add_ln75_fu_1441_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter0, "ap_enable_reg_pp4_iter0");
    sc_trace(mVcdFile, cluster_q0, "cluster_q0");
    sc_trace(mVcdFile, cluster_load_reg_1956, "cluster_load_reg_1956");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter1, "ap_enable_reg_pp4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state19, "ap_condition_pp1_exit_iter0_state19");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp4_stage0_subdone, "ap_block_pp4_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp4_exit_iter0_state113, "ap_condition_pp4_exit_iter0_state113");
    sc_trace(mVcdFile, X_address0, "X_address0");
    sc_trace(mVcdFile, X_ce0, "X_ce0");
    sc_trace(mVcdFile, X_we0, "X_we0");
    sc_trace(mVcdFile, Y_address0, "Y_address0");
    sc_trace(mVcdFile, Y_ce0, "Y_ce0");
    sc_trace(mVcdFile, Y_we0, "Y_we0");
    sc_trace(mVcdFile, cluster_address0, "cluster_address0");
    sc_trace(mVcdFile, cluster_ce0, "cluster_ce0");
    sc_trace(mVcdFile, cluster_we0, "cluster_we0");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln25_phi_fu_434_p4, "ap_phi_mux_phi_ln25_phi_fu_434_p4");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln26_phi_fu_446_p4, "ap_phi_mux_phi_ln26_phi_fu_446_p4");
    sc_trace(mVcdFile, it_0_reg_476, "it_0_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, icmp_ln56_fu_1176_p2, "icmp_ln56_fu_1176_p2");
    sc_trace(mVcdFile, j_0_reg_487, "j_0_reg_487");
    sc_trace(mVcdFile, belonging_cluster_in_reg_498, "belonging_cluster_in_reg_498");
    sc_trace(mVcdFile, min_distance_0_reg_509, "min_distance_0_reg_509");
    sc_trace(mVcdFile, belonging_cluster_in_1_reg_521, "belonging_cluster_in_1_reg_521");
    sc_trace(mVcdFile, i_1_reg_534, "i_1_reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_state112, "ap_CS_fsm_state112");
    sc_trace(mVcdFile, j_1_reg_546, "j_1_reg_546");
    sc_trace(mVcdFile, ap_phi_mux_taille_assign_phi_fu_561_p4, "ap_phi_mux_taille_assign_phi_fu_561_p4");
    sc_trace(mVcdFile, taille_assign_reg_557, "taille_assign_reg_557");
    sc_trace(mVcdFile, somme_assign_reg_569, "somme_assign_reg_569");
    sc_trace(mVcdFile, somme_assign_1_reg_581, "somme_assign_1_reg_581");
    sc_trace(mVcdFile, X_prot_3_19_reg_593, "X_prot_3_19_reg_593");
    sc_trace(mVcdFile, Y_prot_3_19_reg_604, "Y_prot_3_19_reg_604");
    sc_trace(mVcdFile, zext_ln25_fu_807_p1, "zext_ln25_fu_807_p1");
    sc_trace(mVcdFile, zext_ln26_fu_824_p1, "zext_ln26_fu_824_p1");
    sc_trace(mVcdFile, zext_ln63_fu_1200_p1, "zext_ln63_fu_1200_p1");
    sc_trace(mVcdFile, zext_ln75_fu_1447_p1, "zext_ln75_fu_1447_p1");
    sc_trace(mVcdFile, empty_6_fu_749_p1, "empty_6_fu_749_p1");
    sc_trace(mVcdFile, empty_fu_759_p1, "empty_fu_759_p1");
    sc_trace(mVcdFile, empty_5_fu_768_p1, "empty_5_fu_768_p1");
    sc_trace(mVcdFile, empty_7_fu_777_p1, "empty_7_fu_777_p1");
    sc_trace(mVcdFile, empty_8_fu_786_p1, "empty_8_fu_786_p1");
    sc_trace(mVcdFile, ap_block_pp4_stage0_01001, "ap_block_pp4_stage0_01001");
    sc_trace(mVcdFile, X_prot_3_1_fu_194, "X_prot_3_1_fu_194");
    sc_trace(mVcdFile, X_prot_3_3_fu_198, "X_prot_3_3_fu_198");
    sc_trace(mVcdFile, X_prot_3_4_fu_202, "X_prot_3_4_fu_202");
    sc_trace(mVcdFile, X_prot_3_5_fu_206, "X_prot_3_5_fu_206");
    sc_trace(mVcdFile, Y_prot_3_1_fu_210, "Y_prot_3_1_fu_210");
    sc_trace(mVcdFile, Y_prot_3_3_fu_214, "Y_prot_3_3_fu_214");
    sc_trace(mVcdFile, Y_prot_3_4_fu_218, "Y_prot_3_4_fu_218");
    sc_trace(mVcdFile, Y_prot_3_5_fu_222, "Y_prot_3_5_fu_222");
    sc_trace(mVcdFile, X_prot_3_7_fu_226, "X_prot_3_7_fu_226");
    sc_trace(mVcdFile, X_prot_3_8_fu_230, "X_prot_3_8_fu_230");
    sc_trace(mVcdFile, X_prot_3_9_fu_234, "X_prot_3_9_fu_234");
    sc_trace(mVcdFile, X_prot_3_2_fu_238, "X_prot_3_2_fu_238");
    sc_trace(mVcdFile, Y_prot_3_6_fu_242, "Y_prot_3_6_fu_242");
    sc_trace(mVcdFile, Y_prot_3_18_fu_1408_p3, "Y_prot_3_18_fu_1408_p3");
    sc_trace(mVcdFile, Y_prot_3_7_fu_246, "Y_prot_3_7_fu_246");
    sc_trace(mVcdFile, Y_prot_3_17_fu_1401_p3, "Y_prot_3_17_fu_1401_p3");
    sc_trace(mVcdFile, Y_prot_3_8_fu_250, "Y_prot_3_8_fu_250");
    sc_trace(mVcdFile, Y_prot_3_15_fu_1387_p3, "Y_prot_3_15_fu_1387_p3");
    sc_trace(mVcdFile, Y_prot_3_2_fu_254, "Y_prot_3_2_fu_254");
    sc_trace(mVcdFile, Y_prot_3_12_fu_1366_p3, "Y_prot_3_12_fu_1366_p3");
    sc_trace(mVcdFile, grp_fu_626_p0, "grp_fu_626_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, grp_fu_630_p0, "grp_fu_630_p0");
    sc_trace(mVcdFile, grp_fu_636_p0, "grp_fu_636_p0");
    sc_trace(mVcdFile, grp_fu_636_p1, "grp_fu_636_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state96, "ap_CS_fsm_state96");
    sc_trace(mVcdFile, grp_fu_642_p0, "grp_fu_642_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, grp_fu_661_p0, "grp_fu_661_p0");
    sc_trace(mVcdFile, grp_fu_661_p1, "grp_fu_661_p1");
    sc_trace(mVcdFile, trunc_ln45_fu_1003_p1, "trunc_ln45_fu_1003_p1");
    sc_trace(mVcdFile, grp_fu_650_p1, "grp_fu_650_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_1035_p1, "p_Val2_s_fu_1035_p1");
    sc_trace(mVcdFile, grp_fu_653_p1, "grp_fu_653_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_1043_p1, "p_Val2_1_fu_1043_p1");
    sc_trace(mVcdFile, p_Result_s_fu_1051_p3, "p_Result_s_fu_1051_p3");
    sc_trace(mVcdFile, p_Result_1_fu_1063_p3, "p_Result_1_fu_1063_p3");
    sc_trace(mVcdFile, bitcast_ln46_fu_1075_p1, "bitcast_ln46_fu_1075_p1");
    sc_trace(mVcdFile, bitcast_ln46_1_fu_1092_p1, "bitcast_ln46_1_fu_1092_p1");
    sc_trace(mVcdFile, tmp_fu_1078_p4, "tmp_fu_1078_p4");
    sc_trace(mVcdFile, trunc_ln46_fu_1088_p1, "trunc_ln46_fu_1088_p1");
    sc_trace(mVcdFile, icmp_ln46_1_fu_1116_p2, "icmp_ln46_1_fu_1116_p2");
    sc_trace(mVcdFile, icmp_ln46_fu_1110_p2, "icmp_ln46_fu_1110_p2");
    sc_trace(mVcdFile, tmp_6_fu_1096_p4, "tmp_6_fu_1096_p4");
    sc_trace(mVcdFile, trunc_ln46_1_fu_1106_p1, "trunc_ln46_1_fu_1106_p1");
    sc_trace(mVcdFile, icmp_ln46_3_fu_1134_p2, "icmp_ln46_3_fu_1134_p2");
    sc_trace(mVcdFile, icmp_ln46_2_fu_1128_p2, "icmp_ln46_2_fu_1128_p2");
    sc_trace(mVcdFile, or_ln46_fu_1122_p2, "or_ln46_fu_1122_p2");
    sc_trace(mVcdFile, or_ln46_1_fu_1140_p2, "or_ln46_1_fu_1140_p2");
    sc_trace(mVcdFile, and_ln46_fu_1146_p2, "and_ln46_fu_1146_p2");
    sc_trace(mVcdFile, grp_fu_656_p2, "grp_fu_656_p2");
    sc_trace(mVcdFile, and_ln46_1_fu_1152_p2, "and_ln46_1_fu_1152_p2");
    sc_trace(mVcdFile, size_fu_1218_p2, "size_fu_1218_p2");
    sc_trace(mVcdFile, X_prot_3_fu_1254_p3, "X_prot_3_fu_1254_p3");
    sc_trace(mVcdFile, X_prot_3_11_fu_1267_p3, "X_prot_3_11_fu_1267_p3");
    sc_trace(mVcdFile, X_prot_3_13_fu_1288_p3, "X_prot_3_13_fu_1288_p3");
    sc_trace(mVcdFile, X_prot_3_14_fu_1296_p3, "X_prot_3_14_fu_1296_p3");
    sc_trace(mVcdFile, X_prot_3_16_fu_1312_p3, "X_prot_3_16_fu_1312_p3");
    sc_trace(mVcdFile, Y_prot_3_fu_1352_p3, "Y_prot_3_fu_1352_p3");
    sc_trace(mVcdFile, Y_prot_3_11_fu_1359_p3, "Y_prot_3_11_fu_1359_p3");
    sc_trace(mVcdFile, Y_prot_3_13_fu_1373_p3, "Y_prot_3_13_fu_1373_p3");
    sc_trace(mVcdFile, Y_prot_3_14_fu_1380_p3, "Y_prot_3_14_fu_1380_p3");
    sc_trace(mVcdFile, Y_prot_3_16_fu_1394_p3, "Y_prot_3_16_fu_1394_p3");
    sc_trace(mVcdFile, grp_fu_626_opcode, "grp_fu_626_opcode");
    sc_trace(mVcdFile, grp_fu_630_opcode, "grp_fu_630_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_idle_pp4, "ap_idle_pp4");
    sc_trace(mVcdFile, ap_enable_pp4, "ap_enable_pp4");
#endif

    }
    mHdltvinHandle.open("kmeans.hdltvin.dat");
    mHdltvoutHandle.open("kmeans.hdltvout.dat");
}

kmeans::~kmeans() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete kmeans_CONTROL_BUS_s_axi_U;
    delete kmeans_INPUT_r_m_axi_U;
    delete kmeans_OUTPUT_r_m_axi_U;
    delete X_U;
    delete Y_U;
    delete cluster_U;
    delete kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U1;
    delete kmeans_faddfsub_32ns_32ns_32_5_full_dsp_1_U2;
    delete kmeans_fdiv_32ns_32ns_32_16_1_U3;
    delete kmeans_sitofp_32ns_32_6_1_U4;
    delete kmeans_fptrunc_64ns_32_2_1_U5;
    delete kmeans_fpext_32ns_64_2_1_U6;
    delete kmeans_fpext_32ns_64_2_1_U7;
    delete kmeans_fcmp_32ns_32ns_1_2_1_U8;
    delete kmeans_dadd_64ns_64ns_64_5_full_dsp_1_U9;
    delete kmeans_mux_42_32_1_1_U10;
    delete kmeans_mux_42_32_1_1_U11;
}

void kmeans::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void kmeans::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_logic_0;
}

void kmeans::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_0;
}

void kmeans::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void kmeans::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void kmeans::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void kmeans::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_80;
}

void kmeans::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void kmeans::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv4_F;
}

void kmeans::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv5_4;
}

void kmeans::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln62_fu_1188_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln90_fu_1207_p2.read()))) {
        X_prot_3_19_reg_593 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_reg_1848.read()))) {
        X_prot_3_19_reg_593 = grp_fu_636_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read())) {
        X_prot_3_2_fu_238 = X_prot_3_12_reg_1912.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        X_prot_3_2_fu_238 = X_prot_3_5_load_reg_1587.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read())) {
        X_prot_3_7_fu_226 = X_prot_3_18_reg_1927.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        X_prot_3_7_fu_226 = X_prot_3_1_load_reg_1572.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read())) {
        X_prot_3_8_fu_230 = X_prot_3_17_reg_1922.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        X_prot_3_8_fu_230 = X_prot_3_3_load_reg_1577.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read())) {
        X_prot_3_9_fu_234 = X_prot_3_15_reg_1917.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        X_prot_3_9_fu_234 = X_prot_3_4_load_reg_1582.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln90_reg_1848.read()))) {
        Y_prot_3_19_reg_604 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_reg_1848.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()))) {
        Y_prot_3_19_reg_604 = grp_fu_636_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read())) {
        Y_prot_3_2_fu_254 = Y_prot_3_12_fu_1366_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        Y_prot_3_2_fu_254 = Y_prot_3_5_load_reg_1644.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read())) {
        Y_prot_3_6_fu_242 = Y_prot_3_18_fu_1408_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        Y_prot_3_6_fu_242 = Y_prot_3_1_load_reg_1629.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read())) {
        Y_prot_3_7_fu_246 = Y_prot_3_17_fu_1401_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        Y_prot_3_7_fu_246 = Y_prot_3_3_load_reg_1634.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read())) {
        Y_prot_3_8_fu_250 = Y_prot_3_15_fu_1387_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        Y_prot_3_8_fu_250 = Y_prot_3_4_load_reg_1639.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state19.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state19.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state19.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_829_p2.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_877_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state113.read()))) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
                    esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state113.read())) {
                ap_enable_reg_pp4_iter1 = (ap_condition_pp4_exit_iter0_state113.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp4_iter1 = ap_enable_reg_pp4_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp4_iter2 = ap_enable_reg_pp4_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
                    esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp4_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        belonging_cluster_in_1_reg_521 = belonging_cluster_in_2_fu_1165_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        belonging_cluster_in_1_reg_521 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        belonging_cluster_in_reg_498 = i_reg_1745.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        belonging_cluster_in_reg_498 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_969_p2.read()))) {
        i_1_reg_534 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read())) {
        i_1_reg_534 = i_2_reg_1820.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_1176_p2.read()))) {
        it_0_reg_476 = it_reg_1709.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        it_0_reg_476 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln36_fu_957_p2.read()))) {
        j_0_reg_487 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln43_fu_991_p2.read()))) {
        j_0_reg_487 = j_reg_1717.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        j_1_reg_546 = j_2_reg_1828.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_1176_p2.read()))) {
        j_1_reg_546 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        min_distance_0_reg_509 = min_distance_1_fu_1158_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        min_distance_0_reg_509 = ap_const_lv32_47C34F80;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln25_reg_430 = add_ln25_reg_1511.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_ln25_reg_430 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        phi_ln26_reg_442 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        phi_ln26_reg_442 = add_ln26_reg_1525.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        phi_ln27_reg_454 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_829_p2.read()))) {
        phi_ln27_reg_454 = add_ln27_fu_835_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        phi_ln28_reg_465 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_877_p2.read()))) {
        phi_ln28_reg_465 = add_ln28_fu_883_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
        phi_ln75_reg_615 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_fu_1435_p2.read()))) {
        phi_ln75_reg_615 = add_ln75_fu_1441_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        somme_assign_1_reg_581 = Y_clus_1_fu_1238_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_1176_p2.read()))) {
        somme_assign_1_reg_581 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        somme_assign_reg_569 = X_clus_1_fu_1231_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_1176_p2.read()))) {
        somme_assign_reg_569 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        taille_assign_reg_557 = size_1_fu_1224_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln56_fu_1176_p2.read()))) {
        taille_assign_reg_557 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        INPUT_addr_1_read_reg_1516 = INPUT_r_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        INPUT_addr_2_reg_1495 =  (sc_lv<32>) (empty_7_fu_777_p1.read());
        INPUT_addr_3_reg_1501 =  (sc_lv<32>) (empty_8_fu_786_p1.read());
        INPUT_addr_reg_1489 =  (sc_lv<32>) (empty_5_fu_768_p1.read());
        OUTPUT_addr_reg_1483 =  (sc_lv<32>) (empty_fu_759_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        INPUT_addr_read_reg_1530 = INPUT_r_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        X_prot_3_12_reg_1912 = X_prot_3_12_fu_1280_p3.read();
        X_prot_3_15_reg_1917 = X_prot_3_15_fu_1304_p3.read();
        X_prot_3_17_reg_1922 = X_prot_3_17_fu_1320_p3.read();
        X_prot_3_18_reg_1927 = X_prot_3_18_fu_1328_p3.read();
        icmp_ln70_1_reg_1897 = icmp_ln70_1_fu_1262_p2.read();
        icmp_ln70_2_reg_1904 = icmp_ln70_2_fu_1275_p2.read();
        icmp_ln70_reg_1891 = icmp_ln70_fu_1249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln27_reg_1568.read(), ap_const_lv2_0))) {
        X_prot_3_1_fu_194 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        X_prot_3_1_load_reg_1572 = X_prot_3_1_fu_194.read();
        X_prot_3_3_load_reg_1577 = X_prot_3_3_fu_198.read();
        X_prot_3_4_load_reg_1582 = X_prot_3_4_fu_202.read();
        X_prot_3_5_load_reg_1587 = X_prot_3_5_fu_206.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln27_reg_1568.read(), ap_const_lv2_1))) {
        X_prot_3_3_fu_198 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln27_reg_1568.read(), ap_const_lv2_2))) {
        X_prot_3_4_fu_202 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln27_reg_1568.read(), ap_const_lv2_3))) {
        X_prot_3_5_fu_206 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln28_reg_1625.read(), ap_const_lv2_0))) {
        Y_prot_3_1_fu_210 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        Y_prot_3_1_load_reg_1629 = Y_prot_3_1_fu_210.read();
        Y_prot_3_3_load_reg_1634 = Y_prot_3_3_fu_214.read();
        Y_prot_3_4_load_reg_1639 = Y_prot_3_4_fu_218.read();
        Y_prot_3_5_load_reg_1644 = Y_prot_3_5_fu_222.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln28_reg_1625.read(), ap_const_lv2_1))) {
        Y_prot_3_3_fu_214 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln28_reg_1625.read(), ap_const_lv2_2))) {
        Y_prot_3_4_fu_218 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(trunc_ln28_reg_1625.read(), ap_const_lv2_3))) {
        Y_prot_3_5_fu_222 = INPUT_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln25_reg_1511 = add_ln25_fu_801_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        add_ln26_reg_1525 = add_ln26_fu_818_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_reg_1942.read()))) {
        cluster_load_reg_1956 = cluster_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        distance_reg_1795 = grp_fu_647_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        i_2_reg_1820 = i_2_fu_1182_p2.read();
        zext_ln56_reg_1812 = zext_ln56_fu_1172_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        i_reg_1745 = i_fu_997_p2.read();
        zext_ln43_reg_1737 = zext_ln43_fu_987_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln25_reg_1507 = icmp_ln25_fu_795_p2.read();
        icmp_ln25_reg_1507_pp0_iter1_reg = icmp_ln25_reg_1507.read();
        phi_ln25_reg_430_pp0_iter1_reg = phi_ln25_reg_430.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln26_reg_1521 = icmp_ln26_fu_812_p2.read();
        icmp_ln26_reg_1521_pp1_iter1_reg = icmp_ln26_reg_1521.read();
        phi_ln26_reg_442_pp1_iter1_reg = phi_ln26_reg_442.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln27_reg_1559 = icmp_ln27_fu_829_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln28_reg_1616 = icmp_ln28_fu_877_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        icmp_ln63_reg_1852 = icmp_ln63_fu_1213_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln75_reg_1942 = icmp_ln75_fu_1435_p2.read();
        icmp_ln75_reg_1942_pp4_iter1_reg = icmp_ln75_reg_1942.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln62_fu_1188_p2.read()))) {
        icmp_ln90_reg_1848 = icmp_ln90_fu_1207_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        in_X5_reg_1462 = in_X.read().range(31, 2);
        in_X_prot1_reg_1472 = in_X_prot.read().range(31, 2);
        in_Y7_reg_1457 = in_Y.read().range(31, 2);
        in_Y_prot3_reg_1467 = in_Y_prot.read().range(31, 2);
        out_cluster9_reg_1452 = out_cluster.read().range(31, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
        it_reg_1709 = it_fu_963_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        j_2_reg_1828 = j_2_fu_1194_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        j_reg_1717 = j_fu_975_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()))) {
        reg_689 = X_q0.read();
        reg_694 = Y_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tmp_7_i_reg_1765 = grp_fu_630_p2.read();
        tmp_i_reg_1760 = grp_fu_626_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read())) {
        tmp_i1_reg_1874 = grp_fu_642_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read())) {
        tmp_i2_reg_1932 = grp_fu_642_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        tmp_i_20_reg_1790 = grp_fu_661_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_829_p2.read()))) {
        trunc_ln27_reg_1568 = trunc_ln27_fu_841_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_877_p2.read()))) {
        trunc_ln28_reg_1625 = trunc_ln28_fu_889_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        trunc_ln368_1_reg_1775 = trunc_ln368_1_fu_1047_p1.read();
        trunc_ln368_reg_1770 = trunc_ln368_fu_1039_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        trunc_ln70_reg_1884 = trunc_ln70_fu_1245_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln43_fu_991_p2.read()))) {
        x1_assign_reg_1750 = x1_assign_fu_1007_p6.read();
        y1_assign_reg_1755 = y1_assign_fu_1021_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln38_fu_969_p2.read()))) {
        zext_ln45_reg_1722 = zext_ln45_fu_981_p1.read();
    }
}

void kmeans::thread_INPUT_r_ARADDR() {
    if (esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            INPUT_r_ARADDR = INPUT_addr_2_reg_1495.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
            INPUT_r_ARADDR = INPUT_addr_3_reg_1501.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            INPUT_r_ARADDR = INPUT_addr_reg_1489.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            INPUT_r_ARADDR =  (sc_lv<32>) (empty_6_fu_749_p1.read());
        } else {
            INPUT_r_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        INPUT_r_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_INPUT_r_ARLEN() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)))) {
        INPUT_r_ARLEN = ap_const_lv32_4;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)))) {
        INPUT_r_ARLEN = ap_const_lv32_80;
    } else {
        INPUT_r_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_INPUT_r_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1)))) {
        INPUT_r_ARVALID = ap_const_logic_1;
    } else {
        INPUT_r_ARVALID = ap_const_logic_0;
    }
}

void kmeans::thread_INPUT_r_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0)))) {
        INPUT_r_RREADY = ap_const_logic_1;
    } else {
        INPUT_r_RREADY = ap_const_logic_0;
    }
}

void kmeans::thread_INPUT_r_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        INPUT_r_blk_n_AR = m_axi_INPUT_r_ARREADY.read();
    } else {
        INPUT_r_blk_n_AR = ap_const_logic_1;
    }
}

void kmeans::thread_INPUT_r_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read())))) {
        INPUT_r_blk_n_R = m_axi_INPUT_r_RVALID.read();
    } else {
        INPUT_r_blk_n_R = ap_const_logic_1;
    }
}

void kmeans::thread_OUTPUT_r_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
        OUTPUT_r_AWVALID = ap_const_logic_1;
    } else {
        OUTPUT_r_AWVALID = ap_const_logic_0;
    }
}

void kmeans::thread_OUTPUT_r_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
         esl_seteq<1,1,1>(OUTPUT_r_BVALID.read(), ap_const_logic_1))) {
        OUTPUT_r_BREADY = ap_const_logic_1;
    } else {
        OUTPUT_r_BREADY = ap_const_logic_0;
    }
}

void kmeans::thread_OUTPUT_r_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_reg_1942_pp4_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        OUTPUT_r_WVALID = ap_const_logic_1;
    } else {
        OUTPUT_r_WVALID = ap_const_logic_0;
    }
}

void kmeans::thread_OUTPUT_r_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1))) {
        OUTPUT_r_blk_n_AW = m_axi_OUTPUT_r_AWREADY.read();
    } else {
        OUTPUT_r_blk_n_AW = ap_const_logic_1;
    }
}

void kmeans::thread_OUTPUT_r_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read())) {
        OUTPUT_r_blk_n_B = m_axi_OUTPUT_r_BVALID.read();
    } else {
        OUTPUT_r_blk_n_B = ap_const_logic_1;
    }
}

void kmeans::thread_OUTPUT_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_reg_1942_pp4_iter1_reg.read()))) {
        OUTPUT_r_blk_n_W = m_axi_OUTPUT_r_WREADY.read();
    } else {
        OUTPUT_r_blk_n_W = ap_const_logic_1;
    }
}

void kmeans::thread_X_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        X_address0 =  (sc_lv<7>) (zext_ln63_fu_1200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        X_address0 =  (sc_lv<7>) (zext_ln45_fu_981_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        X_address0 =  (sc_lv<7>) (zext_ln25_fu_807_p1.read());
    } else {
        X_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void kmeans::thread_X_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        X_ce0 = ap_const_logic_1;
    } else {
        X_ce0 = ap_const_logic_0;
    }
}

void kmeans::thread_X_clus_1_fu_1231_p3() {
    X_clus_1_fu_1231_p3 = (!icmp_ln63_reg_1852.read()[0].is_01())? sc_lv<32>(): ((icmp_ln63_reg_1852.read()[0].to_bool())? grp_fu_626_p2.read(): somme_assign_reg_569.read());
}

void kmeans::thread_X_prot_3_11_fu_1267_p3() {
    X_prot_3_11_fu_1267_p3 = (!icmp_ln70_1_fu_1262_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_fu_1262_p2.read()[0].to_bool())? X_prot_3_2_fu_238.read(): X_prot_3_fu_1254_p3.read());
}

void kmeans::thread_X_prot_3_12_fu_1280_p3() {
    X_prot_3_12_fu_1280_p3 = (!icmp_ln70_2_fu_1275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_fu_1275_p2.read()[0].to_bool())? X_prot_3_2_fu_238.read(): X_prot_3_11_fu_1267_p3.read());
}

void kmeans::thread_X_prot_3_13_fu_1288_p3() {
    X_prot_3_13_fu_1288_p3 = (!icmp_ln70_fu_1249_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_fu_1249_p2.read()[0].to_bool())? X_prot_3_19_reg_593.read(): X_prot_3_9_fu_234.read());
}

void kmeans::thread_X_prot_3_14_fu_1296_p3() {
    X_prot_3_14_fu_1296_p3 = (!icmp_ln70_1_fu_1262_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_fu_1262_p2.read()[0].to_bool())? X_prot_3_9_fu_234.read(): X_prot_3_13_fu_1288_p3.read());
}

void kmeans::thread_X_prot_3_15_fu_1304_p3() {
    X_prot_3_15_fu_1304_p3 = (!icmp_ln70_2_fu_1275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_fu_1275_p2.read()[0].to_bool())? X_prot_3_9_fu_234.read(): X_prot_3_14_fu_1296_p3.read());
}

void kmeans::thread_X_prot_3_16_fu_1312_p3() {
    X_prot_3_16_fu_1312_p3 = (!icmp_ln70_1_fu_1262_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_fu_1262_p2.read()[0].to_bool())? X_prot_3_19_reg_593.read(): X_prot_3_8_fu_230.read());
}

void kmeans::thread_X_prot_3_17_fu_1320_p3() {
    X_prot_3_17_fu_1320_p3 = (!icmp_ln70_2_fu_1275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_fu_1275_p2.read()[0].to_bool())? X_prot_3_8_fu_230.read(): X_prot_3_16_fu_1312_p3.read());
}

void kmeans::thread_X_prot_3_18_fu_1328_p3() {
    X_prot_3_18_fu_1328_p3 = (!icmp_ln70_2_fu_1275_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_fu_1275_p2.read()[0].to_bool())? X_prot_3_19_reg_593.read(): X_prot_3_7_fu_226.read());
}

void kmeans::thread_X_prot_3_fu_1254_p3() {
    X_prot_3_fu_1254_p3 = (!icmp_ln70_fu_1249_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_fu_1249_p2.read()[0].to_bool())? X_prot_3_2_fu_238.read(): X_prot_3_19_reg_593.read());
}

void kmeans::thread_X_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507_pp0_iter1_reg.read()))) {
        X_we0 = ap_const_logic_1;
    } else {
        X_we0 = ap_const_logic_0;
    }
}

void kmeans::thread_Y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        Y_address0 =  (sc_lv<7>) (zext_ln63_fu_1200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        Y_address0 =  (sc_lv<7>) (zext_ln45_fu_981_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        Y_address0 =  (sc_lv<7>) (zext_ln26_fu_824_p1.read());
    } else {
        Y_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void kmeans::thread_Y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())))) {
        Y_ce0 = ap_const_logic_1;
    } else {
        Y_ce0 = ap_const_logic_0;
    }
}

void kmeans::thread_Y_clus_1_fu_1238_p3() {
    Y_clus_1_fu_1238_p3 = (!icmp_ln63_reg_1852.read()[0].is_01())? sc_lv<32>(): ((icmp_ln63_reg_1852.read()[0].to_bool())? grp_fu_630_p2.read(): somme_assign_1_reg_581.read());
}

void kmeans::thread_Y_prot_3_11_fu_1359_p3() {
    Y_prot_3_11_fu_1359_p3 = (!icmp_ln70_1_reg_1897.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_reg_1897.read()[0].to_bool())? Y_prot_3_2_fu_254.read(): Y_prot_3_fu_1352_p3.read());
}

void kmeans::thread_Y_prot_3_12_fu_1366_p3() {
    Y_prot_3_12_fu_1366_p3 = (!icmp_ln70_2_reg_1904.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_reg_1904.read()[0].to_bool())? Y_prot_3_2_fu_254.read(): Y_prot_3_11_fu_1359_p3.read());
}

void kmeans::thread_Y_prot_3_13_fu_1373_p3() {
    Y_prot_3_13_fu_1373_p3 = (!icmp_ln70_reg_1891.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_reg_1891.read()[0].to_bool())? Y_prot_3_19_reg_604.read(): Y_prot_3_8_fu_250.read());
}

void kmeans::thread_Y_prot_3_14_fu_1380_p3() {
    Y_prot_3_14_fu_1380_p3 = (!icmp_ln70_1_reg_1897.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_reg_1897.read()[0].to_bool())? Y_prot_3_8_fu_250.read(): Y_prot_3_13_fu_1373_p3.read());
}

void kmeans::thread_Y_prot_3_15_fu_1387_p3() {
    Y_prot_3_15_fu_1387_p3 = (!icmp_ln70_2_reg_1904.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_reg_1904.read()[0].to_bool())? Y_prot_3_8_fu_250.read(): Y_prot_3_14_fu_1380_p3.read());
}

void kmeans::thread_Y_prot_3_16_fu_1394_p3() {
    Y_prot_3_16_fu_1394_p3 = (!icmp_ln70_1_reg_1897.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_1_reg_1897.read()[0].to_bool())? Y_prot_3_19_reg_604.read(): Y_prot_3_7_fu_246.read());
}

void kmeans::thread_Y_prot_3_17_fu_1401_p3() {
    Y_prot_3_17_fu_1401_p3 = (!icmp_ln70_2_reg_1904.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_reg_1904.read()[0].to_bool())? Y_prot_3_7_fu_246.read(): Y_prot_3_16_fu_1394_p3.read());
}

void kmeans::thread_Y_prot_3_18_fu_1408_p3() {
    Y_prot_3_18_fu_1408_p3 = (!icmp_ln70_2_reg_1904.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_2_reg_1904.read()[0].to_bool())? Y_prot_3_19_reg_604.read(): Y_prot_3_6_fu_242.read());
}

void kmeans::thread_Y_prot_3_fu_1352_p3() {
    Y_prot_3_fu_1352_p3 = (!icmp_ln70_reg_1891.read()[0].is_01())? sc_lv<32>(): ((icmp_ln70_reg_1891.read()[0].to_bool())? Y_prot_3_2_fu_254.read(): Y_prot_3_19_reg_604.read());
}

void kmeans::thread_Y_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_reg_1521_pp1_iter1_reg.read()))) {
        Y_we0 = ap_const_logic_1;
    } else {
        Y_we0 = ap_const_logic_0;
    }
}

void kmeans::thread_add_ln25_fu_801_p2() {
    add_ln25_fu_801_p2 = (!ap_phi_mux_phi_ln25_phi_fu_434_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_phi_ln25_phi_fu_434_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kmeans::thread_add_ln26_fu_818_p2() {
    add_ln26_fu_818_p2 = (!ap_phi_mux_phi_ln26_phi_fu_446_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_phi_ln26_phi_fu_446_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kmeans::thread_add_ln27_fu_835_p2() {
    add_ln27_fu_835_p2 = (!phi_ln27_reg_454.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln27_reg_454.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kmeans::thread_add_ln28_fu_883_p2() {
    add_ln28_fu_883_p2 = (!phi_ln28_reg_465.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln28_reg_465.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kmeans::thread_add_ln75_fu_1441_p2() {
    add_ln75_fu_1441_p2 = (!phi_ln75_reg_615.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_ln75_reg_615.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kmeans::thread_and_ln46_1_fu_1152_p2() {
    and_ln46_1_fu_1152_p2 = (and_ln46_fu_1146_p2.read() & grp_fu_656_p2.read());
}

void kmeans::thread_and_ln46_fu_1146_p2() {
    and_ln46_fu_1146_p2 = (or_ln46_fu_1122_p2.read() & or_ln46_1_fu_1140_p2.read());
}

void kmeans::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void kmeans::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[16];
}

void kmeans::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[24];
}

void kmeans::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[32];
}

void kmeans::thread_ap_CS_fsm_pp4_stage0() {
    ap_CS_fsm_pp4_stage0 = ap_CS_fsm.read()[106];
}

void kmeans::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kmeans::thread_ap_CS_fsm_state111() {
    ap_CS_fsm_state111 = ap_CS_fsm.read()[104];
}

void kmeans::thread_ap_CS_fsm_state112() {
    ap_CS_fsm_state112 = ap_CS_fsm.read()[105];
}

void kmeans::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void kmeans::thread_ap_CS_fsm_state120() {
    ap_CS_fsm_state120 = ap_CS_fsm.read()[111];
}

void kmeans::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[15];
}

void kmeans::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kmeans::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[17];
}

void kmeans::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[23];
}

void kmeans::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[25];
}

void kmeans::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[31];
}

void kmeans::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[33];
}

void kmeans::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[34];
}

void kmeans::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[35];
}

void kmeans::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[36];
}

void kmeans::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[37];
}

void kmeans::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[38];
}

void kmeans::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[42];
}

void kmeans::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[43];
}

void kmeans::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[44];
}

void kmeans::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[45];
}

void kmeans::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[49];
}

void kmeans::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[50];
}

void kmeans::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[51];
}

void kmeans::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[52];
}

void kmeans::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[53];
}

void kmeans::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[54];
}

void kmeans::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[55];
}

void kmeans::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[56];
}

void kmeans::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[57];
}

void kmeans::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[61];
}

void kmeans::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[66];
}

void kmeans::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[67];
}

void kmeans::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void kmeans::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[82];
}

void kmeans::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[83];
}

void kmeans::thread_ap_CS_fsm_state95() {
    ap_CS_fsm_state95 = ap_CS_fsm.read()[88];
}

void kmeans::thread_ap_CS_fsm_state96() {
    ap_CS_fsm_state96 = ap_CS_fsm.read()[89];
}

void kmeans::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_pp4_stage0() {
    ap_block_pp4_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp4_stage0_01001() {
    ap_block_pp4_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_pp4_stage0_11001() {
    ap_block_pp4_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state115_io.read()));
}

void kmeans::thread_ap_block_pp4_stage0_subdone() {
    ap_block_pp4_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state115_io.read()));
}

void kmeans::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_state113_pp4_stage0_iter0() {
    ap_block_state113_pp4_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state114_pp4_stage0_iter1() {
    ap_block_state114_pp4_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state115_io() {
    ap_block_state115_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln75_reg_1942_pp4_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_WREADY.read()));
}

void kmeans::thread_ap_block_state115_pp4_stage0_iter2() {
    ap_block_state115_pp4_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state19_pp1_stage0_iter0() {
    ap_block_state19_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state20_pp1_stage0_iter1() {
    ap_block_state20_pp1_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_state21_pp1_stage0_iter2() {
    ap_block_state21_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state29_pp2_stage0_iter0() {
    ap_block_state29_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state30_pp2_stage0_iter1() {
    ap_block_state30_pp2_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_1559.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_state38_pp3_stage0_iter0() {
    ap_block_state38_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_block_state39_pp3_stage0_iter1() {
    ap_block_state39_pp3_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_reg_1616.read()) && esl_seteq<1,1,1>(ap_const_logic_0, INPUT_r_RVALID.read()));
}

void kmeans::thread_ap_block_state41_io() {
    ap_block_state41_io = (esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, OUTPUT_r_AWREADY.read()));
}

void kmeans::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kmeans::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln25_fu_795_p2.read())) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_condition_pp1_exit_iter0_state19() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_fu_812_p2.read())) {
        ap_condition_pp1_exit_iter0_state19 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state19 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_condition_pp4_exit_iter0_state113() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln75_fu_1435_p2.read())) {
        ap_condition_pp4_exit_iter0_state113 = ap_const_logic_1;
    } else {
        ap_condition_pp4_exit_iter0_state113 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
         esl_seteq<1,1,1>(OUTPUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kmeans::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kmeans::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void kmeans::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void kmeans::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void kmeans::thread_ap_enable_pp4() {
    ap_enable_pp4 = (ap_idle_pp4.read() ^ ap_const_logic_1);
}

void kmeans::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kmeans::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_idle_pp4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter2.read()))) {
        ap_idle_pp4 = ap_const_logic_1;
    } else {
        ap_idle_pp4 = ap_const_logic_0;
    }
}

void kmeans::thread_ap_phi_mux_phi_ln25_phi_fu_434_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln25_reg_1507.read()))) {
        ap_phi_mux_phi_ln25_phi_fu_434_p4 = add_ln25_reg_1511.read();
    } else {
        ap_phi_mux_phi_ln25_phi_fu_434_p4 = phi_ln25_reg_430.read();
    }
}

void kmeans::thread_ap_phi_mux_phi_ln26_phi_fu_446_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln26_reg_1521.read(), ap_const_lv1_0))) {
        ap_phi_mux_phi_ln26_phi_fu_446_p4 = add_ln26_reg_1525.read();
    } else {
        ap_phi_mux_phi_ln26_phi_fu_446_p4 = phi_ln26_reg_442.read();
    }
}

void kmeans::thread_ap_phi_mux_taille_assign_phi_fu_561_p4() {
    ap_phi_mux_taille_assign_phi_fu_561_p4 = taille_assign_reg_557.read();
}

void kmeans::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
         esl_seteq<1,1,1>(OUTPUT_r_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kmeans::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void kmeans::thread_belonging_cluster_in_2_fu_1165_p3() {
    belonging_cluster_in_2_fu_1165_p3 = (!and_ln46_1_fu_1152_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln46_1_fu_1152_p2.read()[0].to_bool())? zext_ln43_reg_1737.read(): belonging_cluster_in_1_reg_521.read());
}

void kmeans::thread_bitcast_ln46_1_fu_1092_p1() {
    bitcast_ln46_1_fu_1092_p1 = min_distance_0_reg_509.read();
}

void kmeans::thread_bitcast_ln46_fu_1075_p1() {
    bitcast_ln46_fu_1075_p1 = distance_reg_1795.read();
}

void kmeans::thread_cluster_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()))) {
        cluster_address0 =  (sc_lv<7>) (zext_ln75_fu_1447_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        cluster_address0 =  (sc_lv<7>) (zext_ln63_fu_1200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        cluster_address0 =  (sc_lv<7>) (zext_ln45_reg_1722.read());
    } else {
        cluster_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void kmeans::thread_cluster_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read())))) {
        cluster_ce0 = ap_const_logic_1;
    } else {
        cluster_ce0 = ap_const_logic_0;
    }
}

void kmeans::thread_cluster_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln43_fu_991_p2.read()))) {
        cluster_we0 = ap_const_logic_1;
    } else {
        cluster_we0 = ap_const_logic_0;
    }
}

void kmeans::thread_empty_5_fu_768_p1() {
    empty_5_fu_768_p1 = esl_zext<64,30>(in_Y7_reg_1457.read());
}

void kmeans::thread_empty_6_fu_749_p1() {
    empty_6_fu_749_p1 = esl_zext<64,30>(in_X5_reg_1462.read());
}

void kmeans::thread_empty_7_fu_777_p1() {
    empty_7_fu_777_p1 = esl_zext<64,30>(in_Y_prot3_reg_1467.read());
}

void kmeans::thread_empty_8_fu_786_p1() {
    empty_8_fu_786_p1 = esl_zext<64,30>(in_X_prot1_reg_1472.read());
}

void kmeans::thread_empty_fu_759_p1() {
    empty_fu_759_p1 = esl_zext<64,30>(out_cluster9_reg_1452.read());
}

void kmeans::thread_grp_fu_626_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_626_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_1852.read()))) {
        grp_fu_626_opcode = ap_const_lv2_0;
    } else {
        grp_fu_626_opcode =  (sc_lv<2>) ("XX");
    }
}

void kmeans::thread_grp_fu_626_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        grp_fu_626_p0 = somme_assign_reg_569.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_626_p0 = x1_assign_reg_1750.read();
    } else {
        grp_fu_626_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_grp_fu_630_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_630_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_1852.read()))) {
        grp_fu_630_opcode = ap_const_lv2_0;
    } else {
        grp_fu_630_opcode =  (sc_lv<2>) ("XX");
    }
}

void kmeans::thread_grp_fu_630_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read())) {
        grp_fu_630_p0 = somme_assign_1_reg_581.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_630_p0 = y1_assign_reg_1755.read();
    } else {
        grp_fu_630_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_grp_fu_636_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read())) {
        grp_fu_636_p0 = somme_assign_1_reg_581.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        grp_fu_636_p0 = somme_assign_reg_569.read();
    } else {
        grp_fu_636_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_grp_fu_636_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read())) {
        grp_fu_636_p1 = tmp_i2_reg_1932.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        grp_fu_636_p1 = tmp_i1_reg_1874.read();
    } else {
        grp_fu_636_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_grp_fu_642_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        grp_fu_642_p0 = taille_assign_reg_557.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_fu_642_p0 = ap_phi_mux_taille_assign_phi_fu_561_p4.read();
    } else {
        grp_fu_642_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void kmeans::thread_grp_fu_661_p0() {
    grp_fu_661_p0 = p_Result_s_fu_1051_p3.read();
}

void kmeans::thread_grp_fu_661_p1() {
    grp_fu_661_p1 = p_Result_1_fu_1063_p3.read();
}

void kmeans::thread_i_2_fu_1182_p2() {
    i_2_fu_1182_p2 = (!i_1_reg_534.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_534.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kmeans::thread_i_fu_997_p2() {
    i_fu_997_p2 = (!belonging_cluster_in_reg_498.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(belonging_cluster_in_reg_498.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kmeans::thread_icmp_ln25_fu_795_p2() {
    icmp_ln25_fu_795_p2 = (!ap_phi_mux_phi_ln25_phi_fu_434_p4.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln25_phi_fu_434_p4.read() == ap_const_lv8_80);
}

void kmeans::thread_icmp_ln26_fu_812_p2() {
    icmp_ln26_fu_812_p2 = (!ap_phi_mux_phi_ln26_phi_fu_446_p4.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_phi_ln26_phi_fu_446_p4.read() == ap_const_lv8_80);
}

void kmeans::thread_icmp_ln27_fu_829_p2() {
    icmp_ln27_fu_829_p2 = (!phi_ln27_reg_454.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln27_reg_454.read() == ap_const_lv3_4);
}

void kmeans::thread_icmp_ln28_fu_877_p2() {
    icmp_ln28_fu_877_p2 = (!phi_ln28_reg_465.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln28_reg_465.read() == ap_const_lv3_4);
}

void kmeans::thread_icmp_ln36_fu_957_p2() {
    icmp_ln36_fu_957_p2 = (!it_0_reg_476.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(it_0_reg_476.read() == ap_const_lv4_A);
}

void kmeans::thread_icmp_ln38_fu_969_p2() {
    icmp_ln38_fu_969_p2 = (!j_0_reg_487.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_487.read() == ap_const_lv8_80);
}

void kmeans::thread_icmp_ln43_fu_991_p2() {
    icmp_ln43_fu_991_p2 = (!belonging_cluster_in_reg_498.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(belonging_cluster_in_reg_498.read() == ap_const_lv3_4);
}

void kmeans::thread_icmp_ln46_1_fu_1116_p2() {
    icmp_ln46_1_fu_1116_p2 = (!trunc_ln46_fu_1088_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln46_fu_1088_p1.read() == ap_const_lv23_0);
}

void kmeans::thread_icmp_ln46_2_fu_1128_p2() {
    icmp_ln46_2_fu_1128_p2 = (!tmp_6_fu_1096_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_1096_p4.read() != ap_const_lv8_FF);
}

void kmeans::thread_icmp_ln46_3_fu_1134_p2() {
    icmp_ln46_3_fu_1134_p2 = (!trunc_ln46_1_fu_1106_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln46_1_fu_1106_p1.read() == ap_const_lv23_0);
}

void kmeans::thread_icmp_ln46_fu_1110_p2() {
    icmp_ln46_fu_1110_p2 = (!tmp_fu_1078_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_1078_p4.read() != ap_const_lv8_FF);
}

void kmeans::thread_icmp_ln56_fu_1176_p2() {
    icmp_ln56_fu_1176_p2 = (!i_1_reg_534.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_534.read() == ap_const_lv3_4);
}

void kmeans::thread_icmp_ln62_fu_1188_p2() {
    icmp_ln62_fu_1188_p2 = (!j_1_reg_546.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_546.read() == ap_const_lv8_80);
}

void kmeans::thread_icmp_ln63_fu_1213_p2() {
    icmp_ln63_fu_1213_p2 = (!cluster_q0.read().is_01() || !zext_ln56_reg_1812.read().is_01())? sc_lv<1>(): sc_lv<1>(cluster_q0.read() == zext_ln56_reg_1812.read());
}

void kmeans::thread_icmp_ln70_1_fu_1262_p2() {
    icmp_ln70_1_fu_1262_p2 = (!trunc_ln70_reg_1884.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln70_reg_1884.read() == ap_const_lv2_1);
}

void kmeans::thread_icmp_ln70_2_fu_1275_p2() {
    icmp_ln70_2_fu_1275_p2 = (!trunc_ln70_reg_1884.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln70_reg_1884.read() == ap_const_lv2_0);
}

void kmeans::thread_icmp_ln70_fu_1249_p2() {
    icmp_ln70_fu_1249_p2 = (!trunc_ln70_reg_1884.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln70_reg_1884.read() == ap_const_lv2_2);
}

void kmeans::thread_icmp_ln75_fu_1435_p2() {
    icmp_ln75_fu_1435_p2 = (!phi_ln75_reg_615.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln75_reg_615.read() == ap_const_lv8_80);
}

void kmeans::thread_icmp_ln90_fu_1207_p2() {
    icmp_ln90_fu_1207_p2 = (!taille_assign_reg_557.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(taille_assign_reg_557.read() == ap_const_lv32_0);
}

void kmeans::thread_it_fu_963_p2() {
    it_fu_963_p2 = (!it_0_reg_476.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(it_0_reg_476.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kmeans::thread_j_2_fu_1194_p2() {
    j_2_fu_1194_p2 = (!j_1_reg_546.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_1_reg_546.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kmeans::thread_j_fu_975_p2() {
    j_fu_975_p2 = (!j_0_reg_487.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_0_reg_487.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kmeans::thread_min_distance_1_fu_1158_p3() {
    min_distance_1_fu_1158_p3 = (!and_ln46_1_fu_1152_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln46_1_fu_1152_p2.read()[0].to_bool())? distance_reg_1795.read(): min_distance_0_reg_509.read());
}

void kmeans::thread_or_ln46_1_fu_1140_p2() {
    or_ln46_1_fu_1140_p2 = (icmp_ln46_3_fu_1134_p2.read() | icmp_ln46_2_fu_1128_p2.read());
}

void kmeans::thread_or_ln46_fu_1122_p2() {
    or_ln46_fu_1122_p2 = (icmp_ln46_1_fu_1116_p2.read() | icmp_ln46_fu_1110_p2.read());
}

void kmeans::thread_p_Result_1_fu_1063_p3() {
    p_Result_1_fu_1063_p3 = esl_concat<1,63>(ap_const_lv1_0, trunc_ln368_1_reg_1775.read());
}

void kmeans::thread_p_Result_s_fu_1051_p3() {
    p_Result_s_fu_1051_p3 = esl_concat<1,63>(ap_const_lv1_0, trunc_ln368_reg_1770.read());
}

void kmeans::thread_p_Val2_1_fu_1043_p1() {
    p_Val2_1_fu_1043_p1 = grp_fu_653_p1.read();
}

void kmeans::thread_p_Val2_s_fu_1035_p1() {
    p_Val2_s_fu_1035_p1 = grp_fu_650_p1.read();
}

void kmeans::thread_size_1_fu_1224_p3() {
    size_1_fu_1224_p3 = (!icmp_ln63_reg_1852.read()[0].is_01())? sc_lv<32>(): ((icmp_ln63_reg_1852.read()[0].to_bool())? size_fu_1218_p2.read(): taille_assign_reg_557.read());
}

void kmeans::thread_size_fu_1218_p2() {
    size_fu_1218_p2 = (!taille_assign_reg_557.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(taille_assign_reg_557.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void kmeans::thread_tmp_6_fu_1096_p4() {
    tmp_6_fu_1096_p4 = bitcast_ln46_1_fu_1092_p1.read().range(30, 23);
}

void kmeans::thread_tmp_fu_1078_p4() {
    tmp_fu_1078_p4 = bitcast_ln46_fu_1075_p1.read().range(30, 23);
}

void kmeans::thread_trunc_ln27_fu_841_p1() {
    trunc_ln27_fu_841_p1 = phi_ln27_reg_454.read().range(2-1, 0);
}

void kmeans::thread_trunc_ln28_fu_889_p1() {
    trunc_ln28_fu_889_p1 = phi_ln28_reg_465.read().range(2-1, 0);
}

void kmeans::thread_trunc_ln368_1_fu_1047_p1() {
    trunc_ln368_1_fu_1047_p1 = p_Val2_1_fu_1043_p1.read().range(63-1, 0);
}

void kmeans::thread_trunc_ln368_fu_1039_p1() {
    trunc_ln368_fu_1039_p1 = p_Val2_s_fu_1035_p1.read().range(63-1, 0);
}

void kmeans::thread_trunc_ln45_fu_1003_p1() {
    trunc_ln45_fu_1003_p1 = belonging_cluster_in_reg_498.read().range(2-1, 0);
}

void kmeans::thread_trunc_ln46_1_fu_1106_p1() {
    trunc_ln46_1_fu_1106_p1 = bitcast_ln46_1_fu_1092_p1.read().range(23-1, 0);
}

void kmeans::thread_trunc_ln46_fu_1088_p1() {
    trunc_ln46_fu_1088_p1 = bitcast_ln46_fu_1075_p1.read().range(23-1, 0);
}

void kmeans::thread_trunc_ln70_fu_1245_p1() {
    trunc_ln70_fu_1245_p1 = i_1_reg_534.read().range(2-1, 0);
}

void kmeans::thread_zext_ln25_fu_807_p1() {
    zext_ln25_fu_807_p1 = esl_zext<64,8>(phi_ln25_reg_430_pp0_iter1_reg.read());
}

void kmeans::thread_zext_ln26_fu_824_p1() {
    zext_ln26_fu_824_p1 = esl_zext<64,8>(phi_ln26_reg_442_pp1_iter1_reg.read());
}

void kmeans::thread_zext_ln43_fu_987_p1() {
    zext_ln43_fu_987_p1 = esl_zext<32,3>(belonging_cluster_in_reg_498.read());
}

void kmeans::thread_zext_ln45_fu_981_p1() {
    zext_ln45_fu_981_p1 = esl_zext<64,8>(j_0_reg_487.read());
}

void kmeans::thread_zext_ln56_fu_1172_p1() {
    zext_ln56_fu_1172_p1 = esl_zext<32,3>(i_1_reg_534.read());
}

void kmeans::thread_zext_ln63_fu_1200_p1() {
    zext_ln63_fu_1200_p1 = esl_zext<64,8>(j_1_reg_546.read());
}

void kmeans::thread_zext_ln75_fu_1447_p1() {
    zext_ln75_fu_1447_p1 = esl_zext<64,8>(phi_ln75_reg_615.read());
}

void kmeans::thread_ap_NS_fsm() {
    if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_pp0_stage0;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln25_fu_795_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln25_fu_795_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state12;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state13;
        } else {
            ap_NS_fsm = ap_ST_fsm_state12;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_pp1_stage0;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_pp1_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_fu_812_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_fu_812_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state22;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state23;
        } else {
            ap_NS_fsm = ap_ST_fsm_state22;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_pp2_stage0;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_pp2_stage0))
    {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter0.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_state31;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(INPUT_r_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state32;
        } else {
            ap_NS_fsm = ap_ST_fsm_state31;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_pp3_stage0;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_pp3_stage0))
    {
        if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter0.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter0.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_state40;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_957_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_block_state41_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln36_fu_957_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_969_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state61;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln43_fu_991_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln56_fu_1176_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state41;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln62_fu_1188_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln90_fu_1207_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state89;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln62_fu_1188_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_fu_1207_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state63;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln90_reg_1848.read()))) {
            ap_NS_fsm = ap_ST_fsm_state111;
        } else {
            ap_NS_fsm = ap_ST_fsm_state91;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_pp4_stage0))
    {
        if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln75_fu_1435_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln75_fu_1435_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp4_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_state116;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        }
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        ap_NS_fsm = ap_ST_fsm_state118;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,112,112>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && esl_seteq<1,1,1>(OUTPUT_r_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state120;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<112>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void kmeans::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_INPUT_r_AWVALID\" :  \"" << m_axi_INPUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_AWREADY\" :  \"" << m_axi_INPUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWADDR\" :  \"" << m_axi_INPUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWID\" :  \"" << m_axi_INPUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWLEN\" :  \"" << m_axi_INPUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWSIZE\" :  \"" << m_axi_INPUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWBURST\" :  \"" << m_axi_INPUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWLOCK\" :  \"" << m_axi_INPUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWCACHE\" :  \"" << m_axi_INPUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWPROT\" :  \"" << m_axi_INPUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWQOS\" :  \"" << m_axi_INPUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWREGION\" :  \"" << m_axi_INPUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_AWUSER\" :  \"" << m_axi_INPUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WVALID\" :  \"" << m_axi_INPUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_WREADY\" :  \"" << m_axi_INPUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WDATA\" :  \"" << m_axi_INPUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WSTRB\" :  \"" << m_axi_INPUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WLAST\" :  \"" << m_axi_INPUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WID\" :  \"" << m_axi_INPUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_WUSER\" :  \"" << m_axi_INPUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARVALID\" :  \"" << m_axi_INPUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_ARREADY\" :  \"" << m_axi_INPUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARADDR\" :  \"" << m_axi_INPUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARID\" :  \"" << m_axi_INPUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARLEN\" :  \"" << m_axi_INPUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARSIZE\" :  \"" << m_axi_INPUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARBURST\" :  \"" << m_axi_INPUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARLOCK\" :  \"" << m_axi_INPUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARCACHE\" :  \"" << m_axi_INPUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARPROT\" :  \"" << m_axi_INPUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARQOS\" :  \"" << m_axi_INPUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARREGION\" :  \"" << m_axi_INPUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_ARUSER\" :  \"" << m_axi_INPUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RVALID\" :  \"" << m_axi_INPUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_RREADY\" :  \"" << m_axi_INPUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RDATA\" :  \"" << m_axi_INPUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RLAST\" :  \"" << m_axi_INPUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RID\" :  \"" << m_axi_INPUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RUSER\" :  \"" << m_axi_INPUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_RRESP\" :  \"" << m_axi_INPUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BVALID\" :  \"" << m_axi_INPUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_INPUT_r_BREADY\" :  \"" << m_axi_INPUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BRESP\" :  \"" << m_axi_INPUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BID\" :  \"" << m_axi_INPUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_INPUT_r_BUSER\" :  \"" << m_axi_INPUT_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWVALID\" :  \"" << m_axi_OUTPUT_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_AWREADY\" :  \"" << m_axi_OUTPUT_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWADDR\" :  \"" << m_axi_OUTPUT_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWID\" :  \"" << m_axi_OUTPUT_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWLEN\" :  \"" << m_axi_OUTPUT_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWSIZE\" :  \"" << m_axi_OUTPUT_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWBURST\" :  \"" << m_axi_OUTPUT_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWLOCK\" :  \"" << m_axi_OUTPUT_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWCACHE\" :  \"" << m_axi_OUTPUT_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWPROT\" :  \"" << m_axi_OUTPUT_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWQOS\" :  \"" << m_axi_OUTPUT_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWREGION\" :  \"" << m_axi_OUTPUT_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_AWUSER\" :  \"" << m_axi_OUTPUT_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WVALID\" :  \"" << m_axi_OUTPUT_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_WREADY\" :  \"" << m_axi_OUTPUT_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WDATA\" :  \"" << m_axi_OUTPUT_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WSTRB\" :  \"" << m_axi_OUTPUT_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WLAST\" :  \"" << m_axi_OUTPUT_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WID\" :  \"" << m_axi_OUTPUT_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_WUSER\" :  \"" << m_axi_OUTPUT_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARVALID\" :  \"" << m_axi_OUTPUT_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_ARREADY\" :  \"" << m_axi_OUTPUT_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARADDR\" :  \"" << m_axi_OUTPUT_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARID\" :  \"" << m_axi_OUTPUT_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARLEN\" :  \"" << m_axi_OUTPUT_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARSIZE\" :  \"" << m_axi_OUTPUT_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARBURST\" :  \"" << m_axi_OUTPUT_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARLOCK\" :  \"" << m_axi_OUTPUT_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARCACHE\" :  \"" << m_axi_OUTPUT_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARPROT\" :  \"" << m_axi_OUTPUT_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARQOS\" :  \"" << m_axi_OUTPUT_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARREGION\" :  \"" << m_axi_OUTPUT_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_ARUSER\" :  \"" << m_axi_OUTPUT_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RVALID\" :  \"" << m_axi_OUTPUT_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_RREADY\" :  \"" << m_axi_OUTPUT_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RDATA\" :  \"" << m_axi_OUTPUT_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RLAST\" :  \"" << m_axi_OUTPUT_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RID\" :  \"" << m_axi_OUTPUT_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RUSER\" :  \"" << m_axi_OUTPUT_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_RRESP\" :  \"" << m_axi_OUTPUT_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BVALID\" :  \"" << m_axi_OUTPUT_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_OUTPUT_r_BREADY\" :  \"" << m_axi_OUTPUT_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BRESP\" :  \"" << m_axi_OUTPUT_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BID\" :  \"" << m_axi_OUTPUT_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_OUTPUT_r_BUSER\" :  \"" << m_axi_OUTPUT_r_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWVALID\" :  \"" << s_axi_CONTROL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWREADY\" :  \"" << s_axi_CONTROL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWADDR\" :  \"" << s_axi_CONTROL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WVALID\" :  \"" << s_axi_CONTROL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_WREADY\" :  \"" << s_axi_CONTROL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WDATA\" :  \"" << s_axi_CONTROL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WSTRB\" :  \"" << s_axi_CONTROL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARVALID\" :  \"" << s_axi_CONTROL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARREADY\" :  \"" << s_axi_CONTROL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARADDR\" :  \"" << s_axi_CONTROL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RVALID\" :  \"" << s_axi_CONTROL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_RREADY\" :  \"" << s_axi_CONTROL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RDATA\" :  \"" << s_axi_CONTROL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RRESP\" :  \"" << s_axi_CONTROL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BVALID\" :  \"" << s_axi_CONTROL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_BREADY\" :  \"" << s_axi_CONTROL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BRESP\" :  \"" << s_axi_CONTROL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

