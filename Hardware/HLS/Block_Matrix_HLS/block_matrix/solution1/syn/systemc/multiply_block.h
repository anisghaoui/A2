// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _multiply_block_HH_
#define _multiply_block_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "multiply_block_fadd_32ns_32ns_32_5_full_dsp_1.h"
#include "multiply_block_fmul_32ns_32ns_32_4_max_dsp_1.h"

namespace ap_rtl {

struct multiply_block : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > mA_address0;
    sc_out< sc_logic > mA_ce0;
    sc_in< sc_lv<32> > mA_q0;
    sc_out< sc_lv<8> > mB_address0;
    sc_out< sc_logic > mB_ce0;
    sc_in< sc_lv<32> > mB_q0;
    sc_out< sc_lv<8> > mC_address0;
    sc_out< sc_logic > mC_ce0;
    sc_out< sc_logic > mC_we0;
    sc_out< sc_lv<32> > mC_d0;
    sc_in< sc_lv<32> > mC_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    multiply_block(sc_module_name name);
    SC_HAS_PROCESS(multiply_block);

    ~multiply_block();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>* multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>* multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > zext_ln14_fu_158_p1;
    sc_signal< sc_lv<32> > zext_ln14_reg_319;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > i_fu_170_p2;
    sc_signal< sc_lv<5> > i_reg_327;
    sc_signal< sc_lv<1> > tmp_7_fu_162_p3;
    sc_signal< sc_lv<32> > zext_ln19_fu_176_p1;
    sc_signal< sc_lv<32> > zext_ln19_reg_332;
    sc_signal< sc_lv<32> > zext_ln15_fu_180_p1;
    sc_signal< sc_lv<32> > zext_ln15_reg_337;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > j_fu_192_p2;
    sc_signal< sc_lv<5> > j_reg_345;
    sc_signal< sc_lv<1> > tmp_8_fu_184_p3;
    sc_signal< sc_lv<32> > zext_ln20_fu_198_p1;
    sc_signal< sc_lv<32> > zext_ln20_reg_350;
    sc_signal< sc_lv<32> > zext_ln16_fu_202_p1;
    sc_signal< sc_lv<32> > zext_ln16_reg_355;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > k_fu_214_p2;
    sc_signal< sc_lv<5> > k_reg_363;
    sc_signal< sc_lv<1> > tmp_9_fu_206_p3;
    sc_signal< sc_lv<32> > zext_ln21_fu_220_p1;
    sc_signal< sc_lv<32> > zext_ln21_reg_368;
    sc_signal< sc_lv<10> > sext_ln22_cast_fu_233_p3;
    sc_signal< sc_lv<10> > sext_ln22_cast_reg_376;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln19_fu_224_p2;
    sc_signal< sc_lv<10> > trunc_ln22_fu_246_p1;
    sc_signal< sc_lv<10> > trunc_ln22_reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln20_fu_241_p2;
    sc_signal< sc_lv<8> > mC_addr_reg_390;
    sc_signal< sc_lv<32> > ii_1_fu_260_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln21_fu_266_p2;
    sc_signal< sc_lv<32> > kk_1_fu_307_p2;
    sc_signal< sc_lv<32> > kk_1_reg_413;
    sc_signal< sc_lv<32> > jj_1_fu_313_p2;
    sc_signal< sc_lv<32> > mA_load_reg_423;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > mB_load_reg_428;
    sc_signal< sc_lv<32> > grp_fu_154_p2;
    sc_signal< sc_lv<32> > tmp_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > mC_load_reg_438;
    sc_signal< sc_lv<32> > grp_fu_150_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_443;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<5> > ii_reg_88;
    sc_signal< sc_lv<5> > jj_reg_99;
    sc_signal< sc_lv<5> > kk_reg_110;
    sc_signal< sc_lv<32> > ii_0_reg_121;
    sc_signal< sc_lv<32> > jj_0_reg_131;
    sc_signal< sc_lv<32> > kk_0_reg_141;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > sext_ln22_fu_255_p1;
    sc_signal< sc_lv<64> > sext_ln22_1_fu_280_p1;
    sc_signal< sc_lv<64> > sext_ln22_2_fu_302_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > trunc_ln20_fu_229_p1;
    sc_signal< sc_lv<10> > add_ln22_fu_250_p2;
    sc_signal< sc_lv<10> > trunc_ln22_1_fu_271_p1;
    sc_signal< sc_lv<10> > add_ln22_1_fu_275_p2;
    sc_signal< sc_lv<6> > trunc_ln22_2_fu_285_p1;
    sc_signal< sc_lv<10> > sext_ln22_3_cast_fu_289_p3;
    sc_signal< sc_lv<10> > add_ln22_2_fu_297_p2;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_fsm_state1;
    static const sc_lv<18> ap_ST_fsm_state2;
    static const sc_lv<18> ap_ST_fsm_state3;
    static const sc_lv<18> ap_ST_fsm_state4;
    static const sc_lv<18> ap_ST_fsm_state5;
    static const sc_lv<18> ap_ST_fsm_state6;
    static const sc_lv<18> ap_ST_fsm_state7;
    static const sc_lv<18> ap_ST_fsm_state8;
    static const sc_lv<18> ap_ST_fsm_state9;
    static const sc_lv<18> ap_ST_fsm_state10;
    static const sc_lv<18> ap_ST_fsm_state11;
    static const sc_lv<18> ap_ST_fsm_state12;
    static const sc_lv<18> ap_ST_fsm_state13;
    static const sc_lv<18> ap_ST_fsm_state14;
    static const sc_lv<18> ap_ST_fsm_state15;
    static const sc_lv<18> ap_ST_fsm_state16;
    static const sc_lv<18> ap_ST_fsm_state17;
    static const sc_lv<18> ap_ST_fsm_state18;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln22_1_fu_275_p2();
    void thread_add_ln22_2_fu_297_p2();
    void thread_add_ln22_fu_250_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_170_p2();
    void thread_icmp_ln19_fu_224_p2();
    void thread_icmp_ln20_fu_241_p2();
    void thread_icmp_ln21_fu_266_p2();
    void thread_ii_1_fu_260_p2();
    void thread_j_fu_192_p2();
    void thread_jj_1_fu_313_p2();
    void thread_k_fu_214_p2();
    void thread_kk_1_fu_307_p2();
    void thread_mA_address0();
    void thread_mA_ce0();
    void thread_mB_address0();
    void thread_mB_ce0();
    void thread_mC_address0();
    void thread_mC_ce0();
    void thread_mC_d0();
    void thread_mC_we0();
    void thread_sext_ln22_1_fu_280_p1();
    void thread_sext_ln22_2_fu_302_p1();
    void thread_sext_ln22_3_cast_fu_289_p3();
    void thread_sext_ln22_cast_fu_233_p3();
    void thread_sext_ln22_fu_255_p1();
    void thread_tmp_7_fu_162_p3();
    void thread_tmp_8_fu_184_p3();
    void thread_tmp_9_fu_206_p3();
    void thread_trunc_ln20_fu_229_p1();
    void thread_trunc_ln22_1_fu_271_p1();
    void thread_trunc_ln22_2_fu_285_p1();
    void thread_trunc_ln22_fu_246_p1();
    void thread_zext_ln14_fu_158_p1();
    void thread_zext_ln15_fu_180_p1();
    void thread_zext_ln16_fu_202_p1();
    void thread_zext_ln19_fu_176_p1();
    void thread_zext_ln20_fu_198_p1();
    void thread_zext_ln21_fu_220_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
