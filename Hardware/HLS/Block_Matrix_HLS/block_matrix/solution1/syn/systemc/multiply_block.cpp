// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "multiply_block.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic multiply_block::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic multiply_block::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> multiply_block::ap_ST_fsm_state1 = "1";
const sc_lv<18> multiply_block::ap_ST_fsm_state2 = "10";
const sc_lv<18> multiply_block::ap_ST_fsm_state3 = "100";
const sc_lv<18> multiply_block::ap_ST_fsm_state4 = "1000";
const sc_lv<18> multiply_block::ap_ST_fsm_state5 = "10000";
const sc_lv<18> multiply_block::ap_ST_fsm_state6 = "100000";
const sc_lv<18> multiply_block::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> multiply_block::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> multiply_block::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> multiply_block::ap_const_lv32_1 = "1";
const sc_lv<1> multiply_block::ap_const_lv1_0 = "0";
const sc_lv<32> multiply_block::ap_const_lv32_2 = "10";
const sc_lv<32> multiply_block::ap_const_lv32_3 = "11";
const sc_lv<32> multiply_block::ap_const_lv32_4 = "100";
const sc_lv<1> multiply_block::ap_const_lv1_1 = "1";
const sc_lv<32> multiply_block::ap_const_lv32_5 = "101";
const sc_lv<32> multiply_block::ap_const_lv32_6 = "110";
const sc_lv<32> multiply_block::ap_const_lv32_7 = "111";
const sc_lv<32> multiply_block::ap_const_lv32_B = "1011";
const sc_lv<32> multiply_block::ap_const_lv32_10 = "10000";
const sc_lv<5> multiply_block::ap_const_lv5_0 = "00000";
const sc_lv<32> multiply_block::ap_const_lv32_11 = "10001";
const sc_lv<32> multiply_block::ap_const_lv32_A = "1010";
const sc_lv<32> multiply_block::ap_const_lv32_C = "1100";
const sc_lv<32> multiply_block::ap_const_lv32_8 = "1000";
const sc_lv<5> multiply_block::ap_const_lv5_4 = "100";
const sc_lv<4> multiply_block::ap_const_lv4_0 = "0000";
const bool multiply_block::ap_const_boolean_1 = true;

multiply_block::multiply_block(sc_module_name name) : sc_module(name), mVcdFile(0) {
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new multiply_block_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst);
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(mC_load_reg_438);
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(tmp_reg_433);
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(ap_var_for_const0);
    multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_150_p2);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2 = new multiply_block_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2");
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->clk(ap_clk);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->reset(ap_rst);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->din0(mA_load_reg_423);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->din1(mB_load_reg_428);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->ce(ap_var_for_const0);
    multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2->dout(grp_fu_154_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln22_1_fu_275_p2);
    sensitive << ( sext_ln22_cast_reg_376 );
    sensitive << ( trunc_ln22_1_fu_271_p1 );

    SC_METHOD(thread_add_ln22_2_fu_297_p2);
    sensitive << ( trunc_ln22_reg_385 );
    sensitive << ( sext_ln22_3_cast_fu_289_p3 );

    SC_METHOD(thread_add_ln22_fu_250_p2);
    sensitive << ( sext_ln22_cast_reg_376 );
    sensitive << ( trunc_ln22_fu_246_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_162_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_162_p3 );

    SC_METHOD(thread_i_fu_170_p2);
    sensitive << ( ii_reg_88 );

    SC_METHOD(thread_icmp_ln19_fu_224_p2);
    sensitive << ( zext_ln19_reg_332 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ii_0_reg_121 );

    SC_METHOD(thread_icmp_ln20_fu_241_p2);
    sensitive << ( zext_ln20_reg_350 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( jj_0_reg_131 );

    SC_METHOD(thread_icmp_ln21_fu_266_p2);
    sensitive << ( zext_ln21_reg_368 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( kk_0_reg_141 );

    SC_METHOD(thread_ii_1_fu_260_p2);
    sensitive << ( ii_0_reg_121 );

    SC_METHOD(thread_j_fu_192_p2);
    sensitive << ( jj_reg_99 );

    SC_METHOD(thread_jj_1_fu_313_p2);
    sensitive << ( jj_0_reg_131 );

    SC_METHOD(thread_k_fu_214_p2);
    sensitive << ( kk_reg_110 );

    SC_METHOD(thread_kk_1_fu_307_p2);
    sensitive << ( kk_0_reg_141 );

    SC_METHOD(thread_mA_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln22_1_fu_280_p1 );

    SC_METHOD(thread_mA_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mB_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln22_2_fu_302_p1 );

    SC_METHOD(thread_mB_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mC_address0);
    sensitive << ( mC_addr_reg_390 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_mC_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_mC_d0);
    sensitive << ( tmp_1_reg_443 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_mC_we0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_sext_ln22_1_fu_280_p1);
    sensitive << ( add_ln22_1_fu_275_p2 );

    SC_METHOD(thread_sext_ln22_2_fu_302_p1);
    sensitive << ( add_ln22_2_fu_297_p2 );

    SC_METHOD(thread_sext_ln22_3_cast_fu_289_p3);
    sensitive << ( trunc_ln22_2_fu_285_p1 );

    SC_METHOD(thread_sext_ln22_cast_fu_233_p3);
    sensitive << ( trunc_ln20_fu_229_p1 );

    SC_METHOD(thread_sext_ln22_fu_255_p1);
    sensitive << ( add_ln22_fu_250_p2 );

    SC_METHOD(thread_tmp_7_fu_162_p3);
    sensitive << ( ii_reg_88 );

    SC_METHOD(thread_tmp_8_fu_184_p3);
    sensitive << ( jj_reg_99 );

    SC_METHOD(thread_tmp_9_fu_206_p3);
    sensitive << ( kk_reg_110 );

    SC_METHOD(thread_trunc_ln20_fu_229_p1);
    sensitive << ( ii_0_reg_121 );

    SC_METHOD(thread_trunc_ln22_1_fu_271_p1);
    sensitive << ( kk_0_reg_141 );

    SC_METHOD(thread_trunc_ln22_2_fu_285_p1);
    sensitive << ( kk_0_reg_141 );

    SC_METHOD(thread_trunc_ln22_fu_246_p1);
    sensitive << ( jj_0_reg_131 );

    SC_METHOD(thread_zext_ln14_fu_158_p1);
    sensitive << ( ii_reg_88 );

    SC_METHOD(thread_zext_ln15_fu_180_p1);
    sensitive << ( jj_reg_99 );

    SC_METHOD(thread_zext_ln16_fu_202_p1);
    sensitive << ( kk_reg_110 );

    SC_METHOD(thread_zext_ln19_fu_176_p1);
    sensitive << ( i_fu_170_p2 );

    SC_METHOD(thread_zext_ln20_fu_198_p1);
    sensitive << ( j_fu_192_p2 );

    SC_METHOD(thread_zext_ln21_fu_220_p1);
    sensitive << ( k_fu_214_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_fu_162_p3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_8_fu_184_p3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_fu_206_p3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln19_fu_224_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln20_fu_241_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln21_fu_266_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "multiply_block_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mA_address0, "(port)mA_address0");
    sc_trace(mVcdFile, mA_ce0, "(port)mA_ce0");
    sc_trace(mVcdFile, mA_q0, "(port)mA_q0");
    sc_trace(mVcdFile, mB_address0, "(port)mB_address0");
    sc_trace(mVcdFile, mB_ce0, "(port)mB_ce0");
    sc_trace(mVcdFile, mB_q0, "(port)mB_q0");
    sc_trace(mVcdFile, mC_address0, "(port)mC_address0");
    sc_trace(mVcdFile, mC_ce0, "(port)mC_ce0");
    sc_trace(mVcdFile, mC_we0, "(port)mC_we0");
    sc_trace(mVcdFile, mC_d0, "(port)mC_d0");
    sc_trace(mVcdFile, mC_q0, "(port)mC_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln14_fu_158_p1, "zext_ln14_fu_158_p1");
    sc_trace(mVcdFile, zext_ln14_reg_319, "zext_ln14_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_170_p2, "i_fu_170_p2");
    sc_trace(mVcdFile, i_reg_327, "i_reg_327");
    sc_trace(mVcdFile, tmp_7_fu_162_p3, "tmp_7_fu_162_p3");
    sc_trace(mVcdFile, zext_ln19_fu_176_p1, "zext_ln19_fu_176_p1");
    sc_trace(mVcdFile, zext_ln19_reg_332, "zext_ln19_reg_332");
    sc_trace(mVcdFile, zext_ln15_fu_180_p1, "zext_ln15_fu_180_p1");
    sc_trace(mVcdFile, zext_ln15_reg_337, "zext_ln15_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_fu_192_p2, "j_fu_192_p2");
    sc_trace(mVcdFile, j_reg_345, "j_reg_345");
    sc_trace(mVcdFile, tmp_8_fu_184_p3, "tmp_8_fu_184_p3");
    sc_trace(mVcdFile, zext_ln20_fu_198_p1, "zext_ln20_fu_198_p1");
    sc_trace(mVcdFile, zext_ln20_reg_350, "zext_ln20_reg_350");
    sc_trace(mVcdFile, zext_ln16_fu_202_p1, "zext_ln16_fu_202_p1");
    sc_trace(mVcdFile, zext_ln16_reg_355, "zext_ln16_reg_355");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, k_fu_214_p2, "k_fu_214_p2");
    sc_trace(mVcdFile, k_reg_363, "k_reg_363");
    sc_trace(mVcdFile, tmp_9_fu_206_p3, "tmp_9_fu_206_p3");
    sc_trace(mVcdFile, zext_ln21_fu_220_p1, "zext_ln21_fu_220_p1");
    sc_trace(mVcdFile, zext_ln21_reg_368, "zext_ln21_reg_368");
    sc_trace(mVcdFile, sext_ln22_cast_fu_233_p3, "sext_ln22_cast_fu_233_p3");
    sc_trace(mVcdFile, sext_ln22_cast_reg_376, "sext_ln22_cast_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln19_fu_224_p2, "icmp_ln19_fu_224_p2");
    sc_trace(mVcdFile, trunc_ln22_fu_246_p1, "trunc_ln22_fu_246_p1");
    sc_trace(mVcdFile, trunc_ln22_reg_385, "trunc_ln22_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln20_fu_241_p2, "icmp_ln20_fu_241_p2");
    sc_trace(mVcdFile, mC_addr_reg_390, "mC_addr_reg_390");
    sc_trace(mVcdFile, ii_1_fu_260_p2, "ii_1_fu_260_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln21_fu_266_p2, "icmp_ln21_fu_266_p2");
    sc_trace(mVcdFile, kk_1_fu_307_p2, "kk_1_fu_307_p2");
    sc_trace(mVcdFile, kk_1_reg_413, "kk_1_reg_413");
    sc_trace(mVcdFile, jj_1_fu_313_p2, "jj_1_fu_313_p2");
    sc_trace(mVcdFile, mA_load_reg_423, "mA_load_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, mB_load_reg_428, "mB_load_reg_428");
    sc_trace(mVcdFile, grp_fu_154_p2, "grp_fu_154_p2");
    sc_trace(mVcdFile, tmp_reg_433, "tmp_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, mC_load_reg_438, "mC_load_reg_438");
    sc_trace(mVcdFile, grp_fu_150_p2, "grp_fu_150_p2");
    sc_trace(mVcdFile, tmp_1_reg_443, "tmp_1_reg_443");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ii_reg_88, "ii_reg_88");
    sc_trace(mVcdFile, jj_reg_99, "jj_reg_99");
    sc_trace(mVcdFile, kk_reg_110, "kk_reg_110");
    sc_trace(mVcdFile, ii_0_reg_121, "ii_0_reg_121");
    sc_trace(mVcdFile, jj_0_reg_131, "jj_0_reg_131");
    sc_trace(mVcdFile, kk_0_reg_141, "kk_0_reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, sext_ln22_fu_255_p1, "sext_ln22_fu_255_p1");
    sc_trace(mVcdFile, sext_ln22_1_fu_280_p1, "sext_ln22_1_fu_280_p1");
    sc_trace(mVcdFile, sext_ln22_2_fu_302_p1, "sext_ln22_2_fu_302_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, trunc_ln20_fu_229_p1, "trunc_ln20_fu_229_p1");
    sc_trace(mVcdFile, add_ln22_fu_250_p2, "add_ln22_fu_250_p2");
    sc_trace(mVcdFile, trunc_ln22_1_fu_271_p1, "trunc_ln22_1_fu_271_p1");
    sc_trace(mVcdFile, add_ln22_1_fu_275_p2, "add_ln22_1_fu_275_p2");
    sc_trace(mVcdFile, trunc_ln22_2_fu_285_p1, "trunc_ln22_2_fu_285_p1");
    sc_trace(mVcdFile, sext_ln22_3_cast_fu_289_p3, "sext_ln22_3_cast_fu_289_p3");
    sc_trace(mVcdFile, add_ln22_2_fu_297_p2, "add_ln22_2_fu_297_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("multiply_block.hdltvin.dat");
    mHdltvoutHandle.open("multiply_block.hdltvout.dat");
}

multiply_block::~multiply_block() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete multiply_block_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete multiply_block_fmul_32ns_32ns_32_4_max_dsp_1_U2;
}

void multiply_block::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void multiply_block::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_241_p2.read()))) {
        ii_0_reg_121 = ii_1_fu_260_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_206_p3.read()))) {
        ii_0_reg_121 = zext_ln14_reg_319.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_8_fu_184_p3.read(), ap_const_lv1_1))) {
        ii_reg_88 = i_reg_327.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ii_reg_88 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_266_p2.read()))) {
        jj_0_reg_131 = jj_1_fu_313_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln19_fu_224_p2.read(), ap_const_lv1_1))) {
        jj_0_reg_131 = zext_ln15_reg_337.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_9_fu_206_p3.read(), ap_const_lv1_1))) {
        jj_reg_99 = j_reg_345.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_7_fu_162_p3.read(), ap_const_lv1_0))) {
        jj_reg_99 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        kk_0_reg_141 = kk_1_reg_413.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_241_p2.read()))) {
        kk_0_reg_141 = zext_ln16_reg_355.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_224_p2.read()))) {
        kk_reg_110 = k_reg_363.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_184_p3.read()))) {
        kk_reg_110 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_7_fu_162_p3.read(), ap_const_lv1_0))) {
        i_reg_327 = i_fu_170_p2.read();
        zext_ln19_reg_332 = zext_ln19_fu_176_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_184_p3.read()))) {
        j_reg_345 = j_fu_192_p2.read();
        zext_ln20_reg_350 = zext_ln20_fu_198_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_206_p3.read()))) {
        k_reg_363 = k_fu_214_p2.read();
        zext_ln21_reg_368 = zext_ln21_fu_220_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_266_p2.read()))) {
        kk_1_reg_413 = kk_1_fu_307_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        mA_load_reg_423 = mA_q0.read();
        mB_load_reg_428 = mB_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_241_p2.read()))) {
        mC_addr_reg_390 =  (sc_lv<8>) (sext_ln22_fu_255_p1.read());
        trunc_ln22_reg_385 = trunc_ln22_fu_246_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        mC_load_reg_438 = mC_q0.read();
        tmp_reg_433 = grp_fu_154_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_224_p2.read(), ap_const_lv1_1))) {
        sext_ln22_cast_reg_376 = sext_ln22_cast_fu_233_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_1_reg_443 = grp_fu_150_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        zext_ln14_reg_319 = zext_ln14_fu_158_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        zext_ln15_reg_337 = zext_ln15_fu_180_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        zext_ln16_reg_355 = zext_ln16_fu_202_p1.read();
    }
}

void multiply_block::thread_add_ln22_1_fu_275_p2() {
    add_ln22_1_fu_275_p2 = (!sext_ln22_cast_reg_376.read().is_01() || !trunc_ln22_1_fu_271_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sext_ln22_cast_reg_376.read()) + sc_biguint<10>(trunc_ln22_1_fu_271_p1.read()));
}

void multiply_block::thread_add_ln22_2_fu_297_p2() {
    add_ln22_2_fu_297_p2 = (!sext_ln22_3_cast_fu_289_p3.read().is_01() || !trunc_ln22_reg_385.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sext_ln22_3_cast_fu_289_p3.read()) + sc_biguint<10>(trunc_ln22_reg_385.read()));
}

void multiply_block::thread_add_ln22_fu_250_p2() {
    add_ln22_fu_250_p2 = (!sext_ln22_cast_reg_376.read().is_01() || !trunc_ln22_fu_246_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sext_ln22_cast_reg_376.read()) + sc_biguint<10>(trunc_ln22_fu_246_p1.read()));
}

void multiply_block::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void multiply_block::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void multiply_block::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void multiply_block::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void multiply_block::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void multiply_block::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void multiply_block::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void multiply_block::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void multiply_block::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void multiply_block::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void multiply_block::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void multiply_block::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void multiply_block::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void multiply_block::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void multiply_block::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_7_fu_162_p3.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void multiply_block::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void multiply_block::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_7_fu_162_p3.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void multiply_block::thread_i_fu_170_p2() {
    i_fu_170_p2 = (!ii_reg_88.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(ii_reg_88.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void multiply_block::thread_icmp_ln19_fu_224_p2() {
    icmp_ln19_fu_224_p2 = (!ii_0_reg_121.read().is_01() || !zext_ln19_reg_332.read().is_01())? sc_lv<1>(): (sc_bigint<32>(ii_0_reg_121.read()) < sc_bigint<32>(zext_ln19_reg_332.read()));
}

void multiply_block::thread_icmp_ln20_fu_241_p2() {
    icmp_ln20_fu_241_p2 = (!jj_0_reg_131.read().is_01() || !zext_ln20_reg_350.read().is_01())? sc_lv<1>(): (sc_bigint<32>(jj_0_reg_131.read()) < sc_bigint<32>(zext_ln20_reg_350.read()));
}

void multiply_block::thread_icmp_ln21_fu_266_p2() {
    icmp_ln21_fu_266_p2 = (!kk_0_reg_141.read().is_01() || !zext_ln21_reg_368.read().is_01())? sc_lv<1>(): (sc_bigint<32>(kk_0_reg_141.read()) < sc_bigint<32>(zext_ln21_reg_368.read()));
}

void multiply_block::thread_ii_1_fu_260_p2() {
    ii_1_fu_260_p2 = (!ii_0_reg_121.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ii_0_reg_121.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void multiply_block::thread_j_fu_192_p2() {
    j_fu_192_p2 = (!jj_reg_99.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(jj_reg_99.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void multiply_block::thread_jj_1_fu_313_p2() {
    jj_1_fu_313_p2 = (!jj_0_reg_131.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(jj_0_reg_131.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void multiply_block::thread_k_fu_214_p2() {
    k_fu_214_p2 = (!kk_reg_110.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(kk_reg_110.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void multiply_block::thread_kk_1_fu_307_p2() {
    kk_1_fu_307_p2 = (!ap_const_lv32_1.is_01() || !kk_0_reg_141.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(kk_0_reg_141.read()));
}

void multiply_block::thread_mA_address0() {
    mA_address0 =  (sc_lv<8>) (sext_ln22_1_fu_280_p1.read());
}

void multiply_block::thread_mA_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mA_ce0 = ap_const_logic_1;
    } else {
        mA_ce0 = ap_const_logic_0;
    }
}

void multiply_block::thread_mB_address0() {
    mB_address0 =  (sc_lv<8>) (sext_ln22_2_fu_302_p1.read());
}

void multiply_block::thread_mB_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mB_ce0 = ap_const_logic_1;
    } else {
        mB_ce0 = ap_const_logic_0;
    }
}

void multiply_block::thread_mC_address0() {
    mC_address0 = mC_addr_reg_390.read();
}

void multiply_block::thread_mC_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        mC_ce0 = ap_const_logic_1;
    } else {
        mC_ce0 = ap_const_logic_0;
    }
}

void multiply_block::thread_mC_d0() {
    mC_d0 = tmp_1_reg_443.read();
}

void multiply_block::thread_mC_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        mC_we0 = ap_const_logic_1;
    } else {
        mC_we0 = ap_const_logic_0;
    }
}

void multiply_block::thread_sext_ln22_1_fu_280_p1() {
    sext_ln22_1_fu_280_p1 = esl_sext<64,10>(add_ln22_1_fu_275_p2.read());
}

void multiply_block::thread_sext_ln22_2_fu_302_p1() {
    sext_ln22_2_fu_302_p1 = esl_sext<64,10>(add_ln22_2_fu_297_p2.read());
}

void multiply_block::thread_sext_ln22_3_cast_fu_289_p3() {
    sext_ln22_3_cast_fu_289_p3 = esl_concat<6,4>(trunc_ln22_2_fu_285_p1.read(), ap_const_lv4_0);
}

void multiply_block::thread_sext_ln22_cast_fu_233_p3() {
    sext_ln22_cast_fu_233_p3 = esl_concat<6,4>(trunc_ln20_fu_229_p1.read(), ap_const_lv4_0);
}

void multiply_block::thread_sext_ln22_fu_255_p1() {
    sext_ln22_fu_255_p1 = esl_sext<64,10>(add_ln22_fu_250_p2.read());
}

void multiply_block::thread_tmp_7_fu_162_p3() {
    tmp_7_fu_162_p3 = ii_reg_88.read().range(4, 4);
}

void multiply_block::thread_tmp_8_fu_184_p3() {
    tmp_8_fu_184_p3 = jj_reg_99.read().range(4, 4);
}

void multiply_block::thread_tmp_9_fu_206_p3() {
    tmp_9_fu_206_p3 = kk_reg_110.read().range(4, 4);
}

void multiply_block::thread_trunc_ln20_fu_229_p1() {
    trunc_ln20_fu_229_p1 = ii_0_reg_121.read().range(6-1, 0);
}

void multiply_block::thread_trunc_ln22_1_fu_271_p1() {
    trunc_ln22_1_fu_271_p1 = kk_0_reg_141.read().range(10-1, 0);
}

void multiply_block::thread_trunc_ln22_2_fu_285_p1() {
    trunc_ln22_2_fu_285_p1 = kk_0_reg_141.read().range(6-1, 0);
}

void multiply_block::thread_trunc_ln22_fu_246_p1() {
    trunc_ln22_fu_246_p1 = jj_0_reg_131.read().range(10-1, 0);
}

void multiply_block::thread_zext_ln14_fu_158_p1() {
    zext_ln14_fu_158_p1 = esl_zext<32,5>(ii_reg_88.read());
}

void multiply_block::thread_zext_ln15_fu_180_p1() {
    zext_ln15_fu_180_p1 = esl_zext<32,5>(jj_reg_99.read());
}

void multiply_block::thread_zext_ln16_fu_202_p1() {
    zext_ln16_fu_202_p1 = esl_zext<32,5>(kk_reg_110.read());
}

void multiply_block::thread_zext_ln19_fu_176_p1() {
    zext_ln19_fu_176_p1 = esl_zext<32,5>(i_fu_170_p2.read());
}

void multiply_block::thread_zext_ln20_fu_198_p1() {
    zext_ln20_fu_198_p1 = esl_zext<32,5>(j_fu_192_p2.read());
}

void multiply_block::thread_zext_ln21_fu_220_p1() {
    zext_ln21_fu_220_p1 = esl_zext<32,5>(k_fu_214_p2.read());
}

void multiply_block::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_7_fu_162_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_8_fu_184_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_9_fu_206_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_224_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_241_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_266_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXX";
            break;
    }
}

void multiply_block::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mA_address0\" :  \"" << mA_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mA_ce0\" :  \"" << mA_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA_q0\" :  \"" << mA_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mB_address0\" :  \"" << mB_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mB_ce0\" :  \"" << mB_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB_q0\" :  \"" << mB_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mC_address0\" :  \"" << mC_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mC_ce0\" :  \"" << mC_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mC_we0\" :  \"" << mC_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"mC_d0\" :  \"" << mC_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC_q0\" :  \"" << mC_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

