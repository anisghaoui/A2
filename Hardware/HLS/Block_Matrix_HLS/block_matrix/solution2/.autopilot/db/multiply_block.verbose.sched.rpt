

================================================================
== Vivado HLS Report for 'multiply_block'
================================================================
* Date:           Sat Feb 15 16:15:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        block_matrix
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3646|  3646|  3646|  3646|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+------+------+----------+-----------+-----------+------+----------+
        |                         |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+------+------+----------+-----------+-----------+------+----------+
        |- multiply_block_label0  |   400|   400|        25|          -|          -|    16|    no    |
        |- multiply_block_label1  |   400|   400|        25|          -|          -|    16|    no    |
        |- multiply_block_label2  |   400|   400|        25|          -|          -|    16|    no    |
        |- i_loop_k_loop_ii_loop  |  2072|  2072|        33|          8|          1|   256|    yes   |
        |- Loop 5                 |   368|   368|        23|          -|          -|    16|    no    |
        +-------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 33


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 133
* Pipeline : 1
  Pipeline-0 : II = 8, D = 33, States = { 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 27 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 2 
27 --> 28 52 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 27 
52 --> 53 77 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 52 
77 --> 110 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 77 
110 --> 111 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 117 
117 --> 118 
118 --> 119 
119 --> 120 
120 --> 121 
121 --> 122 
122 --> 123 
123 --> 124 
124 --> 125 
125 --> 126 
126 --> 127 
127 --> 128 
128 --> 129 
129 --> 130 
130 --> 131 
131 --> 132 
132 --> 133 
133 --> 111 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 134 [1/1] (1.00ns)   --->   "%out_mC_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_mC)"   --->   Operation 134 'read' 'out_mC_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 135 [1/1] (1.00ns)   --->   "%in_mB_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_mB)"   --->   Operation 135 'read' 'in_mB_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 136 [1/1] (1.00ns)   --->   "%in_mA_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %in_mA)"   --->   Operation 136 'read' 'in_mA_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%out_mC5 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %out_mC_read, i32 2, i32 31)"   --->   Operation 137 'partselect' 'out_mC5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%empty = zext i30 %out_mC5 to i64"   --->   Operation 138 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%p_cast159 = zext i30 %out_mC5 to i31"   --->   Operation 139 'zext' 'p_cast159' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%in_mB3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %in_mB_read, i32 2, i32 31)"   --->   Operation 140 'partselect' 'in_mB3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%empty_5 = zext i30 %in_mB3 to i64"   --->   Operation 141 'zext' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%p_cast158 = zext i30 %in_mB3 to i31"   --->   Operation 142 'zext' 'p_cast158' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%in_mA1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %in_mA_read, i32 2, i32 31)"   --->   Operation 143 'partselect' 'in_mA1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%empty_6 = zext i30 %in_mA1 to i64"   --->   Operation 144 'zext' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%p_cast = zext i30 %in_mA1 to i31"   --->   Operation 145 'zext' 'p_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %OUTPUT_r), !map !12"   --->   Operation 146 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %INPUT_r), !map !18"   --->   Operation 147 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @multiply_block_str) nounwind"   --->   Operation 148 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%mA = alloca [256 x float], align 4" [src/BMM_fonctions.c:17]   --->   Operation 149 'alloca' 'mA' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%mB = alloca [256 x float], align 4" [src/BMM_fonctions.c:18]   --->   Operation 150 'alloca' 'mB' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%mC = alloca [256 x float], align 4" [src/BMM_fonctions.c:19]   --->   Operation 151 'alloca' 'mC' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [12 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [src/BMM_fonctions.c:10]   --->   Operation 152 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %INPUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:11]   --->   Operation 153 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_mA, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:11]   --->   Operation 154 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %in_mB, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:12]   --->   Operation 155 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %OUTPUT_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [7 x i8]* @p_str6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:13]   --->   Operation 156 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_mC, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle6, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/BMM_fonctions.c:13]   --->   Operation 157 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (1.76ns)   --->   "br label %1" [src/BMM_fonctions.c:20]   --->   Operation 158 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.49>
ST_2 : Operation 159 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 159 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 160 [1/1] (1.36ns)   --->   "%icmp_ln20 = icmp eq i5 %i_0, -16" [src/BMM_fonctions.c:20]   --->   Operation 160 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 161 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 161 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 162 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [src/BMM_fonctions.c:20]   --->   Operation 162 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 163 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %.preheader3.preheader, label %2" [src/BMM_fonctions.c:20]   --->   Operation 163 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 164 [1/1] (0.00ns)   --->   "%tmp = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_0, i4 0)" [src/BMM_fonctions.c:21]   --->   Operation 164 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 165 [1/1] (0.00ns)   --->   "%zext_ln21_1 = zext i9 %tmp to i31" [src/BMM_fonctions.c:21]   --->   Operation 165 'zext' 'zext_ln21_1' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (2.49ns)   --->   "%add_ln21 = add i31 %zext_ln21_1, %p_cast" [src/BMM_fonctions.c:21]   --->   Operation 166 'add' 'add_ln21' <Predicate = (!icmp_ln20)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 167 [1/1] (1.76ns)   --->   "br label %.preheader3" [src/BMM_fonctions.c:22]   --->   Operation 167 'br' <Predicate = (icmp_ln20)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln21_2 = zext i31 %add_ln21 to i64" [src/BMM_fonctions.c:21]   --->   Operation 168 'zext' 'zext_ln21_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%INPUT_addr = getelementptr float* %INPUT_r, i64 %zext_ln21_2" [src/BMM_fonctions.c:21]   --->   Operation 169 'getelementptr' 'INPUT_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 170 [1/1] (0.00ns)   --->   "%or_ln21 = or i9 %tmp, 1" [src/BMM_fonctions.c:21]   --->   Operation 170 'or' 'or_ln21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21)" [src/BMM_fonctions.c:21]   --->   Operation 171 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 172 [1/1] (3.52ns)   --->   "%add_ln21_1 = add i64 %tmp_1, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 172 'add' 'add_ln21_1' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%INPUT_addr_1 = getelementptr float* %INPUT_r, i64 %add_ln21_1" [src/BMM_fonctions.c:21]   --->   Operation 173 'getelementptr' 'INPUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 174 [7/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 174 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 175 [1/1] (0.00ns)   --->   "%or_ln21_1 = or i9 %tmp, 2" [src/BMM_fonctions.c:21]   --->   Operation 175 'or' 'or_ln21_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_1)" [src/BMM_fonctions.c:21]   --->   Operation 176 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 177 [1/1] (3.52ns)   --->   "%add_ln21_2 = add i64 %tmp_2, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 177 'add' 'add_ln21_2' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 178 [1/1] (0.00ns)   --->   "%INPUT_addr_2 = getelementptr float* %INPUT_r, i64 %add_ln21_2" [src/BMM_fonctions.c:21]   --->   Operation 178 'getelementptr' 'INPUT_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 179 [6/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 179 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 180 [7/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 180 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 181 [1/1] (0.00ns)   --->   "%or_ln21_2 = or i9 %tmp, 3" [src/BMM_fonctions.c:21]   --->   Operation 181 'or' 'or_ln21_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_7 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_2)" [src/BMM_fonctions.c:21]   --->   Operation 182 'bitconcatenate' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 183 [1/1] (3.52ns)   --->   "%add_ln21_3 = add i64 %tmp_7, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 183 'add' 'add_ln21_3' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 184 [1/1] (0.00ns)   --->   "%INPUT_addr_3 = getelementptr float* %INPUT_r, i64 %add_ln21_3" [src/BMM_fonctions.c:21]   --->   Operation 184 'getelementptr' 'INPUT_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 185 [5/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 185 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 186 [6/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 186 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 187 [7/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 187 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 188 [1/1] (0.00ns)   --->   "%or_ln21_3 = or i9 %tmp, 4" [src/BMM_fonctions.c:21]   --->   Operation 188 'or' 'or_ln21_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_8 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_3)" [src/BMM_fonctions.c:21]   --->   Operation 189 'bitconcatenate' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 190 [1/1] (3.52ns)   --->   "%add_ln21_4 = add i64 %tmp_8, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 190 'add' 'add_ln21_4' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 191 [1/1] (0.00ns)   --->   "%INPUT_addr_4 = getelementptr float* %INPUT_r, i64 %add_ln21_4" [src/BMM_fonctions.c:21]   --->   Operation 191 'getelementptr' 'INPUT_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 192 [4/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 192 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 193 [5/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 193 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 194 [6/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 194 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 195 [7/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 195 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 196 [1/1] (0.00ns)   --->   "%or_ln21_4 = or i9 %tmp, 5" [src/BMM_fonctions.c:21]   --->   Operation 196 'or' 'or_ln21_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 197 [1/1] (0.00ns)   --->   "%tmp_9 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_4)" [src/BMM_fonctions.c:21]   --->   Operation 197 'bitconcatenate' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 198 [1/1] (3.52ns)   --->   "%add_ln21_5 = add i64 %tmp_9, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 198 'add' 'add_ln21_5' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 199 [1/1] (0.00ns)   --->   "%INPUT_addr_5 = getelementptr float* %INPUT_r, i64 %add_ln21_5" [src/BMM_fonctions.c:21]   --->   Operation 199 'getelementptr' 'INPUT_addr_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 200 [3/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 200 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 201 [4/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 201 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 202 [5/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 202 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 203 [6/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 203 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 204 [7/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 204 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 205 [1/1] (0.00ns)   --->   "%or_ln21_5 = or i9 %tmp, 6" [src/BMM_fonctions.c:21]   --->   Operation 205 'or' 'or_ln21_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_10 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_5)" [src/BMM_fonctions.c:21]   --->   Operation 206 'bitconcatenate' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 207 [1/1] (3.52ns)   --->   "%add_ln21_6 = add i64 %tmp_10, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 207 'add' 'add_ln21_6' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 208 [1/1] (0.00ns)   --->   "%INPUT_addr_6 = getelementptr float* %INPUT_r, i64 %add_ln21_6" [src/BMM_fonctions.c:21]   --->   Operation 208 'getelementptr' 'INPUT_addr_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 209 [2/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 209 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 210 [3/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 210 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 211 [4/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 211 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 212 [5/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 212 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 213 [6/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 213 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 214 [7/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 214 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 215 [1/1] (0.00ns)   --->   "%or_ln21_6 = or i9 %tmp, 7" [src/BMM_fonctions.c:21]   --->   Operation 215 'or' 'or_ln21_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 216 [1/1] (0.00ns)   --->   "%tmp_11 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_6)" [src/BMM_fonctions.c:21]   --->   Operation 216 'bitconcatenate' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 217 [1/1] (3.52ns)   --->   "%add_ln21_7 = add i64 %tmp_11, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 217 'add' 'add_ln21_7' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 218 [1/1] (0.00ns)   --->   "%INPUT_addr_7 = getelementptr float* %INPUT_r, i64 %add_ln21_7" [src/BMM_fonctions.c:21]   --->   Operation 218 'getelementptr' 'INPUT_addr_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 219 [1/7] (8.75ns)   --->   "%INPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 219 'readreq' 'INPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 220 [2/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 220 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 221 [3/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 221 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 222 [4/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 222 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 223 [5/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 223 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 224 [6/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 224 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 225 [7/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 225 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 226 [1/1] (0.00ns)   --->   "%or_ln21_7 = or i9 %tmp, 8" [src/BMM_fonctions.c:21]   --->   Operation 226 'or' 'or_ln21_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 227 [1/1] (0.00ns)   --->   "%tmp_12 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_7)" [src/BMM_fonctions.c:21]   --->   Operation 227 'bitconcatenate' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 228 [1/1] (3.52ns)   --->   "%add_ln21_8 = add i64 %tmp_12, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 228 'add' 'add_ln21_8' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 229 [1/1] (0.00ns)   --->   "%INPUT_addr_8 = getelementptr float* %INPUT_r, i64 %add_ln21_8" [src/BMM_fonctions.c:21]   --->   Operation 229 'getelementptr' 'INPUT_addr_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 230 [1/1] (8.75ns)   --->   "%INPUT_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr)" [src/BMM_fonctions.c:21]   --->   Operation 230 'read' 'INPUT_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 231 [1/7] (8.75ns)   --->   "%INPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_1, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 231 'readreq' 'INPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 232 [2/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 232 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 233 [3/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 233 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 234 [4/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 234 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 235 [5/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 235 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 236 [6/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 236 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 237 [7/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 237 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i9 %tmp to i64" [src/BMM_fonctions.c:21]   --->   Operation 238 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 239 [1/1] (0.00ns)   --->   "%or_ln21_8 = or i9 %tmp, 9" [src/BMM_fonctions.c:21]   --->   Operation 239 'or' 'or_ln21_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 240 [1/1] (0.00ns)   --->   "%tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_8)" [src/BMM_fonctions.c:21]   --->   Operation 240 'bitconcatenate' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 241 [1/1] (3.52ns)   --->   "%add_ln21_9 = add i64 %tmp_13, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 241 'add' 'add_ln21_9' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 242 [1/1] (0.00ns)   --->   "%INPUT_addr_9 = getelementptr float* %INPUT_r, i64 %add_ln21_9" [src/BMM_fonctions.c:21]   --->   Operation 242 'getelementptr' 'INPUT_addr_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 243 [1/1] (0.00ns)   --->   "%mA_addr = getelementptr [256 x float]* %mA, i64 0, i64 %zext_ln21" [src/BMM_fonctions.c:21]   --->   Operation 243 'getelementptr' 'mA_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 244 [1/1] (3.25ns)   --->   "store float %INPUT_addr_read, float* %mA_addr, align 16" [src/BMM_fonctions.c:21]   --->   Operation 244 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_11 : Operation 245 [1/1] (8.75ns)   --->   "%INPUT_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_1)" [src/BMM_fonctions.c:21]   --->   Operation 245 'read' 'INPUT_addr_1_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 246 [1/7] (8.75ns)   --->   "%INPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_2, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 246 'readreq' 'INPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 247 [2/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 247 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 248 [3/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 248 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 249 [4/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 249 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 250 [5/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 250 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 251 [6/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 251 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 252 [7/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 252 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 253 [1/1] (0.00ns)   --->   "%or_ln21_9 = or i9 %tmp, 10" [src/BMM_fonctions.c:21]   --->   Operation 253 'or' 'or_ln21_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 254 [1/1] (0.00ns)   --->   "%tmp_14 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_9)" [src/BMM_fonctions.c:21]   --->   Operation 254 'bitconcatenate' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 255 [1/1] (3.52ns)   --->   "%add_ln21_10 = add i64 %tmp_14, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 255 'add' 'add_ln21_10' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 256 [1/1] (0.00ns)   --->   "%INPUT_addr_10 = getelementptr float* %INPUT_r, i64 %add_ln21_10" [src/BMM_fonctions.c:21]   --->   Operation 256 'getelementptr' 'INPUT_addr_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 257 [1/1] (0.00ns)   --->   "%mA_addr_1 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_1" [src/BMM_fonctions.c:21]   --->   Operation 257 'getelementptr' 'mA_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 258 [1/1] (3.25ns)   --->   "store float %INPUT_addr_1_read, float* %mA_addr_1, align 4" [src/BMM_fonctions.c:21]   --->   Operation 258 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_12 : Operation 259 [1/1] (8.75ns)   --->   "%INPUT_addr_2_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_2)" [src/BMM_fonctions.c:21]   --->   Operation 259 'read' 'INPUT_addr_2_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 260 [1/7] (8.75ns)   --->   "%INPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_3, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 260 'readreq' 'INPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 261 [2/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 261 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 262 [3/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 262 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 263 [4/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 263 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 264 [5/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 264 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 265 [6/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 265 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 266 [7/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 266 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 267 [1/1] (0.00ns)   --->   "%or_ln21_10 = or i9 %tmp, 11" [src/BMM_fonctions.c:21]   --->   Operation 267 'or' 'or_ln21_10' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 268 [1/1] (0.00ns)   --->   "%tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_10)" [src/BMM_fonctions.c:21]   --->   Operation 268 'bitconcatenate' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 269 [1/1] (3.52ns)   --->   "%add_ln21_11 = add i64 %tmp_15, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 269 'add' 'add_ln21_11' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 270 [1/1] (0.00ns)   --->   "%INPUT_addr_11 = getelementptr float* %INPUT_r, i64 %add_ln21_11" [src/BMM_fonctions.c:21]   --->   Operation 270 'getelementptr' 'INPUT_addr_11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 271 [1/1] (0.00ns)   --->   "%mA_addr_2 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_2" [src/BMM_fonctions.c:21]   --->   Operation 271 'getelementptr' 'mA_addr_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 272 [1/1] (3.25ns)   --->   "store float %INPUT_addr_2_read, float* %mA_addr_2, align 8" [src/BMM_fonctions.c:21]   --->   Operation 272 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_13 : Operation 273 [1/1] (8.75ns)   --->   "%INPUT_addr_3_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_3)" [src/BMM_fonctions.c:21]   --->   Operation 273 'read' 'INPUT_addr_3_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 274 [1/7] (8.75ns)   --->   "%INPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_4, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 274 'readreq' 'INPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 275 [2/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 275 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 276 [3/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 276 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 277 [4/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 277 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 278 [5/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 278 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 279 [6/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 279 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 280 [7/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 280 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 281 [1/1] (0.00ns)   --->   "%or_ln21_11 = or i9 %tmp, 12" [src/BMM_fonctions.c:21]   --->   Operation 281 'or' 'or_ln21_11' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 282 [1/1] (0.00ns)   --->   "%tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_11)" [src/BMM_fonctions.c:21]   --->   Operation 282 'bitconcatenate' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 283 [1/1] (3.52ns)   --->   "%add_ln21_12 = add i64 %tmp_16, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 283 'add' 'add_ln21_12' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 284 [1/1] (0.00ns)   --->   "%INPUT_addr_12 = getelementptr float* %INPUT_r, i64 %add_ln21_12" [src/BMM_fonctions.c:21]   --->   Operation 284 'getelementptr' 'INPUT_addr_12' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 285 [1/1] (0.00ns)   --->   "%mA_addr_3 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_7" [src/BMM_fonctions.c:21]   --->   Operation 285 'getelementptr' 'mA_addr_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 286 [1/1] (3.25ns)   --->   "store float %INPUT_addr_3_read, float* %mA_addr_3, align 4" [src/BMM_fonctions.c:21]   --->   Operation 286 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_14 : Operation 287 [1/1] (8.75ns)   --->   "%INPUT_addr_4_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_4)" [src/BMM_fonctions.c:21]   --->   Operation 287 'read' 'INPUT_addr_4_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 288 [1/7] (8.75ns)   --->   "%INPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_5, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 288 'readreq' 'INPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 289 [2/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 289 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 290 [3/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 290 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 291 [4/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 291 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 292 [5/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 292 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 293 [6/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 293 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 294 [7/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 294 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 295 [1/1] (0.00ns)   --->   "%or_ln21_12 = or i9 %tmp, 13" [src/BMM_fonctions.c:21]   --->   Operation 295 'or' 'or_ln21_12' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 296 [1/1] (0.00ns)   --->   "%tmp_17 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_12)" [src/BMM_fonctions.c:21]   --->   Operation 296 'bitconcatenate' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 297 [1/1] (3.52ns)   --->   "%add_ln21_13 = add i64 %tmp_17, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 297 'add' 'add_ln21_13' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 298 [1/1] (0.00ns)   --->   "%INPUT_addr_13 = getelementptr float* %INPUT_r, i64 %add_ln21_13" [src/BMM_fonctions.c:21]   --->   Operation 298 'getelementptr' 'INPUT_addr_13' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 299 [1/1] (0.00ns)   --->   "%mA_addr_4 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_8" [src/BMM_fonctions.c:21]   --->   Operation 299 'getelementptr' 'mA_addr_4' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 300 [1/1] (3.25ns)   --->   "store float %INPUT_addr_4_read, float* %mA_addr_4, align 16" [src/BMM_fonctions.c:21]   --->   Operation 300 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_15 : Operation 301 [1/1] (8.75ns)   --->   "%INPUT_addr_5_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_5)" [src/BMM_fonctions.c:21]   --->   Operation 301 'read' 'INPUT_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 302 [1/7] (8.75ns)   --->   "%INPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_6, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 302 'readreq' 'INPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 303 [2/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 303 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 304 [3/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 304 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 305 [4/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 305 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 306 [5/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 306 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 307 [6/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 307 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 308 [7/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 308 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 309 [1/1] (0.00ns)   --->   "%or_ln21_13 = or i9 %tmp, 14" [src/BMM_fonctions.c:21]   --->   Operation 309 'or' 'or_ln21_13' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 310 [1/1] (0.00ns)   --->   "%tmp_18 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_13)" [src/BMM_fonctions.c:21]   --->   Operation 310 'bitconcatenate' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 311 [1/1] (3.52ns)   --->   "%add_ln21_14 = add i64 %tmp_18, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 311 'add' 'add_ln21_14' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 312 [1/1] (0.00ns)   --->   "%INPUT_addr_14 = getelementptr float* %INPUT_r, i64 %add_ln21_14" [src/BMM_fonctions.c:21]   --->   Operation 312 'getelementptr' 'INPUT_addr_14' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 313 [1/1] (0.00ns)   --->   "%mA_addr_5 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_9" [src/BMM_fonctions.c:21]   --->   Operation 313 'getelementptr' 'mA_addr_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 314 [1/1] (3.25ns)   --->   "store float %INPUT_addr_5_read, float* %mA_addr_5, align 4" [src/BMM_fonctions.c:21]   --->   Operation 314 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_16 : Operation 315 [1/1] (8.75ns)   --->   "%INPUT_addr_6_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_6)" [src/BMM_fonctions.c:21]   --->   Operation 315 'read' 'INPUT_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 316 [1/7] (8.75ns)   --->   "%INPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_7, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 316 'readreq' 'INPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 317 [2/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 317 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 318 [3/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 318 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 319 [4/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 319 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 320 [5/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 320 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 321 [6/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 321 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 322 [7/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 322 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 323 [1/1] (0.00ns)   --->   "%or_ln21_14 = or i9 %tmp, 15" [src/BMM_fonctions.c:21]   --->   Operation 323 'or' 'or_ln21_14' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 324 [1/1] (0.00ns)   --->   "%tmp_19 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln21_14)" [src/BMM_fonctions.c:21]   --->   Operation 324 'bitconcatenate' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 325 [1/1] (3.52ns)   --->   "%add_ln21_15 = add i64 %tmp_19, %empty_6" [src/BMM_fonctions.c:21]   --->   Operation 325 'add' 'add_ln21_15' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 326 [1/1] (0.00ns)   --->   "%INPUT_addr_15 = getelementptr float* %INPUT_r, i64 %add_ln21_15" [src/BMM_fonctions.c:21]   --->   Operation 326 'getelementptr' 'INPUT_addr_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 327 [1/1] (0.00ns)   --->   "%mA_addr_6 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_10" [src/BMM_fonctions.c:21]   --->   Operation 327 'getelementptr' 'mA_addr_6' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 328 [1/1] (3.25ns)   --->   "store float %INPUT_addr_6_read, float* %mA_addr_6, align 8" [src/BMM_fonctions.c:21]   --->   Operation 328 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_17 : Operation 329 [1/1] (8.75ns)   --->   "%INPUT_addr_7_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_7)" [src/BMM_fonctions.c:21]   --->   Operation 329 'read' 'INPUT_addr_7_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 330 [1/7] (8.75ns)   --->   "%INPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_8, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 330 'readreq' 'INPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 331 [2/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 331 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 332 [3/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 332 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 333 [4/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 333 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 334 [5/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 334 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 335 [6/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 335 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 336 [7/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 336 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 337 [1/1] (0.00ns)   --->   "%mA_addr_7 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_11" [src/BMM_fonctions.c:21]   --->   Operation 337 'getelementptr' 'mA_addr_7' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 338 [1/1] (3.25ns)   --->   "store float %INPUT_addr_7_read, float* %mA_addr_7, align 4" [src/BMM_fonctions.c:21]   --->   Operation 338 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_18 : Operation 339 [1/1] (8.75ns)   --->   "%INPUT_addr_8_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_8)" [src/BMM_fonctions.c:21]   --->   Operation 339 'read' 'INPUT_addr_8_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 340 [1/7] (8.75ns)   --->   "%INPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_9, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 340 'readreq' 'INPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 341 [2/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 341 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 342 [3/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 342 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 343 [4/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 343 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 344 [5/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 344 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 345 [6/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 345 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 346 [7/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 346 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 347 [1/1] (0.00ns)   --->   "%mA_addr_8 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_12" [src/BMM_fonctions.c:21]   --->   Operation 347 'getelementptr' 'mA_addr_8' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 348 [1/1] (3.25ns)   --->   "store float %INPUT_addr_8_read, float* %mA_addr_8, align 16" [src/BMM_fonctions.c:21]   --->   Operation 348 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_19 : Operation 349 [1/1] (8.75ns)   --->   "%INPUT_addr_9_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_9)" [src/BMM_fonctions.c:21]   --->   Operation 349 'read' 'INPUT_addr_9_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 350 [1/7] (8.75ns)   --->   "%INPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_10, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 350 'readreq' 'INPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 351 [2/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 351 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 352 [3/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 352 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 353 [4/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 353 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 354 [5/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 354 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 355 [6/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 355 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 356 [1/1] (0.00ns)   --->   "%mA_addr_9 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_13" [src/BMM_fonctions.c:21]   --->   Operation 356 'getelementptr' 'mA_addr_9' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 357 [1/1] (3.25ns)   --->   "store float %INPUT_addr_9_read, float* %mA_addr_9, align 4" [src/BMM_fonctions.c:21]   --->   Operation 357 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_20 : Operation 358 [1/1] (8.75ns)   --->   "%INPUT_addr_10_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_10)" [src/BMM_fonctions.c:21]   --->   Operation 358 'read' 'INPUT_addr_10_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 359 [1/7] (8.75ns)   --->   "%INPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_11, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 359 'readreq' 'INPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 360 [2/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 360 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 361 [3/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 361 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 362 [4/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 362 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 363 [5/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 363 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 364 [1/1] (0.00ns)   --->   "%mA_addr_10 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_14" [src/BMM_fonctions.c:21]   --->   Operation 364 'getelementptr' 'mA_addr_10' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 365 [1/1] (3.25ns)   --->   "store float %INPUT_addr_10_read, float* %mA_addr_10, align 8" [src/BMM_fonctions.c:21]   --->   Operation 365 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_21 : Operation 366 [1/1] (8.75ns)   --->   "%INPUT_addr_11_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_11)" [src/BMM_fonctions.c:21]   --->   Operation 366 'read' 'INPUT_addr_11_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 367 [1/7] (8.75ns)   --->   "%INPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_12, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 367 'readreq' 'INPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 368 [2/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 368 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 369 [3/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 369 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 370 [4/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 370 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 371 [1/1] (0.00ns)   --->   "%mA_addr_11 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_15" [src/BMM_fonctions.c:21]   --->   Operation 371 'getelementptr' 'mA_addr_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 372 [1/1] (3.25ns)   --->   "store float %INPUT_addr_11_read, float* %mA_addr_11, align 4" [src/BMM_fonctions.c:21]   --->   Operation 372 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_22 : Operation 373 [1/1] (8.75ns)   --->   "%INPUT_addr_12_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_12)" [src/BMM_fonctions.c:21]   --->   Operation 373 'read' 'INPUT_addr_12_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 374 [1/7] (8.75ns)   --->   "%INPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_13, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 374 'readreq' 'INPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 375 [2/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 375 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 376 [3/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 376 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 377 [1/1] (0.00ns)   --->   "%mA_addr_12 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_16" [src/BMM_fonctions.c:21]   --->   Operation 377 'getelementptr' 'mA_addr_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 378 [1/1] (3.25ns)   --->   "store float %INPUT_addr_12_read, float* %mA_addr_12, align 16" [src/BMM_fonctions.c:21]   --->   Operation 378 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_23 : Operation 379 [1/1] (8.75ns)   --->   "%INPUT_addr_13_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_13)" [src/BMM_fonctions.c:21]   --->   Operation 379 'read' 'INPUT_addr_13_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 380 [1/7] (8.75ns)   --->   "%INPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_14, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 380 'readreq' 'INPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 381 [2/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 381 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 382 [1/1] (0.00ns)   --->   "%mA_addr_13 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_17" [src/BMM_fonctions.c:21]   --->   Operation 382 'getelementptr' 'mA_addr_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 383 [1/1] (3.25ns)   --->   "store float %INPUT_addr_13_read, float* %mA_addr_13, align 4" [src/BMM_fonctions.c:21]   --->   Operation 383 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_24 : Operation 384 [1/1] (8.75ns)   --->   "%INPUT_addr_14_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_14)" [src/BMM_fonctions.c:21]   --->   Operation 384 'read' 'INPUT_addr_14_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 385 [1/7] (8.75ns)   --->   "%INPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_15, i32 1)" [src/BMM_fonctions.c:21]   --->   Operation 385 'readreq' 'INPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 386 [1/1] (0.00ns)   --->   "%mA_addr_14 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_18" [src/BMM_fonctions.c:21]   --->   Operation 386 'getelementptr' 'mA_addr_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 387 [1/1] (3.25ns)   --->   "store float %INPUT_addr_14_read, float* %mA_addr_14, align 8" [src/BMM_fonctions.c:21]   --->   Operation 387 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_25 : Operation 388 [1/1] (8.75ns)   --->   "%INPUT_addr_15_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_15)" [src/BMM_fonctions.c:21]   --->   Operation 388 'read' 'INPUT_addr_15_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 25> <Delay = 3.25>
ST_26 : Operation 389 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str7) nounwind" [src/BMM_fonctions.c:21]   --->   Operation 389 'specloopname' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 390 [1/1] (0.00ns)   --->   "%mA_addr_15 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_19" [src/BMM_fonctions.c:21]   --->   Operation 390 'getelementptr' 'mA_addr_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 391 [1/1] (3.25ns)   --->   "store float %INPUT_addr_15_read, float* %mA_addr_15, align 4" [src/BMM_fonctions.c:21]   --->   Operation 391 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_26 : Operation 392 [1/1] (0.00ns)   --->   "br label %1" [src/BMM_fonctions.c:20]   --->   Operation 392 'br' <Predicate = true> <Delay = 0.00>

State 27 <SV = 2> <Delay = 2.49>
ST_27 : Operation 393 [1/1] (0.00ns)   --->   "%i_1 = phi i5 [ %i_5, %3 ], [ 0, %.preheader3.preheader ]"   --->   Operation 393 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 394 [1/1] (1.36ns)   --->   "%icmp_ln22 = icmp eq i5 %i_1, -16" [src/BMM_fonctions.c:22]   --->   Operation 394 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 395 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 395 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 396 [1/1] (1.78ns)   --->   "%i_5 = add i5 %i_1, 1" [src/BMM_fonctions.c:22]   --->   Operation 396 'add' 'i_5' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 397 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %.preheader2.preheader, label %3" [src/BMM_fonctions.c:22]   --->   Operation 397 'br' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 398 [1/1] (0.00ns)   --->   "%tmp_20 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_1, i4 0)" [src/BMM_fonctions.c:23]   --->   Operation 398 'bitconcatenate' 'tmp_20' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_27 : Operation 399 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i9 %tmp_20 to i31" [src/BMM_fonctions.c:23]   --->   Operation 399 'zext' 'zext_ln23_1' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_27 : Operation 400 [1/1] (2.49ns)   --->   "%add_ln23 = add i31 %zext_ln23_1, %p_cast158" [src/BMM_fonctions.c:23]   --->   Operation 400 'add' 'add_ln23' <Predicate = (!icmp_ln22)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 401 [1/1] (1.76ns)   --->   "br label %.preheader2" [src/BMM_fonctions.c:24]   --->   Operation 401 'br' <Predicate = (icmp_ln22)> <Delay = 1.76>

State 28 <SV = 3> <Delay = 8.75>
ST_28 : Operation 402 [1/1] (0.00ns)   --->   "%zext_ln23_2 = zext i31 %add_ln23 to i64" [src/BMM_fonctions.c:23]   --->   Operation 402 'zext' 'zext_ln23_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 403 [1/1] (0.00ns)   --->   "%INPUT_addr_16 = getelementptr float* %INPUT_r, i64 %zext_ln23_2" [src/BMM_fonctions.c:23]   --->   Operation 403 'getelementptr' 'INPUT_addr_16' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 404 [1/1] (0.00ns)   --->   "%or_ln23 = or i9 %tmp_20, 1" [src/BMM_fonctions.c:23]   --->   Operation 404 'or' 'or_ln23' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 405 [1/1] (0.00ns)   --->   "%tmp_21 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23)" [src/BMM_fonctions.c:23]   --->   Operation 405 'bitconcatenate' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 406 [1/1] (3.52ns)   --->   "%add_ln23_1 = add i64 %tmp_21, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 406 'add' 'add_ln23_1' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 407 [1/1] (0.00ns)   --->   "%INPUT_addr_17 = getelementptr float* %INPUT_r, i64 %add_ln23_1" [src/BMM_fonctions.c:23]   --->   Operation 407 'getelementptr' 'INPUT_addr_17' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 408 [7/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 408 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 4> <Delay = 8.75>
ST_29 : Operation 409 [1/1] (0.00ns)   --->   "%or_ln23_1 = or i9 %tmp_20, 2" [src/BMM_fonctions.c:23]   --->   Operation 409 'or' 'or_ln23_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 410 [1/1] (0.00ns)   --->   "%tmp_22 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_1)" [src/BMM_fonctions.c:23]   --->   Operation 410 'bitconcatenate' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 411 [1/1] (3.52ns)   --->   "%add_ln23_2 = add i64 %tmp_22, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 411 'add' 'add_ln23_2' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 412 [1/1] (0.00ns)   --->   "%INPUT_addr_18 = getelementptr float* %INPUT_r, i64 %add_ln23_2" [src/BMM_fonctions.c:23]   --->   Operation 412 'getelementptr' 'INPUT_addr_18' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 413 [6/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 413 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 414 [7/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 414 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 5> <Delay = 8.75>
ST_30 : Operation 415 [1/1] (0.00ns)   --->   "%or_ln23_2 = or i9 %tmp_20, 3" [src/BMM_fonctions.c:23]   --->   Operation 415 'or' 'or_ln23_2' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 416 [1/1] (0.00ns)   --->   "%tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_2)" [src/BMM_fonctions.c:23]   --->   Operation 416 'bitconcatenate' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 417 [1/1] (3.52ns)   --->   "%add_ln23_3 = add i64 %tmp_23, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 417 'add' 'add_ln23_3' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 418 [1/1] (0.00ns)   --->   "%INPUT_addr_19 = getelementptr float* %INPUT_r, i64 %add_ln23_3" [src/BMM_fonctions.c:23]   --->   Operation 418 'getelementptr' 'INPUT_addr_19' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 419 [5/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 419 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 420 [6/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 420 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 421 [7/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 421 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 6> <Delay = 8.75>
ST_31 : Operation 422 [1/1] (0.00ns)   --->   "%or_ln23_3 = or i9 %tmp_20, 4" [src/BMM_fonctions.c:23]   --->   Operation 422 'or' 'or_ln23_3' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 423 [1/1] (0.00ns)   --->   "%tmp_24 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_3)" [src/BMM_fonctions.c:23]   --->   Operation 423 'bitconcatenate' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 424 [1/1] (3.52ns)   --->   "%add_ln23_4 = add i64 %tmp_24, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 424 'add' 'add_ln23_4' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 425 [1/1] (0.00ns)   --->   "%INPUT_addr_20 = getelementptr float* %INPUT_r, i64 %add_ln23_4" [src/BMM_fonctions.c:23]   --->   Operation 425 'getelementptr' 'INPUT_addr_20' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 426 [4/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 426 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 427 [5/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 427 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 428 [6/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 428 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 429 [7/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 429 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 7> <Delay = 8.75>
ST_32 : Operation 430 [1/1] (0.00ns)   --->   "%or_ln23_4 = or i9 %tmp_20, 5" [src/BMM_fonctions.c:23]   --->   Operation 430 'or' 'or_ln23_4' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 431 [1/1] (0.00ns)   --->   "%tmp_25 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_4)" [src/BMM_fonctions.c:23]   --->   Operation 431 'bitconcatenate' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 432 [1/1] (3.52ns)   --->   "%add_ln23_5 = add i64 %tmp_25, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 432 'add' 'add_ln23_5' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 433 [1/1] (0.00ns)   --->   "%INPUT_addr_21 = getelementptr float* %INPUT_r, i64 %add_ln23_5" [src/BMM_fonctions.c:23]   --->   Operation 433 'getelementptr' 'INPUT_addr_21' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 434 [3/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 434 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 435 [4/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 435 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 436 [5/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 436 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 437 [6/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 437 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 438 [7/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 438 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 8> <Delay = 8.75>
ST_33 : Operation 439 [1/1] (0.00ns)   --->   "%or_ln23_5 = or i9 %tmp_20, 6" [src/BMM_fonctions.c:23]   --->   Operation 439 'or' 'or_ln23_5' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 440 [1/1] (0.00ns)   --->   "%tmp_26 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_5)" [src/BMM_fonctions.c:23]   --->   Operation 440 'bitconcatenate' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 441 [1/1] (3.52ns)   --->   "%add_ln23_6 = add i64 %tmp_26, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 441 'add' 'add_ln23_6' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 442 [1/1] (0.00ns)   --->   "%INPUT_addr_22 = getelementptr float* %INPUT_r, i64 %add_ln23_6" [src/BMM_fonctions.c:23]   --->   Operation 442 'getelementptr' 'INPUT_addr_22' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 443 [2/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 443 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 444 [3/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 444 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 445 [4/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 445 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 446 [5/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 446 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 447 [6/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 447 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 448 [7/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 448 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 9> <Delay = 8.75>
ST_34 : Operation 449 [1/1] (0.00ns)   --->   "%or_ln23_6 = or i9 %tmp_20, 7" [src/BMM_fonctions.c:23]   --->   Operation 449 'or' 'or_ln23_6' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 450 [1/1] (0.00ns)   --->   "%tmp_27 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_6)" [src/BMM_fonctions.c:23]   --->   Operation 450 'bitconcatenate' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 451 [1/1] (3.52ns)   --->   "%add_ln23_7 = add i64 %tmp_27, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 451 'add' 'add_ln23_7' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 452 [1/1] (0.00ns)   --->   "%INPUT_addr_23 = getelementptr float* %INPUT_r, i64 %add_ln23_7" [src/BMM_fonctions.c:23]   --->   Operation 452 'getelementptr' 'INPUT_addr_23' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 453 [1/7] (8.75ns)   --->   "%INPUT_load_16_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_16, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 453 'readreq' 'INPUT_load_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 454 [2/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 454 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 455 [3/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 455 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 456 [4/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 456 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 457 [5/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 457 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 458 [6/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 458 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_34 : Operation 459 [7/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 459 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 10> <Delay = 8.75>
ST_35 : Operation 460 [1/1] (0.00ns)   --->   "%or_ln23_7 = or i9 %tmp_20, 8" [src/BMM_fonctions.c:23]   --->   Operation 460 'or' 'or_ln23_7' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 461 [1/1] (0.00ns)   --->   "%tmp_28 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_7)" [src/BMM_fonctions.c:23]   --->   Operation 461 'bitconcatenate' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 462 [1/1] (3.52ns)   --->   "%add_ln23_8 = add i64 %tmp_28, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 462 'add' 'add_ln23_8' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 463 [1/1] (0.00ns)   --->   "%INPUT_addr_24 = getelementptr float* %INPUT_r, i64 %add_ln23_8" [src/BMM_fonctions.c:23]   --->   Operation 463 'getelementptr' 'INPUT_addr_24' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 464 [1/1] (8.75ns)   --->   "%INPUT_addr_16_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_16)" [src/BMM_fonctions.c:23]   --->   Operation 464 'read' 'INPUT_addr_16_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 465 [1/7] (8.75ns)   --->   "%INPUT_load_17_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_17, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 465 'readreq' 'INPUT_load_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 466 [2/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 466 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 467 [3/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 467 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 468 [4/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 468 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 469 [5/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 469 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 470 [6/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 470 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 471 [7/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 471 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 11> <Delay = 8.75>
ST_36 : Operation 472 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i9 %tmp_20 to i64" [src/BMM_fonctions.c:23]   --->   Operation 472 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 473 [1/1] (0.00ns)   --->   "%or_ln23_8 = or i9 %tmp_20, 9" [src/BMM_fonctions.c:23]   --->   Operation 473 'or' 'or_ln23_8' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 474 [1/1] (0.00ns)   --->   "%tmp_29 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_8)" [src/BMM_fonctions.c:23]   --->   Operation 474 'bitconcatenate' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 475 [1/1] (3.52ns)   --->   "%add_ln23_9 = add i64 %tmp_29, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 475 'add' 'add_ln23_9' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 476 [1/1] (0.00ns)   --->   "%INPUT_addr_25 = getelementptr float* %INPUT_r, i64 %add_ln23_9" [src/BMM_fonctions.c:23]   --->   Operation 476 'getelementptr' 'INPUT_addr_25' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 477 [1/1] (0.00ns)   --->   "%mB_addr = getelementptr [256 x float]* %mB, i64 0, i64 %zext_ln23" [src/BMM_fonctions.c:23]   --->   Operation 477 'getelementptr' 'mB_addr' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 478 [1/1] (3.25ns)   --->   "store float %INPUT_addr_16_read, float* %mB_addr, align 16" [src/BMM_fonctions.c:23]   --->   Operation 478 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_36 : Operation 479 [1/1] (8.75ns)   --->   "%INPUT_addr_17_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_17)" [src/BMM_fonctions.c:23]   --->   Operation 479 'read' 'INPUT_addr_17_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 480 [1/7] (8.75ns)   --->   "%INPUT_load_18_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_18, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 480 'readreq' 'INPUT_load_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 481 [2/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 481 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 482 [3/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 482 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 483 [4/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 483 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 484 [5/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 484 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 485 [6/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 485 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 486 [7/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 486 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 12> <Delay = 8.75>
ST_37 : Operation 487 [1/1] (0.00ns)   --->   "%or_ln23_9 = or i9 %tmp_20, 10" [src/BMM_fonctions.c:23]   --->   Operation 487 'or' 'or_ln23_9' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 488 [1/1] (0.00ns)   --->   "%tmp_30 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_9)" [src/BMM_fonctions.c:23]   --->   Operation 488 'bitconcatenate' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 489 [1/1] (3.52ns)   --->   "%add_ln23_10 = add i64 %tmp_30, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 489 'add' 'add_ln23_10' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 490 [1/1] (0.00ns)   --->   "%INPUT_addr_26 = getelementptr float* %INPUT_r, i64 %add_ln23_10" [src/BMM_fonctions.c:23]   --->   Operation 490 'getelementptr' 'INPUT_addr_26' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 491 [1/1] (0.00ns)   --->   "%mB_addr_1 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_21" [src/BMM_fonctions.c:23]   --->   Operation 491 'getelementptr' 'mB_addr_1' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 492 [1/1] (3.25ns)   --->   "store float %INPUT_addr_17_read, float* %mB_addr_1, align 4" [src/BMM_fonctions.c:23]   --->   Operation 492 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_37 : Operation 493 [1/1] (8.75ns)   --->   "%INPUT_addr_18_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_18)" [src/BMM_fonctions.c:23]   --->   Operation 493 'read' 'INPUT_addr_18_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 494 [1/7] (8.75ns)   --->   "%INPUT_load_19_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_19, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 494 'readreq' 'INPUT_load_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 495 [2/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 495 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 496 [3/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 496 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 497 [4/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 497 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 498 [5/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 498 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 499 [6/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 499 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_37 : Operation 500 [7/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 500 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 13> <Delay = 8.75>
ST_38 : Operation 501 [1/1] (0.00ns)   --->   "%or_ln23_10 = or i9 %tmp_20, 11" [src/BMM_fonctions.c:23]   --->   Operation 501 'or' 'or_ln23_10' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 502 [1/1] (0.00ns)   --->   "%tmp_31 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_10)" [src/BMM_fonctions.c:23]   --->   Operation 502 'bitconcatenate' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 503 [1/1] (3.52ns)   --->   "%add_ln23_11 = add i64 %tmp_31, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 503 'add' 'add_ln23_11' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 504 [1/1] (0.00ns)   --->   "%INPUT_addr_27 = getelementptr float* %INPUT_r, i64 %add_ln23_11" [src/BMM_fonctions.c:23]   --->   Operation 504 'getelementptr' 'INPUT_addr_27' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 505 [1/1] (0.00ns)   --->   "%mB_addr_2 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_22" [src/BMM_fonctions.c:23]   --->   Operation 505 'getelementptr' 'mB_addr_2' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 506 [1/1] (3.25ns)   --->   "store float %INPUT_addr_18_read, float* %mB_addr_2, align 8" [src/BMM_fonctions.c:23]   --->   Operation 506 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_38 : Operation 507 [1/1] (8.75ns)   --->   "%INPUT_addr_19_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_19)" [src/BMM_fonctions.c:23]   --->   Operation 507 'read' 'INPUT_addr_19_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 508 [1/7] (8.75ns)   --->   "%INPUT_load_20_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_20, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 508 'readreq' 'INPUT_load_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 509 [2/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 509 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 510 [3/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 510 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 511 [4/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 511 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 512 [5/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 512 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 513 [6/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 513 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_38 : Operation 514 [7/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 514 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 14> <Delay = 8.75>
ST_39 : Operation 515 [1/1] (0.00ns)   --->   "%or_ln23_11 = or i9 %tmp_20, 12" [src/BMM_fonctions.c:23]   --->   Operation 515 'or' 'or_ln23_11' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 516 [1/1] (0.00ns)   --->   "%tmp_32 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_11)" [src/BMM_fonctions.c:23]   --->   Operation 516 'bitconcatenate' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 517 [1/1] (3.52ns)   --->   "%add_ln23_12 = add i64 %tmp_32, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 517 'add' 'add_ln23_12' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 518 [1/1] (0.00ns)   --->   "%INPUT_addr_28 = getelementptr float* %INPUT_r, i64 %add_ln23_12" [src/BMM_fonctions.c:23]   --->   Operation 518 'getelementptr' 'INPUT_addr_28' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 519 [1/1] (0.00ns)   --->   "%mB_addr_3 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_23" [src/BMM_fonctions.c:23]   --->   Operation 519 'getelementptr' 'mB_addr_3' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 520 [1/1] (3.25ns)   --->   "store float %INPUT_addr_19_read, float* %mB_addr_3, align 4" [src/BMM_fonctions.c:23]   --->   Operation 520 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_39 : Operation 521 [1/1] (8.75ns)   --->   "%INPUT_addr_20_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_20)" [src/BMM_fonctions.c:23]   --->   Operation 521 'read' 'INPUT_addr_20_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 522 [1/7] (8.75ns)   --->   "%INPUT_load_21_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_21, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 522 'readreq' 'INPUT_load_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 523 [2/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 523 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 524 [3/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 524 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 525 [4/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 525 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 526 [5/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 526 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 527 [6/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 527 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_39 : Operation 528 [7/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 528 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 15> <Delay = 8.75>
ST_40 : Operation 529 [1/1] (0.00ns)   --->   "%or_ln23_12 = or i9 %tmp_20, 13" [src/BMM_fonctions.c:23]   --->   Operation 529 'or' 'or_ln23_12' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 530 [1/1] (0.00ns)   --->   "%tmp_33 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_12)" [src/BMM_fonctions.c:23]   --->   Operation 530 'bitconcatenate' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 531 [1/1] (3.52ns)   --->   "%add_ln23_13 = add i64 %tmp_33, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 531 'add' 'add_ln23_13' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 532 [1/1] (0.00ns)   --->   "%INPUT_addr_29 = getelementptr float* %INPUT_r, i64 %add_ln23_13" [src/BMM_fonctions.c:23]   --->   Operation 532 'getelementptr' 'INPUT_addr_29' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 533 [1/1] (0.00ns)   --->   "%mB_addr_4 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_24" [src/BMM_fonctions.c:23]   --->   Operation 533 'getelementptr' 'mB_addr_4' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 534 [1/1] (3.25ns)   --->   "store float %INPUT_addr_20_read, float* %mB_addr_4, align 16" [src/BMM_fonctions.c:23]   --->   Operation 534 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_40 : Operation 535 [1/1] (8.75ns)   --->   "%INPUT_addr_21_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_21)" [src/BMM_fonctions.c:23]   --->   Operation 535 'read' 'INPUT_addr_21_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 536 [1/7] (8.75ns)   --->   "%INPUT_load_22_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_22, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 536 'readreq' 'INPUT_load_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 537 [2/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 537 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 538 [3/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 538 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 539 [4/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 539 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 540 [5/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 540 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 541 [6/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 541 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 542 [7/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 542 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 16> <Delay = 8.75>
ST_41 : Operation 543 [1/1] (0.00ns)   --->   "%or_ln23_13 = or i9 %tmp_20, 14" [src/BMM_fonctions.c:23]   --->   Operation 543 'or' 'or_ln23_13' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 544 [1/1] (0.00ns)   --->   "%tmp_34 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_13)" [src/BMM_fonctions.c:23]   --->   Operation 544 'bitconcatenate' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 545 [1/1] (3.52ns)   --->   "%add_ln23_14 = add i64 %tmp_34, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 545 'add' 'add_ln23_14' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 546 [1/1] (0.00ns)   --->   "%INPUT_addr_30 = getelementptr float* %INPUT_r, i64 %add_ln23_14" [src/BMM_fonctions.c:23]   --->   Operation 546 'getelementptr' 'INPUT_addr_30' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 547 [1/1] (0.00ns)   --->   "%mB_addr_5 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_25" [src/BMM_fonctions.c:23]   --->   Operation 547 'getelementptr' 'mB_addr_5' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 548 [1/1] (3.25ns)   --->   "store float %INPUT_addr_21_read, float* %mB_addr_5, align 4" [src/BMM_fonctions.c:23]   --->   Operation 548 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_41 : Operation 549 [1/1] (8.75ns)   --->   "%INPUT_addr_22_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_22)" [src/BMM_fonctions.c:23]   --->   Operation 549 'read' 'INPUT_addr_22_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 550 [1/7] (8.75ns)   --->   "%INPUT_load_23_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_23, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 550 'readreq' 'INPUT_load_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 551 [2/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 551 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 552 [3/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 552 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 553 [4/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 553 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 554 [5/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 554 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 555 [6/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 555 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_41 : Operation 556 [7/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 556 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 17> <Delay = 8.75>
ST_42 : Operation 557 [1/1] (0.00ns)   --->   "%or_ln23_14 = or i9 %tmp_20, 15" [src/BMM_fonctions.c:23]   --->   Operation 557 'or' 'or_ln23_14' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 558 [1/1] (0.00ns)   --->   "%tmp_35 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln23_14)" [src/BMM_fonctions.c:23]   --->   Operation 558 'bitconcatenate' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 559 [1/1] (3.52ns)   --->   "%add_ln23_15 = add i64 %tmp_35, %empty_5" [src/BMM_fonctions.c:23]   --->   Operation 559 'add' 'add_ln23_15' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 560 [1/1] (0.00ns)   --->   "%INPUT_addr_31 = getelementptr float* %INPUT_r, i64 %add_ln23_15" [src/BMM_fonctions.c:23]   --->   Operation 560 'getelementptr' 'INPUT_addr_31' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 561 [1/1] (0.00ns)   --->   "%mB_addr_6 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_26" [src/BMM_fonctions.c:23]   --->   Operation 561 'getelementptr' 'mB_addr_6' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 562 [1/1] (3.25ns)   --->   "store float %INPUT_addr_22_read, float* %mB_addr_6, align 8" [src/BMM_fonctions.c:23]   --->   Operation 562 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_42 : Operation 563 [1/1] (8.75ns)   --->   "%INPUT_addr_23_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_23)" [src/BMM_fonctions.c:23]   --->   Operation 563 'read' 'INPUT_addr_23_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 564 [1/7] (8.75ns)   --->   "%INPUT_load_24_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_24, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 564 'readreq' 'INPUT_load_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 565 [2/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 565 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 566 [3/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 566 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 567 [4/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 567 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 568 [5/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 568 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 569 [6/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 569 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_42 : Operation 570 [7/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 570 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 18> <Delay = 8.75>
ST_43 : Operation 571 [1/1] (0.00ns)   --->   "%mB_addr_7 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_27" [src/BMM_fonctions.c:23]   --->   Operation 571 'getelementptr' 'mB_addr_7' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 572 [1/1] (3.25ns)   --->   "store float %INPUT_addr_23_read, float* %mB_addr_7, align 4" [src/BMM_fonctions.c:23]   --->   Operation 572 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_43 : Operation 573 [1/1] (8.75ns)   --->   "%INPUT_addr_24_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_24)" [src/BMM_fonctions.c:23]   --->   Operation 573 'read' 'INPUT_addr_24_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 574 [1/7] (8.75ns)   --->   "%INPUT_load_25_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_25, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 574 'readreq' 'INPUT_load_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 575 [2/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 575 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 576 [3/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 576 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 577 [4/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 577 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 578 [5/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 578 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 579 [6/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 579 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 580 [7/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 580 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 19> <Delay = 8.75>
ST_44 : Operation 581 [1/1] (0.00ns)   --->   "%mB_addr_8 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_28" [src/BMM_fonctions.c:23]   --->   Operation 581 'getelementptr' 'mB_addr_8' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 582 [1/1] (3.25ns)   --->   "store float %INPUT_addr_24_read, float* %mB_addr_8, align 16" [src/BMM_fonctions.c:23]   --->   Operation 582 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_44 : Operation 583 [1/1] (8.75ns)   --->   "%INPUT_addr_25_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_25)" [src/BMM_fonctions.c:23]   --->   Operation 583 'read' 'INPUT_addr_25_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 584 [1/7] (8.75ns)   --->   "%INPUT_load_26_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_26, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 584 'readreq' 'INPUT_load_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 585 [2/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 585 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 586 [3/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 586 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 587 [4/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 587 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 588 [5/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 588 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_44 : Operation 589 [6/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 589 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 20> <Delay = 8.75>
ST_45 : Operation 590 [1/1] (0.00ns)   --->   "%mB_addr_9 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_29" [src/BMM_fonctions.c:23]   --->   Operation 590 'getelementptr' 'mB_addr_9' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 591 [1/1] (3.25ns)   --->   "store float %INPUT_addr_25_read, float* %mB_addr_9, align 4" [src/BMM_fonctions.c:23]   --->   Operation 591 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_45 : Operation 592 [1/1] (8.75ns)   --->   "%INPUT_addr_26_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_26)" [src/BMM_fonctions.c:23]   --->   Operation 592 'read' 'INPUT_addr_26_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 593 [1/7] (8.75ns)   --->   "%INPUT_load_27_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_27, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 593 'readreq' 'INPUT_load_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 594 [2/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 594 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 595 [3/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 595 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 596 [4/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 596 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_45 : Operation 597 [5/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 597 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 21> <Delay = 8.75>
ST_46 : Operation 598 [1/1] (0.00ns)   --->   "%mB_addr_10 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_30" [src/BMM_fonctions.c:23]   --->   Operation 598 'getelementptr' 'mB_addr_10' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 599 [1/1] (3.25ns)   --->   "store float %INPUT_addr_26_read, float* %mB_addr_10, align 8" [src/BMM_fonctions.c:23]   --->   Operation 599 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_46 : Operation 600 [1/1] (8.75ns)   --->   "%INPUT_addr_27_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_27)" [src/BMM_fonctions.c:23]   --->   Operation 600 'read' 'INPUT_addr_27_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 601 [1/7] (8.75ns)   --->   "%INPUT_load_28_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_28, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 601 'readreq' 'INPUT_load_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 602 [2/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 602 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 603 [3/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 603 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_46 : Operation 604 [4/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 604 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 22> <Delay = 8.75>
ST_47 : Operation 605 [1/1] (0.00ns)   --->   "%mB_addr_11 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_31" [src/BMM_fonctions.c:23]   --->   Operation 605 'getelementptr' 'mB_addr_11' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 606 [1/1] (3.25ns)   --->   "store float %INPUT_addr_27_read, float* %mB_addr_11, align 4" [src/BMM_fonctions.c:23]   --->   Operation 606 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_47 : Operation 607 [1/1] (8.75ns)   --->   "%INPUT_addr_28_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_28)" [src/BMM_fonctions.c:23]   --->   Operation 607 'read' 'INPUT_addr_28_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 608 [1/7] (8.75ns)   --->   "%INPUT_load_29_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_29, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 608 'readreq' 'INPUT_load_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 609 [2/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 609 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_47 : Operation 610 [3/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 610 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 23> <Delay = 8.75>
ST_48 : Operation 611 [1/1] (0.00ns)   --->   "%mB_addr_12 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_32" [src/BMM_fonctions.c:23]   --->   Operation 611 'getelementptr' 'mB_addr_12' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 612 [1/1] (3.25ns)   --->   "store float %INPUT_addr_28_read, float* %mB_addr_12, align 16" [src/BMM_fonctions.c:23]   --->   Operation 612 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_48 : Operation 613 [1/1] (8.75ns)   --->   "%INPUT_addr_29_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_29)" [src/BMM_fonctions.c:23]   --->   Operation 613 'read' 'INPUT_addr_29_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 614 [1/7] (8.75ns)   --->   "%INPUT_load_30_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_30, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 614 'readreq' 'INPUT_load_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 615 [2/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 615 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 24> <Delay = 8.75>
ST_49 : Operation 616 [1/1] (0.00ns)   --->   "%mB_addr_13 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_33" [src/BMM_fonctions.c:23]   --->   Operation 616 'getelementptr' 'mB_addr_13' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 617 [1/1] (3.25ns)   --->   "store float %INPUT_addr_29_read, float* %mB_addr_13, align 4" [src/BMM_fonctions.c:23]   --->   Operation 617 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_49 : Operation 618 [1/1] (8.75ns)   --->   "%INPUT_addr_30_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_30)" [src/BMM_fonctions.c:23]   --->   Operation 618 'read' 'INPUT_addr_30_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_49 : Operation 619 [1/7] (8.75ns)   --->   "%INPUT_load_31_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %INPUT_addr_31, i32 1)" [src/BMM_fonctions.c:23]   --->   Operation 619 'readreq' 'INPUT_load_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 25> <Delay = 8.75>
ST_50 : Operation 620 [1/1] (0.00ns)   --->   "%mB_addr_14 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_34" [src/BMM_fonctions.c:23]   --->   Operation 620 'getelementptr' 'mB_addr_14' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 621 [1/1] (3.25ns)   --->   "store float %INPUT_addr_30_read, float* %mB_addr_14, align 8" [src/BMM_fonctions.c:23]   --->   Operation 621 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_50 : Operation 622 [1/1] (8.75ns)   --->   "%INPUT_addr_31_read = call float @_ssdm_op_Read.m_axi.floatP(float* %INPUT_addr_31)" [src/BMM_fonctions.c:23]   --->   Operation 622 'read' 'INPUT_addr_31_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 26> <Delay = 3.25>
ST_51 : Operation 623 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str8) nounwind" [src/BMM_fonctions.c:23]   --->   Operation 623 'specloopname' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 624 [1/1] (0.00ns)   --->   "%mB_addr_15 = getelementptr [256 x float]* %mB, i64 0, i64 %tmp_35" [src/BMM_fonctions.c:23]   --->   Operation 624 'getelementptr' 'mB_addr_15' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 625 [1/1] (3.25ns)   --->   "store float %INPUT_addr_31_read, float* %mB_addr_15, align 4" [src/BMM_fonctions.c:23]   --->   Operation 625 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_51 : Operation 626 [1/1] (0.00ns)   --->   "br label %.preheader3" [src/BMM_fonctions.c:22]   --->   Operation 626 'br' <Predicate = true> <Delay = 0.00>

State 52 <SV = 3> <Delay = 2.49>
ST_52 : Operation 627 [1/1] (0.00ns)   --->   "%i_2 = phi i5 [ %i_6, %4 ], [ 0, %.preheader2.preheader ]"   --->   Operation 627 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 628 [1/1] (1.36ns)   --->   "%icmp_ln24 = icmp eq i5 %i_2, -16" [src/BMM_fonctions.c:24]   --->   Operation 628 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 629 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 629 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 630 [1/1] (1.78ns)   --->   "%i_6 = add i5 %i_2, 1" [src/BMM_fonctions.c:24]   --->   Operation 630 'add' 'i_6' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 631 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %.preheader1.preheader.preheader, label %4" [src/BMM_fonctions.c:24]   --->   Operation 631 'br' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 632 [1/1] (0.00ns)   --->   "%tmp_36 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_2, i4 0)" [src/BMM_fonctions.c:25]   --->   Operation 632 'bitconcatenate' 'tmp_36' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_52 : Operation 633 [1/1] (0.00ns)   --->   "%zext_ln25_1 = zext i9 %tmp_36 to i31" [src/BMM_fonctions.c:25]   --->   Operation 633 'zext' 'zext_ln25_1' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_52 : Operation 634 [1/1] (2.49ns)   --->   "%add_ln25 = add i31 %zext_ln25_1, %p_cast159" [src/BMM_fonctions.c:25]   --->   Operation 634 'add' 'add_ln25' <Predicate = (!icmp_ln24)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 635 [1/1] (1.76ns)   --->   "br label %.preheader1.preheader" [src/BMM_fonctions.c:31]   --->   Operation 635 'br' <Predicate = (icmp_ln24)> <Delay = 1.76>

State 53 <SV = 4> <Delay = 8.75>
ST_53 : Operation 636 [1/1] (0.00ns)   --->   "%zext_ln25_2 = zext i31 %add_ln25 to i64" [src/BMM_fonctions.c:25]   --->   Operation 636 'zext' 'zext_ln25_2' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 637 [1/1] (0.00ns)   --->   "%OUTPUT_addr = getelementptr float* %OUTPUT_r, i64 %zext_ln25_2" [src/BMM_fonctions.c:25]   --->   Operation 637 'getelementptr' 'OUTPUT_addr' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 638 [1/1] (0.00ns)   --->   "%or_ln25 = or i9 %tmp_36, 1" [src/BMM_fonctions.c:25]   --->   Operation 638 'or' 'or_ln25' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 639 [1/1] (0.00ns)   --->   "%tmp_37 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25)" [src/BMM_fonctions.c:25]   --->   Operation 639 'bitconcatenate' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 640 [1/1] (3.52ns)   --->   "%add_ln25_1 = add i64 %tmp_37, %empty" [src/BMM_fonctions.c:25]   --->   Operation 640 'add' 'add_ln25_1' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 641 [1/1] (0.00ns)   --->   "%OUTPUT_addr_1 = getelementptr float* %OUTPUT_r, i64 %add_ln25_1" [src/BMM_fonctions.c:25]   --->   Operation 641 'getelementptr' 'OUTPUT_addr_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 642 [7/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 642 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 5> <Delay = 8.75>
ST_54 : Operation 643 [1/1] (0.00ns)   --->   "%or_ln25_1 = or i9 %tmp_36, 2" [src/BMM_fonctions.c:25]   --->   Operation 643 'or' 'or_ln25_1' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 644 [1/1] (0.00ns)   --->   "%tmp_38 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_1)" [src/BMM_fonctions.c:25]   --->   Operation 644 'bitconcatenate' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 645 [1/1] (3.52ns)   --->   "%add_ln25_2 = add i64 %tmp_38, %empty" [src/BMM_fonctions.c:25]   --->   Operation 645 'add' 'add_ln25_2' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 646 [1/1] (0.00ns)   --->   "%OUTPUT_addr_2 = getelementptr float* %OUTPUT_r, i64 %add_ln25_2" [src/BMM_fonctions.c:25]   --->   Operation 646 'getelementptr' 'OUTPUT_addr_2' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 647 [6/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 647 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_54 : Operation 648 [7/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 648 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 6> <Delay = 8.75>
ST_55 : Operation 649 [1/1] (0.00ns)   --->   "%or_ln25_2 = or i9 %tmp_36, 3" [src/BMM_fonctions.c:25]   --->   Operation 649 'or' 'or_ln25_2' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 650 [1/1] (0.00ns)   --->   "%tmp_39 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_2)" [src/BMM_fonctions.c:25]   --->   Operation 650 'bitconcatenate' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 651 [1/1] (3.52ns)   --->   "%add_ln25_3 = add i64 %tmp_39, %empty" [src/BMM_fonctions.c:25]   --->   Operation 651 'add' 'add_ln25_3' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 652 [1/1] (0.00ns)   --->   "%OUTPUT_addr_3 = getelementptr float* %OUTPUT_r, i64 %add_ln25_3" [src/BMM_fonctions.c:25]   --->   Operation 652 'getelementptr' 'OUTPUT_addr_3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 653 [5/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 653 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 654 [6/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 654 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_55 : Operation 655 [7/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 655 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 7> <Delay = 8.75>
ST_56 : Operation 656 [1/1] (0.00ns)   --->   "%or_ln25_3 = or i9 %tmp_36, 4" [src/BMM_fonctions.c:25]   --->   Operation 656 'or' 'or_ln25_3' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 657 [1/1] (0.00ns)   --->   "%tmp_40 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_3)" [src/BMM_fonctions.c:25]   --->   Operation 657 'bitconcatenate' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 658 [1/1] (3.52ns)   --->   "%add_ln25_4 = add i64 %tmp_40, %empty" [src/BMM_fonctions.c:25]   --->   Operation 658 'add' 'add_ln25_4' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 659 [1/1] (0.00ns)   --->   "%OUTPUT_addr_4 = getelementptr float* %OUTPUT_r, i64 %add_ln25_4" [src/BMM_fonctions.c:25]   --->   Operation 659 'getelementptr' 'OUTPUT_addr_4' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 660 [4/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 660 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_56 : Operation 661 [5/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 661 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_56 : Operation 662 [6/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 662 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_56 : Operation 663 [7/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 663 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 8> <Delay = 8.75>
ST_57 : Operation 664 [1/1] (0.00ns)   --->   "%or_ln25_4 = or i9 %tmp_36, 5" [src/BMM_fonctions.c:25]   --->   Operation 664 'or' 'or_ln25_4' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 665 [1/1] (0.00ns)   --->   "%tmp_41 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_4)" [src/BMM_fonctions.c:25]   --->   Operation 665 'bitconcatenate' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 666 [1/1] (3.52ns)   --->   "%add_ln25_5 = add i64 %tmp_41, %empty" [src/BMM_fonctions.c:25]   --->   Operation 666 'add' 'add_ln25_5' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_57 : Operation 667 [1/1] (0.00ns)   --->   "%OUTPUT_addr_5 = getelementptr float* %OUTPUT_r, i64 %add_ln25_5" [src/BMM_fonctions.c:25]   --->   Operation 667 'getelementptr' 'OUTPUT_addr_5' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 668 [3/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 668 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 669 [4/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 669 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 670 [5/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 670 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 671 [6/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 671 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 672 [7/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 672 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 9> <Delay = 8.75>
ST_58 : Operation 673 [1/1] (0.00ns)   --->   "%or_ln25_5 = or i9 %tmp_36, 6" [src/BMM_fonctions.c:25]   --->   Operation 673 'or' 'or_ln25_5' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 674 [1/1] (0.00ns)   --->   "%tmp_42 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_5)" [src/BMM_fonctions.c:25]   --->   Operation 674 'bitconcatenate' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 675 [1/1] (3.52ns)   --->   "%add_ln25_6 = add i64 %tmp_42, %empty" [src/BMM_fonctions.c:25]   --->   Operation 675 'add' 'add_ln25_6' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_58 : Operation 676 [1/1] (0.00ns)   --->   "%OUTPUT_addr_6 = getelementptr float* %OUTPUT_r, i64 %add_ln25_6" [src/BMM_fonctions.c:25]   --->   Operation 676 'getelementptr' 'OUTPUT_addr_6' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 677 [2/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 677 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 678 [3/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 678 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 679 [4/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 679 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 680 [5/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 680 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 681 [6/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 681 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 682 [7/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 682 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 10> <Delay = 8.75>
ST_59 : Operation 683 [1/1] (0.00ns)   --->   "%or_ln25_6 = or i9 %tmp_36, 7" [src/BMM_fonctions.c:25]   --->   Operation 683 'or' 'or_ln25_6' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 684 [1/1] (0.00ns)   --->   "%tmp_43 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_6)" [src/BMM_fonctions.c:25]   --->   Operation 684 'bitconcatenate' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 685 [1/1] (3.52ns)   --->   "%add_ln25_7 = add i64 %tmp_43, %empty" [src/BMM_fonctions.c:25]   --->   Operation 685 'add' 'add_ln25_7' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 686 [1/1] (0.00ns)   --->   "%OUTPUT_addr_7 = getelementptr float* %OUTPUT_r, i64 %add_ln25_7" [src/BMM_fonctions.c:25]   --->   Operation 686 'getelementptr' 'OUTPUT_addr_7' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 687 [1/7] (8.75ns)   --->   "%OUTPUT_load_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 687 'readreq' 'OUTPUT_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 688 [2/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 688 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 689 [3/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 689 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 690 [4/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 690 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 691 [5/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 691 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 692 [6/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 692 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_59 : Operation 693 [7/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 693 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 11> <Delay = 8.75>
ST_60 : Operation 694 [1/1] (0.00ns)   --->   "%or_ln25_7 = or i9 %tmp_36, 8" [src/BMM_fonctions.c:25]   --->   Operation 694 'or' 'or_ln25_7' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 695 [1/1] (0.00ns)   --->   "%tmp_44 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_7)" [src/BMM_fonctions.c:25]   --->   Operation 695 'bitconcatenate' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 696 [1/1] (3.52ns)   --->   "%add_ln25_8 = add i64 %tmp_44, %empty" [src/BMM_fonctions.c:25]   --->   Operation 696 'add' 'add_ln25_8' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 697 [1/1] (0.00ns)   --->   "%OUTPUT_addr_8 = getelementptr float* %OUTPUT_r, i64 %add_ln25_8" [src/BMM_fonctions.c:25]   --->   Operation 697 'getelementptr' 'OUTPUT_addr_8' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 698 [1/1] (8.75ns)   --->   "%OUTPUT_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr)" [src/BMM_fonctions.c:25]   --->   Operation 698 'read' 'OUTPUT_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 699 [1/7] (8.75ns)   --->   "%OUTPUT_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_1, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 699 'readreq' 'OUTPUT_load_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 700 [2/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 700 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 701 [3/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 701 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 702 [4/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 702 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 703 [5/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 703 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 704 [6/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 704 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 705 [7/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 705 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 12> <Delay = 8.75>
ST_61 : Operation 706 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i9 %tmp_36 to i64" [src/BMM_fonctions.c:25]   --->   Operation 706 'zext' 'zext_ln25' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 707 [1/1] (0.00ns)   --->   "%or_ln25_8 = or i9 %tmp_36, 9" [src/BMM_fonctions.c:25]   --->   Operation 707 'or' 'or_ln25_8' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 708 [1/1] (0.00ns)   --->   "%tmp_45 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_8)" [src/BMM_fonctions.c:25]   --->   Operation 708 'bitconcatenate' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 709 [1/1] (3.52ns)   --->   "%add_ln25_9 = add i64 %tmp_45, %empty" [src/BMM_fonctions.c:25]   --->   Operation 709 'add' 'add_ln25_9' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 710 [1/1] (0.00ns)   --->   "%OUTPUT_addr_9 = getelementptr float* %OUTPUT_r, i64 %add_ln25_9" [src/BMM_fonctions.c:25]   --->   Operation 710 'getelementptr' 'OUTPUT_addr_9' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 711 [1/1] (0.00ns)   --->   "%mC_addr = getelementptr [256 x float]* %mC, i64 0, i64 %zext_ln25" [src/BMM_fonctions.c:25]   --->   Operation 711 'getelementptr' 'mC_addr' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 712 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_read, float* %mC_addr, align 16" [src/BMM_fonctions.c:25]   --->   Operation 712 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_61 : Operation 713 [1/1] (8.75ns)   --->   "%OUTPUT_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_1)" [src/BMM_fonctions.c:25]   --->   Operation 713 'read' 'OUTPUT_addr_1_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 714 [1/7] (8.75ns)   --->   "%OUTPUT_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_2, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 714 'readreq' 'OUTPUT_load_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 715 [2/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 715 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 716 [3/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 716 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 717 [4/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 717 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 718 [5/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 718 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 719 [6/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 719 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_61 : Operation 720 [7/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 720 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 13> <Delay = 8.75>
ST_62 : Operation 721 [1/1] (0.00ns)   --->   "%or_ln25_9 = or i9 %tmp_36, 10" [src/BMM_fonctions.c:25]   --->   Operation 721 'or' 'or_ln25_9' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 722 [1/1] (0.00ns)   --->   "%tmp_46 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_9)" [src/BMM_fonctions.c:25]   --->   Operation 722 'bitconcatenate' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 723 [1/1] (3.52ns)   --->   "%add_ln25_10 = add i64 %tmp_46, %empty" [src/BMM_fonctions.c:25]   --->   Operation 723 'add' 'add_ln25_10' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 724 [1/1] (0.00ns)   --->   "%OUTPUT_addr_10 = getelementptr float* %OUTPUT_r, i64 %add_ln25_10" [src/BMM_fonctions.c:25]   --->   Operation 724 'getelementptr' 'OUTPUT_addr_10' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 725 [1/1] (0.00ns)   --->   "%mC_addr_1 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_37" [src/BMM_fonctions.c:25]   --->   Operation 725 'getelementptr' 'mC_addr_1' <Predicate = true> <Delay = 0.00>
ST_62 : Operation 726 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_1_read, float* %mC_addr_1, align 4" [src/BMM_fonctions.c:25]   --->   Operation 726 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_62 : Operation 727 [1/1] (8.75ns)   --->   "%OUTPUT_addr_2_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_2)" [src/BMM_fonctions.c:25]   --->   Operation 727 'read' 'OUTPUT_addr_2_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 728 [1/7] (8.75ns)   --->   "%OUTPUT_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_3, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 728 'readreq' 'OUTPUT_load_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 729 [2/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 729 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 730 [3/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 730 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 731 [4/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 731 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 732 [5/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 732 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 733 [6/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 733 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_62 : Operation 734 [7/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 734 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 14> <Delay = 8.75>
ST_63 : Operation 735 [1/1] (0.00ns)   --->   "%or_ln25_10 = or i9 %tmp_36, 11" [src/BMM_fonctions.c:25]   --->   Operation 735 'or' 'or_ln25_10' <Predicate = true> <Delay = 0.00>
ST_63 : Operation 736 [1/1] (0.00ns)   --->   "%tmp_47 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_10)" [src/BMM_fonctions.c:25]   --->   Operation 736 'bitconcatenate' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_63 : Operation 737 [1/1] (3.52ns)   --->   "%add_ln25_11 = add i64 %tmp_47, %empty" [src/BMM_fonctions.c:25]   --->   Operation 737 'add' 'add_ln25_11' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 738 [1/1] (0.00ns)   --->   "%OUTPUT_addr_11 = getelementptr float* %OUTPUT_r, i64 %add_ln25_11" [src/BMM_fonctions.c:25]   --->   Operation 738 'getelementptr' 'OUTPUT_addr_11' <Predicate = true> <Delay = 0.00>
ST_63 : Operation 739 [1/1] (0.00ns)   --->   "%mC_addr_2 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_38" [src/BMM_fonctions.c:25]   --->   Operation 739 'getelementptr' 'mC_addr_2' <Predicate = true> <Delay = 0.00>
ST_63 : Operation 740 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_2_read, float* %mC_addr_2, align 8" [src/BMM_fonctions.c:25]   --->   Operation 740 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_63 : Operation 741 [1/1] (8.75ns)   --->   "%OUTPUT_addr_3_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_3)" [src/BMM_fonctions.c:25]   --->   Operation 741 'read' 'OUTPUT_addr_3_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 742 [1/7] (8.75ns)   --->   "%OUTPUT_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_4, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 742 'readreq' 'OUTPUT_load_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 743 [2/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 743 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 744 [3/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 744 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 745 [4/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 745 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 746 [5/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 746 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 747 [6/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 747 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_63 : Operation 748 [7/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 748 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 15> <Delay = 8.75>
ST_64 : Operation 749 [1/1] (0.00ns)   --->   "%or_ln25_11 = or i9 %tmp_36, 12" [src/BMM_fonctions.c:25]   --->   Operation 749 'or' 'or_ln25_11' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 750 [1/1] (0.00ns)   --->   "%tmp_48 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_11)" [src/BMM_fonctions.c:25]   --->   Operation 750 'bitconcatenate' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 751 [1/1] (3.52ns)   --->   "%add_ln25_12 = add i64 %tmp_48, %empty" [src/BMM_fonctions.c:25]   --->   Operation 751 'add' 'add_ln25_12' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 752 [1/1] (0.00ns)   --->   "%OUTPUT_addr_12 = getelementptr float* %OUTPUT_r, i64 %add_ln25_12" [src/BMM_fonctions.c:25]   --->   Operation 752 'getelementptr' 'OUTPUT_addr_12' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 753 [1/1] (0.00ns)   --->   "%mC_addr_3 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_39" [src/BMM_fonctions.c:25]   --->   Operation 753 'getelementptr' 'mC_addr_3' <Predicate = true> <Delay = 0.00>
ST_64 : Operation 754 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_3_read, float* %mC_addr_3, align 4" [src/BMM_fonctions.c:25]   --->   Operation 754 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_64 : Operation 755 [1/1] (8.75ns)   --->   "%OUTPUT_addr_4_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_4)" [src/BMM_fonctions.c:25]   --->   Operation 755 'read' 'OUTPUT_addr_4_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 756 [1/7] (8.75ns)   --->   "%OUTPUT_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_5, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 756 'readreq' 'OUTPUT_load_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 757 [2/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 757 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 758 [3/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 758 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 759 [4/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 759 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 760 [5/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 760 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 761 [6/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 761 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 762 [7/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 762 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 16> <Delay = 8.75>
ST_65 : Operation 763 [1/1] (0.00ns)   --->   "%or_ln25_12 = or i9 %tmp_36, 13" [src/BMM_fonctions.c:25]   --->   Operation 763 'or' 'or_ln25_12' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 764 [1/1] (0.00ns)   --->   "%tmp_49 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_12)" [src/BMM_fonctions.c:25]   --->   Operation 764 'bitconcatenate' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 765 [1/1] (3.52ns)   --->   "%add_ln25_13 = add i64 %tmp_49, %empty" [src/BMM_fonctions.c:25]   --->   Operation 765 'add' 'add_ln25_13' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 766 [1/1] (0.00ns)   --->   "%OUTPUT_addr_13 = getelementptr float* %OUTPUT_r, i64 %add_ln25_13" [src/BMM_fonctions.c:25]   --->   Operation 766 'getelementptr' 'OUTPUT_addr_13' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 767 [1/1] (0.00ns)   --->   "%mC_addr_4 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_40" [src/BMM_fonctions.c:25]   --->   Operation 767 'getelementptr' 'mC_addr_4' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 768 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_4_read, float* %mC_addr_4, align 16" [src/BMM_fonctions.c:25]   --->   Operation 768 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_65 : Operation 769 [1/1] (8.75ns)   --->   "%OUTPUT_addr_5_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_5)" [src/BMM_fonctions.c:25]   --->   Operation 769 'read' 'OUTPUT_addr_5_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 770 [1/7] (8.75ns)   --->   "%OUTPUT_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_6, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 770 'readreq' 'OUTPUT_load_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 771 [2/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 771 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 772 [3/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 772 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 773 [4/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 773 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 774 [5/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 774 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 775 [6/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 775 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_65 : Operation 776 [7/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 776 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 17> <Delay = 8.75>
ST_66 : Operation 777 [1/1] (0.00ns)   --->   "%or_ln25_13 = or i9 %tmp_36, 14" [src/BMM_fonctions.c:25]   --->   Operation 777 'or' 'or_ln25_13' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 778 [1/1] (0.00ns)   --->   "%tmp_50 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_13)" [src/BMM_fonctions.c:25]   --->   Operation 778 'bitconcatenate' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 779 [1/1] (3.52ns)   --->   "%add_ln25_14 = add i64 %tmp_50, %empty" [src/BMM_fonctions.c:25]   --->   Operation 779 'add' 'add_ln25_14' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 780 [1/1] (0.00ns)   --->   "%OUTPUT_addr_14 = getelementptr float* %OUTPUT_r, i64 %add_ln25_14" [src/BMM_fonctions.c:25]   --->   Operation 780 'getelementptr' 'OUTPUT_addr_14' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 781 [1/1] (0.00ns)   --->   "%mC_addr_5 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_41" [src/BMM_fonctions.c:25]   --->   Operation 781 'getelementptr' 'mC_addr_5' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 782 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_5_read, float* %mC_addr_5, align 4" [src/BMM_fonctions.c:25]   --->   Operation 782 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_66 : Operation 783 [1/1] (8.75ns)   --->   "%OUTPUT_addr_6_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_6)" [src/BMM_fonctions.c:25]   --->   Operation 783 'read' 'OUTPUT_addr_6_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 784 [1/7] (8.75ns)   --->   "%OUTPUT_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_7, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 784 'readreq' 'OUTPUT_load_7_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 785 [2/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 785 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 786 [3/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 786 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 787 [4/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 787 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 788 [5/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 788 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 789 [6/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 789 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_66 : Operation 790 [7/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 790 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 18> <Delay = 8.75>
ST_67 : Operation 791 [1/1] (0.00ns)   --->   "%or_ln25_14 = or i9 %tmp_36, 15" [src/BMM_fonctions.c:25]   --->   Operation 791 'or' 'or_ln25_14' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 792 [1/1] (0.00ns)   --->   "%tmp_51 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln25_14)" [src/BMM_fonctions.c:25]   --->   Operation 792 'bitconcatenate' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 793 [1/1] (3.52ns)   --->   "%add_ln25_15 = add i64 %tmp_51, %empty" [src/BMM_fonctions.c:25]   --->   Operation 793 'add' 'add_ln25_15' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 794 [1/1] (0.00ns)   --->   "%OUTPUT_addr_15 = getelementptr float* %OUTPUT_r, i64 %add_ln25_15" [src/BMM_fonctions.c:25]   --->   Operation 794 'getelementptr' 'OUTPUT_addr_15' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 795 [1/1] (0.00ns)   --->   "%mC_addr_6 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_42" [src/BMM_fonctions.c:25]   --->   Operation 795 'getelementptr' 'mC_addr_6' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 796 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_6_read, float* %mC_addr_6, align 8" [src/BMM_fonctions.c:25]   --->   Operation 796 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_67 : Operation 797 [1/1] (8.75ns)   --->   "%OUTPUT_addr_7_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_7)" [src/BMM_fonctions.c:25]   --->   Operation 797 'read' 'OUTPUT_addr_7_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 798 [1/7] (8.75ns)   --->   "%OUTPUT_load_8_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_8, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 798 'readreq' 'OUTPUT_load_8_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 799 [2/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 799 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 800 [3/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 800 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 801 [4/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 801 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 802 [5/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 802 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 803 [6/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 803 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_67 : Operation 804 [7/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 804 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 19> <Delay = 8.75>
ST_68 : Operation 805 [1/1] (0.00ns)   --->   "%mC_addr_7 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_43" [src/BMM_fonctions.c:25]   --->   Operation 805 'getelementptr' 'mC_addr_7' <Predicate = true> <Delay = 0.00>
ST_68 : Operation 806 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_7_read, float* %mC_addr_7, align 4" [src/BMM_fonctions.c:25]   --->   Operation 806 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_68 : Operation 807 [1/1] (8.75ns)   --->   "%OUTPUT_addr_8_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_8)" [src/BMM_fonctions.c:25]   --->   Operation 807 'read' 'OUTPUT_addr_8_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 808 [1/7] (8.75ns)   --->   "%OUTPUT_load_9_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_9, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 808 'readreq' 'OUTPUT_load_9_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 809 [2/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 809 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 810 [3/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 810 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 811 [4/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 811 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 812 [5/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 812 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 813 [6/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 813 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_68 : Operation 814 [7/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 814 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 20> <Delay = 8.75>
ST_69 : Operation 815 [1/1] (0.00ns)   --->   "%mC_addr_8 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_44" [src/BMM_fonctions.c:25]   --->   Operation 815 'getelementptr' 'mC_addr_8' <Predicate = true> <Delay = 0.00>
ST_69 : Operation 816 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_8_read, float* %mC_addr_8, align 16" [src/BMM_fonctions.c:25]   --->   Operation 816 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_69 : Operation 817 [1/1] (8.75ns)   --->   "%OUTPUT_addr_9_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_9)" [src/BMM_fonctions.c:25]   --->   Operation 817 'read' 'OUTPUT_addr_9_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 818 [1/7] (8.75ns)   --->   "%OUTPUT_load_10_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_10, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 818 'readreq' 'OUTPUT_load_10_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 819 [2/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 819 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 820 [3/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 820 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 821 [4/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 821 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 822 [5/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 822 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_69 : Operation 823 [6/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 823 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 21> <Delay = 8.75>
ST_70 : Operation 824 [1/1] (0.00ns)   --->   "%mC_addr_9 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_45" [src/BMM_fonctions.c:25]   --->   Operation 824 'getelementptr' 'mC_addr_9' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 825 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_9_read, float* %mC_addr_9, align 4" [src/BMM_fonctions.c:25]   --->   Operation 825 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_70 : Operation 826 [1/1] (8.75ns)   --->   "%OUTPUT_addr_10_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_10)" [src/BMM_fonctions.c:25]   --->   Operation 826 'read' 'OUTPUT_addr_10_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 827 [1/7] (8.75ns)   --->   "%OUTPUT_load_11_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_11, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 827 'readreq' 'OUTPUT_load_11_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 828 [2/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 828 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 829 [3/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 829 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 830 [4/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 830 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 831 [5/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 831 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 22> <Delay = 8.75>
ST_71 : Operation 832 [1/1] (0.00ns)   --->   "%mC_addr_10 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_46" [src/BMM_fonctions.c:25]   --->   Operation 832 'getelementptr' 'mC_addr_10' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 833 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_10_read, float* %mC_addr_10, align 8" [src/BMM_fonctions.c:25]   --->   Operation 833 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_71 : Operation 834 [1/1] (8.75ns)   --->   "%OUTPUT_addr_11_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_11)" [src/BMM_fonctions.c:25]   --->   Operation 834 'read' 'OUTPUT_addr_11_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 835 [1/7] (8.75ns)   --->   "%OUTPUT_load_12_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_12, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 835 'readreq' 'OUTPUT_load_12_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 836 [2/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 836 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 837 [3/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 837 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 838 [4/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 838 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 23> <Delay = 8.75>
ST_72 : Operation 839 [1/1] (0.00ns)   --->   "%mC_addr_11 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_47" [src/BMM_fonctions.c:25]   --->   Operation 839 'getelementptr' 'mC_addr_11' <Predicate = true> <Delay = 0.00>
ST_72 : Operation 840 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_11_read, float* %mC_addr_11, align 4" [src/BMM_fonctions.c:25]   --->   Operation 840 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_72 : Operation 841 [1/1] (8.75ns)   --->   "%OUTPUT_addr_12_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_12)" [src/BMM_fonctions.c:25]   --->   Operation 841 'read' 'OUTPUT_addr_12_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_72 : Operation 842 [1/7] (8.75ns)   --->   "%OUTPUT_load_13_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_13, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 842 'readreq' 'OUTPUT_load_13_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_72 : Operation 843 [2/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 843 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_72 : Operation 844 [3/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 844 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 24> <Delay = 8.75>
ST_73 : Operation 845 [1/1] (0.00ns)   --->   "%mC_addr_12 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_48" [src/BMM_fonctions.c:25]   --->   Operation 845 'getelementptr' 'mC_addr_12' <Predicate = true> <Delay = 0.00>
ST_73 : Operation 846 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_12_read, float* %mC_addr_12, align 16" [src/BMM_fonctions.c:25]   --->   Operation 846 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_73 : Operation 847 [1/1] (8.75ns)   --->   "%OUTPUT_addr_13_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_13)" [src/BMM_fonctions.c:25]   --->   Operation 847 'read' 'OUTPUT_addr_13_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_73 : Operation 848 [1/7] (8.75ns)   --->   "%OUTPUT_load_14_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_14, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 848 'readreq' 'OUTPUT_load_14_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_73 : Operation 849 [2/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 849 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 25> <Delay = 8.75>
ST_74 : Operation 850 [1/1] (0.00ns)   --->   "%mC_addr_13 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_49" [src/BMM_fonctions.c:25]   --->   Operation 850 'getelementptr' 'mC_addr_13' <Predicate = true> <Delay = 0.00>
ST_74 : Operation 851 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_13_read, float* %mC_addr_13, align 4" [src/BMM_fonctions.c:25]   --->   Operation 851 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_74 : Operation 852 [1/1] (8.75ns)   --->   "%OUTPUT_addr_14_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_14)" [src/BMM_fonctions.c:25]   --->   Operation 852 'read' 'OUTPUT_addr_14_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_74 : Operation 853 [1/7] (8.75ns)   --->   "%OUTPUT_load_15_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %OUTPUT_addr_15, i32 1)" [src/BMM_fonctions.c:25]   --->   Operation 853 'readreq' 'OUTPUT_load_15_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 26> <Delay = 8.75>
ST_75 : Operation 854 [1/1] (0.00ns)   --->   "%mC_addr_14 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_50" [src/BMM_fonctions.c:25]   --->   Operation 854 'getelementptr' 'mC_addr_14' <Predicate = true> <Delay = 0.00>
ST_75 : Operation 855 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_14_read, float* %mC_addr_14, align 8" [src/BMM_fonctions.c:25]   --->   Operation 855 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_75 : Operation 856 [1/1] (8.75ns)   --->   "%OUTPUT_addr_15_read = call float @_ssdm_op_Read.m_axi.floatP(float* %OUTPUT_addr_15)" [src/BMM_fonctions.c:25]   --->   Operation 856 'read' 'OUTPUT_addr_15_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 27> <Delay = 3.25>
ST_76 : Operation 857 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str9) nounwind" [src/BMM_fonctions.c:25]   --->   Operation 857 'specloopname' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 858 [1/1] (0.00ns)   --->   "%mC_addr_15 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_51" [src/BMM_fonctions.c:25]   --->   Operation 858 'getelementptr' 'mC_addr_15' <Predicate = true> <Delay = 0.00>
ST_76 : Operation 859 [1/1] (3.25ns)   --->   "store float %OUTPUT_addr_15_read, float* %mC_addr_15, align 4" [src/BMM_fonctions.c:25]   --->   Operation 859 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_76 : Operation 860 [1/1] (0.00ns)   --->   "br label %.preheader2" [src/BMM_fonctions.c:24]   --->   Operation 860 'br' <Predicate = true> <Delay = 0.00>

State 77 <SV = 4> <Delay = 5.70>
ST_77 : Operation 861 [1/1] (0.00ns)   --->   "%indvar_flatten223 = phi i9 [ %add_ln30, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:30]   --->   Operation 861 'phi' 'indvar_flatten223' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 862 [1/1] (0.00ns)   --->   "%i_3 = phi i5 [ %select_ln30, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:30]   --->   Operation 862 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 863 [1/1] (0.00ns)   --->   "%indvar_flatten107 = phi i8 [ %select_ln31_44, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:31]   --->   Operation 863 'phi' 'indvar_flatten107' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 864 [1/1] (0.00ns)   --->   "%j_0 = phi i5 [ %select_ln31_21, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:31]   --->   Operation 864 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 865 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 [ %select_ln32_21, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:32]   --->   Operation 865 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 866 [1/1] (0.00ns)   --->   "%k_0 = phi i5 [ %select_ln32_1, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]" [src/BMM_fonctions.c:32]   --->   Operation 866 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 867 [1/1] (0.00ns)   --->   "%ii_0 = phi i3 [ %ii, %ii_loop ], [ 0, %.preheader1.preheader.preheader ]"   --->   Operation 867 'phi' 'ii_0' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 868 [1/1] (0.00ns)   --->   "%trunc_ln31 = trunc i5 %j_0 to i4" [src/BMM_fonctions.c:31]   --->   Operation 868 'trunc' 'trunc_ln31' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 869 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i5 %j_0 to i9" [src/BMM_fonctions.c:38]   --->   Operation 869 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i5 %j_0 to i10" [src/BMM_fonctions.c:38]   --->   Operation 870 'zext' 'zext_ln38_1' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 871 [1/1] (0.00ns)   --->   "%or_ln38_3 = or i4 %trunc_ln31, 1" [src/BMM_fonctions.c:38]   --->   Operation 871 'or' 'or_ln38_3' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 872 [1/1] (0.00ns)   --->   "%or_ln38_4 = or i4 %trunc_ln31, 2" [src/BMM_fonctions.c:38]   --->   Operation 872 'or' 'or_ln38_4' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 873 [1/1] (0.00ns)   --->   "%or_ln38_5 = or i4 %trunc_ln31, 3" [src/BMM_fonctions.c:38]   --->   Operation 873 'or' 'or_ln38_5' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 874 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i5 %k_0 to i4" [src/BMM_fonctions.c:32]   --->   Operation 874 'trunc' 'trunc_ln32' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 875 [1/1] (0.00ns)   --->   "%tmp_52 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k_0, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 875 'bitconcatenate' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln38_2 = zext i9 %tmp_52 to i10" [src/BMM_fonctions.c:38]   --->   Operation 876 'zext' 'zext_ln38_2' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 877 [1/1] (1.82ns)   --->   "%add_ln38_1 = add i10 %zext_ln38_2, %zext_ln38_1" [src/BMM_fonctions.c:38]   --->   Operation 877 'add' 'add_ln38_1' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 878 [1/1] (0.00ns)   --->   "%tmp_53 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k_0, i4 %or_ln38_3)" [src/BMM_fonctions.c:38]   --->   Operation 878 'bitconcatenate' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 879 [1/1] (0.00ns)   --->   "%tmp_54 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k_0, i4 %or_ln38_4)" [src/BMM_fonctions.c:38]   --->   Operation 879 'bitconcatenate' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 880 [1/1] (0.00ns)   --->   "%tmp_55 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k_0, i4 %or_ln38_5)" [src/BMM_fonctions.c:38]   --->   Operation 880 'bitconcatenate' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 881 [1/1] (0.00ns)   --->   "%or_ln38 = or i4 %trunc_ln32, 1" [src/BMM_fonctions.c:38]   --->   Operation 881 'or' 'or_ln38' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 882 [1/1] (0.00ns)   --->   "%tmp_56 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 882 'bitconcatenate' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 883 [1/1] (0.00ns)   --->   "%zext_ln38_3 = zext i8 %tmp_56 to i9" [src/BMM_fonctions.c:38]   --->   Operation 883 'zext' 'zext_ln38_3' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 884 [1/1] (1.91ns)   --->   "%add_ln38_2 = add i9 %zext_ln38_3, %zext_ln38" [src/BMM_fonctions.c:38]   --->   Operation 884 'add' 'add_ln38_2' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 885 [1/1] (0.00ns)   --->   "%tmp_57 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38, i4 %or_ln38_3)" [src/BMM_fonctions.c:38]   --->   Operation 885 'bitconcatenate' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 886 [1/1] (0.00ns)   --->   "%tmp_58 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38, i4 %or_ln38_4)" [src/BMM_fonctions.c:38]   --->   Operation 886 'bitconcatenate' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 887 [1/1] (0.00ns)   --->   "%tmp_59 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38, i4 %or_ln38_5)" [src/BMM_fonctions.c:38]   --->   Operation 887 'bitconcatenate' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 888 [1/1] (0.00ns)   --->   "%or_ln38_1 = or i4 %trunc_ln32, 2" [src/BMM_fonctions.c:38]   --->   Operation 888 'or' 'or_ln38_1' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 889 [1/1] (0.00ns)   --->   "%tmp_60 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_1, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 889 'bitconcatenate' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 890 [1/1] (0.00ns)   --->   "%zext_ln38_4 = zext i8 %tmp_60 to i9" [src/BMM_fonctions.c:38]   --->   Operation 890 'zext' 'zext_ln38_4' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 891 [1/1] (1.91ns)   --->   "%add_ln38_3 = add i9 %zext_ln38_4, %zext_ln38" [src/BMM_fonctions.c:38]   --->   Operation 891 'add' 'add_ln38_3' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 892 [1/1] (0.00ns)   --->   "%tmp_61 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_1, i4 %or_ln38_3)" [src/BMM_fonctions.c:38]   --->   Operation 892 'bitconcatenate' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 893 [1/1] (0.00ns)   --->   "%tmp_62 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_1, i4 %or_ln38_4)" [src/BMM_fonctions.c:38]   --->   Operation 893 'bitconcatenate' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 894 [1/1] (0.00ns)   --->   "%tmp_63 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_1, i4 %or_ln38_5)" [src/BMM_fonctions.c:38]   --->   Operation 894 'bitconcatenate' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 895 [1/1] (0.00ns)   --->   "%or_ln38_2 = or i4 %trunc_ln32, 3" [src/BMM_fonctions.c:38]   --->   Operation 895 'or' 'or_ln38_2' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 896 [1/1] (0.00ns)   --->   "%tmp_64 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_2, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 896 'bitconcatenate' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 897 [1/1] (0.00ns)   --->   "%zext_ln38_5 = zext i8 %tmp_64 to i9" [src/BMM_fonctions.c:38]   --->   Operation 897 'zext' 'zext_ln38_5' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 898 [1/1] (1.91ns)   --->   "%add_ln38_4 = add i9 %zext_ln38_5, %zext_ln38" [src/BMM_fonctions.c:38]   --->   Operation 898 'add' 'add_ln38_4' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 899 [1/1] (0.00ns)   --->   "%tmp_65 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_2, i4 %or_ln38_3)" [src/BMM_fonctions.c:38]   --->   Operation 899 'bitconcatenate' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 900 [1/1] (0.00ns)   --->   "%tmp_66 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_2, i4 %or_ln38_4)" [src/BMM_fonctions.c:38]   --->   Operation 900 'bitconcatenate' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 901 [1/1] (0.00ns)   --->   "%tmp_67 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_2, i4 %or_ln38_5)" [src/BMM_fonctions.c:38]   --->   Operation 901 'bitconcatenate' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 902 [1/1] (1.66ns)   --->   "%icmp_ln30 = icmp eq i9 %indvar_flatten223, -256" [src/BMM_fonctions.c:30]   --->   Operation 902 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 903 [1/1] (1.82ns)   --->   "%add_ln30 = add i9 1, %indvar_flatten223" [src/BMM_fonctions.c:30]   --->   Operation 903 'add' 'add_ln30' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 904 [1/1] (0.00ns)   --->   "br i1 %icmp_ln30, label %.preheader.preheader, label %ii_loop" [src/BMM_fonctions.c:30]   --->   Operation 904 'br' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 905 [1/1] (1.78ns)   --->   "%i_8 = add i5 4, %i_3" [src/BMM_fonctions.c:30]   --->   Operation 905 'add' 'i_8' <Predicate = (!icmp_ln30)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 906 [1/1] (1.55ns)   --->   "%icmp_ln31 = icmp eq i8 %indvar_flatten107, 64" [src/BMM_fonctions.c:31]   --->   Operation 906 'icmp' 'icmp_ln31' <Predicate = (!icmp_ln30)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 907 [1/1] (1.21ns)   --->   "%select_ln31 = select i1 %icmp_ln31, i5 0, i5 %j_0" [src/BMM_fonctions.c:31]   --->   Operation 907 'select' 'select_ln31' <Predicate = (!icmp_ln30)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_77 : Operation 908 [1/1] (0.97ns)   --->   "%xor_ln31 = xor i1 %icmp_ln31, true" [src/BMM_fonctions.c:31]   --->   Operation 908 'xor' 'xor_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 909 [1/1] (1.13ns)   --->   "%icmp_ln35 = icmp eq i3 %ii_0, -4" [src/BMM_fonctions.c:35]   --->   Operation 909 'icmp' 'icmp_ln35' <Predicate = (!icmp_ln30)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 910 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%and_ln31 = and i1 %icmp_ln35, %xor_ln31" [src/BMM_fonctions.c:31]   --->   Operation 910 'and' 'and_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 911 [1/1] (1.42ns)   --->   "%icmp_ln32 = icmp eq i6 %indvar_flatten, 16" [src/BMM_fonctions.c:32]   --->   Operation 911 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln30)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 912 [1/1] (0.97ns)   --->   "%and_ln31_1 = and i1 %icmp_ln32, %xor_ln31" [src/BMM_fonctions.c:31]   --->   Operation 912 'and' 'and_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 913 [1/1] (1.78ns)   --->   "%j = add i5 4, %select_ln31" [src/BMM_fonctions.c:31]   --->   Operation 913 'add' 'j' <Predicate = (!icmp_ln30)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 914 [1/1] (0.97ns)   --->   "%or_ln31 = or i1 %and_ln31_1, %icmp_ln31" [src/BMM_fonctions.c:31]   --->   Operation 914 'or' 'or_ln31' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 915 [1/1] (1.21ns)   --->   "%select_ln31_20 = select i1 %or_ln31, i5 0, i5 %k_0" [src/BMM_fonctions.c:31]   --->   Operation 915 'select' 'select_ln31_20' <Predicate = (!icmp_ln30)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_77 : Operation 916 [1/1] (0.00ns)   --->   "%trunc_ln31_1 = trunc i5 %j to i4" [src/BMM_fonctions.c:31]   --->   Operation 916 'trunc' 'trunc_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_77 : Operation 917 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%xor_ln31_1 = xor i1 %icmp_ln32, true" [src/BMM_fonctions.c:31]   --->   Operation 917 'xor' 'xor_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 918 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%or_ln31_1 = or i1 %icmp_ln31, %xor_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 918 'or' 'or_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 919 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln31_2 = and i1 %and_ln31, %or_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 919 'and' 'and_ln31_2' <Predicate = (!icmp_ln30)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 920 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%or_ln32 = or i1 %and_ln31_2, %and_ln31_1" [src/BMM_fonctions.c:32]   --->   Operation 920 'or' 'or_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 921 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%or_ln32_1 = or i1 %or_ln32, %icmp_ln31" [src/BMM_fonctions.c:32]   --->   Operation 921 'or' 'or_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 922 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln32 = select i1 %or_ln32_1, i3 0, i3 %ii_0" [src/BMM_fonctions.c:32]   --->   Operation 922 'select' 'select_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_77 : Operation 923 [1/1] (1.82ns)   --->   "%add_ln32_1 = add i6 1, %indvar_flatten" [src/BMM_fonctions.c:32]   --->   Operation 923 'add' 'add_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 924 [1/1] (1.91ns)   --->   "%add_ln31_1 = add i8 1, %indvar_flatten107" [src/BMM_fonctions.c:31]   --->   Operation 924 'add' 'add_ln31_1' <Predicate = (!icmp_ln30)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 5> <Delay = 8.07>
ST_78 : Operation 925 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_22)   --->   "%select_ln31_1 = select i1 %icmp_ln31, i4 1, i4 %or_ln38_3" [src/BMM_fonctions.c:31]   --->   Operation 925 'select' 'select_ln31_1' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%select_ln31_4 = select i1 %icmp_ln31, i10 0, i10 %add_ln38_1" [src/BMM_fonctions.c:31]   --->   Operation 926 'select' 'select_ln31_4' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 927 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%select_ln31_8 = select i1 %icmp_ln31, i9 1, i9 %tmp_53" [src/BMM_fonctions.c:31]   --->   Operation 927 'select' 'select_ln31_8' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 928 [1/1] (1.21ns)   --->   "%select_ln30 = select i1 %icmp_ln31, i5 %i_8, i5 %i_3" [src/BMM_fonctions.c:30]   --->   Operation 928 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 929 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%zext_ln31_12 = zext i5 %j to i10" [src/BMM_fonctions.c:31]   --->   Operation 929 'zext' 'zext_ln31_12' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 930 [1/1] (1.21ns)   --->   "%select_ln31_21 = select i1 %and_ln31_1, i5 %j, i5 %select_ln31" [src/BMM_fonctions.c:31]   --->   Operation 930 'select' 'select_ln31_21' <Predicate = (!icmp_ln30)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 931 [1/1] (0.00ns)   --->   "%zext_ln31_14 = zext i5 %select_ln31_21 to i10" [src/BMM_fonctions.c:31]   --->   Operation 931 'zext' 'zext_ln31_14' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 932 [1/1] (0.00ns)   --->   "%or_ln38_6 = or i4 %trunc_ln31_1, 1" [src/BMM_fonctions.c:38]   --->   Operation 932 'or' 'or_ln38_6' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 933 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%zext_ln31_15 = zext i4 %or_ln38_6 to i9" [src/BMM_fonctions.c:31]   --->   Operation 933 'zext' 'zext_ln31_15' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 934 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln31_22 = select i1 %and_ln31_1, i4 %or_ln38_6, i4 %select_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 934 'select' 'select_ln31_22' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 935 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_2)   --->   "%select_ln31_25 = select i1 %and_ln31_1, i10 %zext_ln31_12, i10 %select_ln31_4" [src/BMM_fonctions.c:31]   --->   Operation 935 'select' 'select_ln31_25' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%select_ln31_29 = select i1 %and_ln31_1, i9 %zext_ln31_15, i9 %select_ln31_8" [src/BMM_fonctions.c:31]   --->   Operation 936 'select' 'select_ln31_29' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 937 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%zext_ln31_18 = zext i9 %select_ln31_29 to i64" [src/BMM_fonctions.c:31]   --->   Operation 937 'zext' 'zext_ln31_18' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 938 [1/1] (1.78ns)   --->   "%k = add i5 4, %select_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 938 'add' 'k' <Predicate = (!icmp_ln30)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 939 [1/1] (0.00ns)   --->   "%trunc_ln32_1 = trunc i5 %k to i4" [src/BMM_fonctions.c:32]   --->   Operation 939 'trunc' 'trunc_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 940 [1/1] (0.00ns)   --->   "%tmp_78 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 940 'bitconcatenate' 'tmp_78' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 941 [1/1] (0.00ns)   --->   "%zext_ln38_8 = zext i9 %tmp_78 to i10" [src/BMM_fonctions.c:38]   --->   Operation 941 'zext' 'zext_ln38_8' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 942 [1/1] (1.82ns)   --->   "%add_ln38_7 = add i10 %zext_ln38_8, %zext_ln31_14" [src/BMM_fonctions.c:38]   --->   Operation 942 'add' 'add_ln38_7' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 943 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_6)   --->   "%tmp_79 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %k, i4 %select_ln31_22)" [src/BMM_fonctions.c:38]   --->   Operation 943 'bitconcatenate' 'tmp_79' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_78 : Operation 944 [1/1] (1.21ns)   --->   "%select_ln32_1 = select i1 %and_ln31_2, i5 %k, i5 %select_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 944 'select' 'select_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 945 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i5 %select_ln32_1 to i10" [src/BMM_fonctions.c:32]   --->   Operation 945 'zext' 'zext_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 946 [1/1] (0.68ns) (out node of the LUT)   --->   "%select_ln32_2 = select i1 %and_ln31_2, i10 %add_ln38_7, i10 %select_ln31_25" [src/BMM_fonctions.c:32]   --->   Operation 946 'select' 'select_ln32_2' <Predicate = (!icmp_ln30)> <Delay = 0.68> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 947 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i10 %select_ln32_2 to i64" [src/BMM_fonctions.c:32]   --->   Operation 947 'zext' 'zext_ln32_1' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 948 [1/1] (0.00ns)   --->   "%mB_addr_16 = getelementptr [256 x float]* %mB, i64 0, i64 %zext_ln32_1" [src/BMM_fonctions.c:38]   --->   Operation 948 'getelementptr' 'mB_addr_16' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 949 [2/2] (3.25ns)   --->   "%mB_load = load float* %mB_addr_16, align 4" [src/BMM_fonctions.c:32]   --->   Operation 949 'load' 'mB_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_78 : Operation 950 [1/1] (0.00ns)   --->   "%or_ln38_9 = or i4 %trunc_ln32_1, 1" [src/BMM_fonctions.c:38]   --->   Operation 950 'or' 'or_ln38_9' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 951 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_6 = select i1 %and_ln31_2, i64 %tmp_79, i64 %zext_ln31_18" [src/BMM_fonctions.c:32]   --->   Operation 951 'select' 'select_ln32_6' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 952 [1/1] (0.00ns)   --->   "%mB_addr_20 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_6" [src/BMM_fonctions.c:38]   --->   Operation 952 'getelementptr' 'mB_addr_20' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 953 [2/2] (3.25ns)   --->   "%mB_load_4 = load float* %mB_addr_20, align 4" [src/BMM_fonctions.c:32]   --->   Operation 953 'load' 'mB_load_4' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_78 : Operation 954 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i3 %select_ln32 to i5" [src/BMM_fonctions.c:35]   --->   Operation 954 'zext' 'zext_ln35' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 955 [1/1] (1.78ns)   --->   "%add_ln38 = add i5 %zext_ln35, %select_ln30" [src/BMM_fonctions.c:38]   --->   Operation 955 'add' 'add_ln38' <Predicate = (!icmp_ln30)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 956 [1/1] (0.00ns)   --->   "%tmp_94 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %add_ln38, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 956 'bitconcatenate' 'tmp_94' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 957 [1/1] (0.00ns)   --->   "%zext_ln38_13 = zext i9 %tmp_94 to i10" [src/BMM_fonctions.c:38]   --->   Operation 957 'zext' 'zext_ln38_13' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 958 [1/1] (1.82ns)   --->   "%add_ln38_11 = add i10 %zext_ln38_13, %zext_ln32" [src/BMM_fonctions.c:38]   --->   Operation 958 'add' 'add_ln38_11' <Predicate = (!icmp_ln30)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 959 [1/1] (0.00ns)   --->   "%zext_ln38_14 = zext i10 %add_ln38_11 to i64" [src/BMM_fonctions.c:38]   --->   Operation 959 'zext' 'zext_ln38_14' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 960 [1/1] (0.00ns)   --->   "%mA_addr_16 = getelementptr [256 x float]* %mA, i64 0, i64 %zext_ln38_14" [src/BMM_fonctions.c:38]   --->   Operation 960 'getelementptr' 'mA_addr_16' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 961 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_18)   --->   "%select_ln31_41 = select i1 %or_ln31, i4 1, i4 %or_ln38" [src/BMM_fonctions.c:31]   --->   Operation 961 'select' 'select_ln31_41' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 962 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln32_18 = select i1 %and_ln31_2, i4 %or_ln38_9, i4 %select_ln31_41" [src/BMM_fonctions.c:32]   --->   Operation 962 'select' 'select_ln32_18' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_78 : Operation 963 [1/1] (0.00ns)   --->   "%tmp_95 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln32_18)" [src/BMM_fonctions.c:38]   --->   Operation 963 'bitconcatenate' 'tmp_95' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 964 [1/1] (0.00ns)   --->   "%mA_addr_17 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_95" [src/BMM_fonctions.c:38]   --->   Operation 964 'getelementptr' 'mA_addr_17' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 965 [1/1] (1.82ns)   --->   "%add_ln38_12 = add i10 %zext_ln38_13, %zext_ln31_14" [src/BMM_fonctions.c:38]   --->   Operation 965 'add' 'add_ln38_12' <Predicate = (!icmp_ln30)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_78 : Operation 966 [1/1] (0.00ns)   --->   "%zext_ln38_15 = zext i10 %add_ln38_12 to i64" [src/BMM_fonctions.c:38]   --->   Operation 966 'zext' 'zext_ln38_15' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 967 [1/1] (0.00ns)   --->   "%mC_addr_32 = getelementptr [256 x float]* %mC, i64 0, i64 %zext_ln38_15" [src/BMM_fonctions.c:38]   --->   Operation 967 'getelementptr' 'mC_addr_32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 968 [1/1] (0.00ns)   --->   "%tmp_98 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln31_22)" [src/BMM_fonctions.c:38]   --->   Operation 968 'bitconcatenate' 'tmp_98' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 969 [1/1] (0.00ns)   --->   "%mC_addr_33 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_98" [src/BMM_fonctions.c:38]   --->   Operation 969 'getelementptr' 'mC_addr_33' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_78 : Operation 970 [2/2] (3.25ns)   --->   "%mA_load = load float* %mA_addr_16, align 16" [src/BMM_fonctions.c:38]   --->   Operation 970 'load' 'mA_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_78 : Operation 971 [2/2] (3.25ns)   --->   "%mC_load_16 = load float* %mC_addr_32, align 16" [src/BMM_fonctions.c:38]   --->   Operation 971 'load' 'mC_load_16' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_78 : Operation 972 [2/2] (3.25ns)   --->   "%mA_load_1 = load float* %mA_addr_17, align 4" [src/BMM_fonctions.c:38]   --->   Operation 972 'load' 'mA_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_78 : Operation 973 [2/2] (3.25ns)   --->   "%mC_load_17 = load float* %mC_addr_33, align 4" [src/BMM_fonctions.c:38]   --->   Operation 973 'load' 'mC_load_17' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 79 <SV = 6> <Delay = 5.75>
ST_79 : Operation 974 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_23)   --->   "%select_ln31_2 = select i1 %icmp_ln31, i4 2, i4 %or_ln38_4" [src/BMM_fonctions.c:31]   --->   Operation 974 'select' 'select_ln31_2' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 975 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_24)   --->   "%select_ln31_3 = select i1 %icmp_ln31, i4 3, i4 %or_ln38_5" [src/BMM_fonctions.c:31]   --->   Operation 975 'select' 'select_ln31_3' <Predicate = (!icmp_ln30 & !and_ln31_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 976 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%select_ln31_12 = select i1 %icmp_ln31, i9 2, i9 %tmp_54" [src/BMM_fonctions.c:31]   --->   Operation 976 'select' 'select_ln31_12' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 977 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%select_ln31_16 = select i1 %icmp_ln31, i9 3, i9 %tmp_55" [src/BMM_fonctions.c:31]   --->   Operation 977 'select' 'select_ln31_16' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 978 [1/1] (0.00ns)   --->   "%or_ln38_7 = or i4 %trunc_ln31_1, 2" [src/BMM_fonctions.c:38]   --->   Operation 978 'or' 'or_ln38_7' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 979 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%zext_ln31_16 = zext i4 %or_ln38_7 to i9" [src/BMM_fonctions.c:31]   --->   Operation 979 'zext' 'zext_ln31_16' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 980 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln31_23 = select i1 %and_ln31_1, i4 %or_ln38_7, i4 %select_ln31_2" [src/BMM_fonctions.c:31]   --->   Operation 980 'select' 'select_ln31_23' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 981 [1/1] (0.00ns)   --->   "%or_ln38_8 = or i4 %trunc_ln31_1, 3" [src/BMM_fonctions.c:38]   --->   Operation 981 'or' 'or_ln38_8' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 982 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%zext_ln31_17 = zext i4 %or_ln38_8 to i9" [src/BMM_fonctions.c:31]   --->   Operation 982 'zext' 'zext_ln31_17' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 983 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln31_24 = select i1 %and_ln31_1, i4 %or_ln38_8, i4 %select_ln31_3" [src/BMM_fonctions.c:31]   --->   Operation 983 'select' 'select_ln31_24' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 984 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%select_ln31_33 = select i1 %and_ln31_1, i9 %zext_ln31_16, i9 %select_ln31_12" [src/BMM_fonctions.c:31]   --->   Operation 984 'select' 'select_ln31_33' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 985 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%zext_ln31_19 = zext i9 %select_ln31_33 to i64" [src/BMM_fonctions.c:31]   --->   Operation 985 'zext' 'zext_ln31_19' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 986 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%select_ln31_37 = select i1 %and_ln31_1, i9 %zext_ln31_17, i9 %select_ln31_16" [src/BMM_fonctions.c:31]   --->   Operation 986 'select' 'select_ln31_37' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 987 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%zext_ln31_20 = zext i9 %select_ln31_37 to i64" [src/BMM_fonctions.c:31]   --->   Operation 987 'zext' 'zext_ln31_20' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 988 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_10)   --->   "%tmp_80 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %k, i4 %select_ln31_23)" [src/BMM_fonctions.c:38]   --->   Operation 988 'bitconcatenate' 'tmp_80' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 989 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_14)   --->   "%tmp_81 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %k, i4 %select_ln31_24)" [src/BMM_fonctions.c:38]   --->   Operation 989 'bitconcatenate' 'tmp_81' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_79 : Operation 990 [1/2] (3.25ns)   --->   "%mB_load = load float* %mB_addr_16, align 4" [src/BMM_fonctions.c:32]   --->   Operation 990 'load' 'mB_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 991 [1/1] (0.00ns)   --->   "%or_ln38_10 = or i4 %trunc_ln32_1, 2" [src/BMM_fonctions.c:38]   --->   Operation 991 'or' 'or_ln38_10' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 992 [1/1] (0.00ns)   --->   "%or_ln38_11 = or i4 %trunc_ln32_1, 3" [src/BMM_fonctions.c:38]   --->   Operation 992 'or' 'or_ln38_11' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 993 [1/2] (3.25ns)   --->   "%mB_load_4 = load float* %mB_addr_20, align 4" [src/BMM_fonctions.c:32]   --->   Operation 993 'load' 'mB_load_4' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 994 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_10 = select i1 %and_ln31_2, i64 %tmp_80, i64 %zext_ln31_19" [src/BMM_fonctions.c:32]   --->   Operation 994 'select' 'select_ln32_10' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 995 [1/1] (0.00ns)   --->   "%mB_addr_24 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_10" [src/BMM_fonctions.c:38]   --->   Operation 995 'getelementptr' 'mB_addr_24' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 996 [2/2] (3.25ns)   --->   "%mB_load_8 = load float* %mB_addr_24, align 4" [src/BMM_fonctions.c:32]   --->   Operation 996 'load' 'mB_load_8' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 997 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_14 = select i1 %and_ln31_2, i64 %tmp_81, i64 %zext_ln31_20" [src/BMM_fonctions.c:32]   --->   Operation 997 'select' 'select_ln32_14' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 998 [1/1] (0.00ns)   --->   "%mB_addr_28 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_14" [src/BMM_fonctions.c:38]   --->   Operation 998 'getelementptr' 'mB_addr_28' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 999 [2/2] (3.25ns)   --->   "%mB_load_12 = load float* %mB_addr_28, align 4" [src/BMM_fonctions.c:32]   --->   Operation 999 'load' 'mB_load_12' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1000 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_19)   --->   "%select_ln31_42 = select i1 %or_ln31, i4 2, i4 %or_ln38_1" [src/BMM_fonctions.c:31]   --->   Operation 1000 'select' 'select_ln31_42' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 1001 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln32_19 = select i1 %and_ln31_2, i4 %or_ln38_10, i4 %select_ln31_42" [src/BMM_fonctions.c:32]   --->   Operation 1001 'select' 'select_ln32_19' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 1002 [1/1] (0.00ns)   --->   "%tmp_96 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln32_19)" [src/BMM_fonctions.c:38]   --->   Operation 1002 'bitconcatenate' 'tmp_96' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1003 [1/1] (0.00ns)   --->   "%mA_addr_18 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_96" [src/BMM_fonctions.c:38]   --->   Operation 1003 'getelementptr' 'mA_addr_18' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1004 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_20)   --->   "%select_ln31_43 = select i1 %or_ln31, i4 3, i4 %or_ln38_2" [src/BMM_fonctions.c:31]   --->   Operation 1004 'select' 'select_ln31_43' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 1005 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln32_20 = select i1 %and_ln31_2, i4 %or_ln38_11, i4 %select_ln31_43" [src/BMM_fonctions.c:32]   --->   Operation 1005 'select' 'select_ln32_20' <Predicate = (!icmp_ln30)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_79 : Operation 1006 [1/1] (0.00ns)   --->   "%tmp_97 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln32_20)" [src/BMM_fonctions.c:38]   --->   Operation 1006 'bitconcatenate' 'tmp_97' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1007 [1/1] (0.00ns)   --->   "%mA_addr_19 = getelementptr [256 x float]* %mA, i64 0, i64 %tmp_97" [src/BMM_fonctions.c:38]   --->   Operation 1007 'getelementptr' 'mA_addr_19' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1008 [1/1] (0.00ns)   --->   "%tmp_99 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln31_23)" [src/BMM_fonctions.c:38]   --->   Operation 1008 'bitconcatenate' 'tmp_99' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1009 [1/1] (0.00ns)   --->   "%mC_addr_34 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_99" [src/BMM_fonctions.c:38]   --->   Operation 1009 'getelementptr' 'mC_addr_34' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1010 [1/1] (0.00ns)   --->   "%tmp_100 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i5.i4(i55 0, i5 %add_ln38, i4 %select_ln31_24)" [src/BMM_fonctions.c:38]   --->   Operation 1010 'bitconcatenate' 'tmp_100' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1011 [1/1] (0.00ns)   --->   "%mC_addr_35 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_100" [src/BMM_fonctions.c:38]   --->   Operation 1011 'getelementptr' 'mC_addr_35' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_79 : Operation 1012 [1/2] (3.25ns)   --->   "%mA_load = load float* %mA_addr_16, align 16" [src/BMM_fonctions.c:38]   --->   Operation 1012 'load' 'mA_load' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1013 [1/2] (3.25ns)   --->   "%mC_load_16 = load float* %mC_addr_32, align 16" [src/BMM_fonctions.c:38]   --->   Operation 1013 'load' 'mC_load_16' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1014 [1/2] (3.25ns)   --->   "%mA_load_1 = load float* %mA_addr_17, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1014 'load' 'mA_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1015 [2/2] (3.25ns)   --->   "%mA_load_2 = load float* %mA_addr_18, align 8" [src/BMM_fonctions.c:38]   --->   Operation 1015 'load' 'mA_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1016 [2/2] (3.25ns)   --->   "%mA_load_3 = load float* %mA_addr_19, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1016 'load' 'mA_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1017 [1/2] (3.25ns)   --->   "%mC_load_17 = load float* %mC_addr_33, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1017 'load' 'mC_load_17' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1018 [2/2] (3.25ns)   --->   "%mC_load_18 = load float* %mC_addr_34, align 8" [src/BMM_fonctions.c:38]   --->   Operation 1018 'load' 'mC_load_18' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_79 : Operation 1019 [2/2] (3.25ns)   --->   "%mC_load_19 = load float* %mC_addr_35, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1019 'load' 'mC_load_19' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 80 <SV = 7> <Delay = 6.13>
ST_80 : Operation 1020 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%select_ln31_5 = select i1 %icmp_ln31, i9 16, i9 %add_ln38_2" [src/BMM_fonctions.c:31]   --->   Operation 1020 'select' 'select_ln31_5' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1021 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%select_ln31_7 = select i1 %icmp_ln31, i9 48, i9 %add_ln38_4" [src/BMM_fonctions.c:31]   --->   Operation 1021 'select' 'select_ln31_7' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1022 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%select_ln31_9 = select i1 %icmp_ln31, i8 17, i8 %tmp_57" [src/BMM_fonctions.c:31]   --->   Operation 1022 'select' 'select_ln31_9' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1023 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%zext_ln31_1 = zext i8 %select_ln31_9 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1023 'zext' 'zext_ln31_1' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1024 [1/1] (0.00ns)   --->   "%zext_ln31_10 = zext i5 %j to i7" [src/BMM_fonctions.c:31]   --->   Operation 1024 'zext' 'zext_ln31_10' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1025 [1/1] (0.00ns)   --->   "%zext_ln31_11 = zext i5 %j to i6" [src/BMM_fonctions.c:31]   --->   Operation 1025 'zext' 'zext_ln31_11' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1026 [1/1] (0.00ns)   --->   "%zext_ln31_13 = zext i5 %select_ln31_21 to i9" [src/BMM_fonctions.c:31]   --->   Operation 1026 'zext' 'zext_ln31_13' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_80 : Operation 1027 [1/1] (1.82ns)   --->   "%add_ln38_5 = add i6 16, %zext_ln31_11" [src/BMM_fonctions.c:38]   --->   Operation 1027 'add' 'add_ln38_5' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1028 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%zext_ln38_6 = zext i6 %add_ln38_5 to i9" [src/BMM_fonctions.c:38]   --->   Operation 1028 'zext' 'zext_ln38_6' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1029 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%tmp_68 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 1, i4 %or_ln38_6)" [src/BMM_fonctions.c:38]   --->   Operation 1029 'bitconcatenate' 'tmp_68' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1030 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_3)   --->   "%select_ln31_26 = select i1 %and_ln31_1, i9 %zext_ln38_6, i9 %select_ln31_5" [src/BMM_fonctions.c:31]   --->   Operation 1030 'select' 'select_ln31_26' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1031 [1/1] (1.87ns)   --->   "%add_ln38_6 = add i7 48, %zext_ln31_10" [src/BMM_fonctions.c:38]   --->   Operation 1031 'add' 'add_ln38_6' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1032 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%zext_ln38_7 = zext i7 %add_ln38_6 to i9" [src/BMM_fonctions.c:38]   --->   Operation 1032 'zext' 'zext_ln38_7' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1033 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_5)   --->   "%select_ln31_28 = select i1 %and_ln31_1, i9 %zext_ln38_7, i9 %select_ln31_7" [src/BMM_fonctions.c:31]   --->   Operation 1033 'select' 'select_ln31_28' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1034 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%select_ln31_30 = select i1 %and_ln31_1, i64 %tmp_68, i64 %zext_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 1034 'select' 'select_ln31_30' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1035 [1/1] (0.00ns)   --->   "%tmp_82 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_9, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 1035 'bitconcatenate' 'tmp_82' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1036 [1/1] (0.00ns)   --->   "%zext_ln38_9 = zext i8 %tmp_82 to i9" [src/BMM_fonctions.c:38]   --->   Operation 1036 'zext' 'zext_ln38_9' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1037 [1/1] (1.91ns)   --->   "%add_ln38_8 = add i9 %zext_ln38_9, %zext_ln31_13" [src/BMM_fonctions.c:38]   --->   Operation 1037 'add' 'add_ln38_8' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1038 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_7)   --->   "%tmp_83 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_9, i4 %select_ln31_22)" [src/BMM_fonctions.c:38]   --->   Operation 1038 'bitconcatenate' 'tmp_83' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1039 [1/1] (0.96ns) (out node of the LUT)   --->   "%select_ln32_3 = select i1 %and_ln31_2, i9 %add_ln38_8, i9 %select_ln31_26" [src/BMM_fonctions.c:32]   --->   Operation 1039 'select' 'select_ln32_3' <Predicate = (!icmp_ln30)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1040 [1/1] (0.00ns)   --->   "%zext_ln32_2 = zext i9 %select_ln32_3 to i64" [src/BMM_fonctions.c:32]   --->   Operation 1040 'zext' 'zext_ln32_2' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_80 : Operation 1041 [1/1] (0.00ns)   --->   "%mB_addr_17 = getelementptr [256 x float]* %mB, i64 0, i64 %zext_ln32_2" [src/BMM_fonctions.c:38]   --->   Operation 1041 'getelementptr' 'mB_addr_17' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_80 : Operation 1042 [2/2] (3.25ns)   --->   "%mB_load_1 = load float* %mB_addr_17, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1042 'load' 'mB_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1043 [1/1] (0.00ns)   --->   "%tmp_90 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_11, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 1043 'bitconcatenate' 'tmp_90' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1044 [1/1] (0.00ns)   --->   "%zext_ln38_12 = zext i8 %tmp_90 to i9" [src/BMM_fonctions.c:38]   --->   Operation 1044 'zext' 'zext_ln38_12' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_80 : Operation 1045 [1/1] (1.91ns)   --->   "%add_ln38_10 = add i9 %zext_ln38_12, %zext_ln31_13" [src/BMM_fonctions.c:38]   --->   Operation 1045 'add' 'add_ln38_10' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1046 [1/1] (0.96ns) (out node of the LUT)   --->   "%select_ln32_5 = select i1 %and_ln31_2, i9 %add_ln38_10, i9 %select_ln31_28" [src/BMM_fonctions.c:32]   --->   Operation 1046 'select' 'select_ln32_5' <Predicate = (!icmp_ln30)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1047 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_7 = select i1 %and_ln31_2, i64 %tmp_83, i64 %select_ln31_30" [src/BMM_fonctions.c:32]   --->   Operation 1047 'select' 'select_ln32_7' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_80 : Operation 1048 [1/1] (0.00ns)   --->   "%mB_addr_21 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_7" [src/BMM_fonctions.c:38]   --->   Operation 1048 'getelementptr' 'mB_addr_21' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_80 : Operation 1049 [2/2] (3.25ns)   --->   "%mB_load_5 = load float* %mB_addr_21, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1049 'load' 'mB_load_5' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1050 [1/2] (3.25ns)   --->   "%mB_load_8 = load float* %mB_addr_24, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1050 'load' 'mB_load_8' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1051 [1/2] (3.25ns)   --->   "%mB_load_12 = load float* %mB_addr_28, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1051 'load' 'mB_load_12' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1052 [4/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:38]   --->   Operation 1052 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1053 [1/2] (3.25ns)   --->   "%mA_load_2 = load float* %mA_addr_18, align 8" [src/BMM_fonctions.c:38]   --->   Operation 1053 'load' 'mA_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1054 [1/2] (3.25ns)   --->   "%mA_load_3 = load float* %mA_addr_19, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1054 'load' 'mA_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1055 [4/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:38]   --->   Operation 1055 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1056 [1/2] (3.25ns)   --->   "%mC_load_18 = load float* %mC_addr_34, align 8" [src/BMM_fonctions.c:38]   --->   Operation 1056 'load' 'mC_load_18' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1057 [1/2] (3.25ns)   --->   "%mC_load_19 = load float* %mC_addr_35, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1057 'load' 'mC_load_19' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_80 : Operation 1058 [1/1] (1.65ns)   --->   "%ii = add i3 1, %select_ln32" [src/BMM_fonctions.c:35]   --->   Operation 1058 'add' 'ii' <Predicate = (!icmp_ln30)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 1059 [1/1] (1.18ns)   --->   "%select_ln32_21 = select i1 %or_ln31, i6 1, i6 %add_ln32_1" [src/BMM_fonctions.c:32]   --->   Operation 1059 'select' 'select_ln32_21' <Predicate = (!icmp_ln30)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 81 <SV = 8> <Delay = 5.70>
ST_81 : Operation 1060 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%select_ln31_13 = select i1 %icmp_ln31, i8 18, i8 %tmp_58" [src/BMM_fonctions.c:31]   --->   Operation 1060 'select' 'select_ln31_13' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1061 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%zext_ln31_4 = zext i8 %select_ln31_13 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1061 'zext' 'zext_ln31_4' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1062 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%select_ln31_17 = select i1 %icmp_ln31, i8 19, i8 %tmp_59" [src/BMM_fonctions.c:31]   --->   Operation 1062 'select' 'select_ln31_17' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1063 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%zext_ln31_7 = zext i8 %select_ln31_17 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1063 'zext' 'zext_ln31_7' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1064 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%tmp_69 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 1, i4 %or_ln38_7)" [src/BMM_fonctions.c:38]   --->   Operation 1064 'bitconcatenate' 'tmp_69' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1065 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%tmp_70 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 1, i4 %or_ln38_8)" [src/BMM_fonctions.c:38]   --->   Operation 1065 'bitconcatenate' 'tmp_70' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1066 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%select_ln31_34 = select i1 %and_ln31_1, i64 %tmp_69, i64 %zext_ln31_4" [src/BMM_fonctions.c:31]   --->   Operation 1066 'select' 'select_ln31_34' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1067 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%select_ln31_38 = select i1 %and_ln31_1, i64 %tmp_70, i64 %zext_ln31_7" [src/BMM_fonctions.c:31]   --->   Operation 1067 'select' 'select_ln31_38' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1068 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_11)   --->   "%tmp_84 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_9, i4 %select_ln31_23)" [src/BMM_fonctions.c:38]   --->   Operation 1068 'bitconcatenate' 'tmp_84' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1069 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_15)   --->   "%tmp_85 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_9, i4 %select_ln31_24)" [src/BMM_fonctions.c:38]   --->   Operation 1069 'bitconcatenate' 'tmp_85' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_81 : Operation 1070 [1/2] (3.25ns)   --->   "%mB_load_1 = load float* %mB_addr_17, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1070 'load' 'mB_load_1' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_81 : Operation 1071 [1/2] (3.25ns)   --->   "%mB_load_5 = load float* %mB_addr_21, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1071 'load' 'mB_load_5' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_81 : Operation 1072 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_11 = select i1 %and_ln31_2, i64 %tmp_84, i64 %select_ln31_34" [src/BMM_fonctions.c:32]   --->   Operation 1072 'select' 'select_ln32_11' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1073 [1/1] (0.00ns)   --->   "%mB_addr_25 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_11" [src/BMM_fonctions.c:38]   --->   Operation 1073 'getelementptr' 'mB_addr_25' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_81 : Operation 1074 [2/2] (3.25ns)   --->   "%mB_load_9 = load float* %mB_addr_25, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1074 'load' 'mB_load_9' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_81 : Operation 1075 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_15 = select i1 %and_ln31_2, i64 %tmp_85, i64 %select_ln31_38" [src/BMM_fonctions.c:32]   --->   Operation 1075 'select' 'select_ln32_15' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_81 : Operation 1076 [1/1] (0.00ns)   --->   "%mB_addr_29 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_15" [src/BMM_fonctions.c:38]   --->   Operation 1076 'getelementptr' 'mB_addr_29' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_81 : Operation 1077 [2/2] (3.25ns)   --->   "%mB_load_13 = load float* %mB_addr_29, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1077 'load' 'mB_load_13' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_81 : Operation 1078 [3/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:38]   --->   Operation 1078 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 1079 [3/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:38]   --->   Operation 1079 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 1080 [4/4] (5.70ns)   --->   "%tmp_4 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:38]   --->   Operation 1080 'fmul' 'tmp_4' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 1081 [4/4] (5.70ns)   --->   "%tmp_5 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:38]   --->   Operation 1081 'fmul' 'tmp_5' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 9> <Delay = 6.65>
ST_82 : Operation 1082 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%select_ln31_6 = select i1 %icmp_ln31, i9 32, i9 %add_ln38_3" [src/BMM_fonctions.c:31]   --->   Operation 1082 'select' 'select_ln31_6' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1083 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%zext_ln31 = zext i9 %select_ln31_6 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1083 'zext' 'zext_ln31' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1084 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%select_ln31_10 = select i1 %icmp_ln31, i8 33, i8 %tmp_61" [src/BMM_fonctions.c:31]   --->   Operation 1084 'select' 'select_ln31_10' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1085 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%zext_ln31_2 = zext i8 %select_ln31_10 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1085 'zext' 'zext_ln31_2' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1086 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%tmp_71 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 1, i5 %j)" [src/BMM_fonctions.c:38]   --->   Operation 1086 'bitconcatenate' 'tmp_71' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1087 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%tmp_72 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 2, i4 %or_ln38_6)" [src/BMM_fonctions.c:38]   --->   Operation 1087 'bitconcatenate' 'tmp_72' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1088 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%select_ln31_27 = select i1 %and_ln31_1, i64 %tmp_71, i64 %zext_ln31" [src/BMM_fonctions.c:31]   --->   Operation 1088 'select' 'select_ln31_27' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1089 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%select_ln31_31 = select i1 %and_ln31_1, i64 %tmp_72, i64 %zext_ln31_2" [src/BMM_fonctions.c:31]   --->   Operation 1089 'select' 'select_ln31_31' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1090 [1/1] (0.00ns)   --->   "%tmp_86 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %or_ln38_10, i4 0)" [src/BMM_fonctions.c:38]   --->   Operation 1090 'bitconcatenate' 'tmp_86' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1091 [1/1] (0.00ns)   --->   "%zext_ln38_10 = zext i8 %tmp_86 to i9" [src/BMM_fonctions.c:38]   --->   Operation 1091 'zext' 'zext_ln38_10' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1092 [1/1] (1.91ns)   --->   "%add_ln38_9 = add i9 %zext_ln38_10, %zext_ln31_13" [src/BMM_fonctions.c:38]   --->   Operation 1092 'add' 'add_ln38_9' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1093 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_4)   --->   "%zext_ln38_11 = zext i9 %add_ln38_9 to i64" [src/BMM_fonctions.c:38]   --->   Operation 1093 'zext' 'zext_ln38_11' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1094 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_8)   --->   "%tmp_87 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_10, i4 %select_ln31_22)" [src/BMM_fonctions.c:38]   --->   Operation 1094 'bitconcatenate' 'tmp_87' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_82 : Operation 1095 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_4 = select i1 %and_ln31_2, i64 %zext_ln38_11, i64 %select_ln31_27" [src/BMM_fonctions.c:32]   --->   Operation 1095 'select' 'select_ln32_4' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1096 [1/1] (0.00ns)   --->   "%mB_addr_18 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_4" [src/BMM_fonctions.c:38]   --->   Operation 1096 'getelementptr' 'mB_addr_18' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_82 : Operation 1097 [2/2] (3.25ns)   --->   "%mB_load_2 = load float* %mB_addr_18, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1097 'load' 'mB_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_82 : Operation 1098 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_8 = select i1 %and_ln31_2, i64 %tmp_87, i64 %select_ln31_31" [src/BMM_fonctions.c:32]   --->   Operation 1098 'select' 'select_ln32_8' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_82 : Operation 1099 [1/1] (0.00ns)   --->   "%mB_addr_22 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_8" [src/BMM_fonctions.c:38]   --->   Operation 1099 'getelementptr' 'mB_addr_22' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_82 : Operation 1100 [2/2] (3.25ns)   --->   "%mB_load_6 = load float* %mB_addr_22, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1100 'load' 'mB_load_6' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_82 : Operation 1101 [1/2] (3.25ns)   --->   "%mB_load_9 = load float* %mB_addr_25, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1101 'load' 'mB_load_9' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_82 : Operation 1102 [1/2] (3.25ns)   --->   "%mB_load_13 = load float* %mB_addr_29, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1102 'load' 'mB_load_13' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_82 : Operation 1103 [2/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:38]   --->   Operation 1103 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1104 [4/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:38]   --->   Operation 1104 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1105 [2/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:38]   --->   Operation 1105 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1106 [4/4] (5.70ns)   --->   "%tmp_1135_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:38]   --->   Operation 1106 'fmul' 'tmp_1135_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1107 [3/4] (5.70ns)   --->   "%tmp_4 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:38]   --->   Operation 1107 'fmul' 'tmp_4' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 1108 [3/4] (5.70ns)   --->   "%tmp_5 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:38]   --->   Operation 1108 'fmul' 'tmp_5' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 10> <Delay = 5.70>
ST_83 : Operation 1109 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%select_ln31_14 = select i1 %icmp_ln31, i8 34, i8 %tmp_62" [src/BMM_fonctions.c:31]   --->   Operation 1109 'select' 'select_ln31_14' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1110 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%zext_ln31_5 = zext i8 %select_ln31_14 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1110 'zext' 'zext_ln31_5' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1111 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%select_ln31_18 = select i1 %icmp_ln31, i8 35, i8 %tmp_63" [src/BMM_fonctions.c:31]   --->   Operation 1111 'select' 'select_ln31_18' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1112 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%zext_ln31_8 = zext i8 %select_ln31_18 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1112 'zext' 'zext_ln31_8' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1113 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%tmp_73 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 2, i4 %or_ln38_7)" [src/BMM_fonctions.c:38]   --->   Operation 1113 'bitconcatenate' 'tmp_73' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1114 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%tmp_74 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 2, i4 %or_ln38_8)" [src/BMM_fonctions.c:38]   --->   Operation 1114 'bitconcatenate' 'tmp_74' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1115 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%select_ln31_35 = select i1 %and_ln31_1, i64 %tmp_73, i64 %zext_ln31_5" [src/BMM_fonctions.c:31]   --->   Operation 1115 'select' 'select_ln31_35' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1116 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%select_ln31_39 = select i1 %and_ln31_1, i64 %tmp_74, i64 %zext_ln31_8" [src/BMM_fonctions.c:31]   --->   Operation 1116 'select' 'select_ln31_39' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1117 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_12)   --->   "%tmp_88 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_10, i4 %select_ln31_23)" [src/BMM_fonctions.c:38]   --->   Operation 1117 'bitconcatenate' 'tmp_88' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1118 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_16)   --->   "%tmp_89 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_10, i4 %select_ln31_24)" [src/BMM_fonctions.c:38]   --->   Operation 1118 'bitconcatenate' 'tmp_89' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_83 : Operation 1119 [1/2] (3.25ns)   --->   "%mB_load_2 = load float* %mB_addr_18, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1119 'load' 'mB_load_2' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_83 : Operation 1120 [1/2] (3.25ns)   --->   "%mB_load_6 = load float* %mB_addr_22, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1120 'load' 'mB_load_6' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_83 : Operation 1121 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_12 = select i1 %and_ln31_2, i64 %tmp_88, i64 %select_ln31_35" [src/BMM_fonctions.c:32]   --->   Operation 1121 'select' 'select_ln32_12' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1122 [1/1] (0.00ns)   --->   "%mB_addr_26 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_12" [src/BMM_fonctions.c:38]   --->   Operation 1122 'getelementptr' 'mB_addr_26' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_83 : Operation 1123 [2/2] (3.25ns)   --->   "%mB_load_10 = load float* %mB_addr_26, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1123 'load' 'mB_load_10' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_83 : Operation 1124 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_16 = select i1 %and_ln31_2, i64 %tmp_89, i64 %select_ln31_39" [src/BMM_fonctions.c:32]   --->   Operation 1124 'select' 'select_ln32_16' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_83 : Operation 1125 [1/1] (0.00ns)   --->   "%mB_addr_30 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_16" [src/BMM_fonctions.c:38]   --->   Operation 1125 'getelementptr' 'mB_addr_30' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_83 : Operation 1126 [2/2] (3.25ns)   --->   "%mB_load_14 = load float* %mB_addr_30, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1126 'load' 'mB_load_14' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_83 : Operation 1127 [1/4] (5.70ns)   --->   "%tmp1 = fmul float %mA_load, %mB_load" [src/BMM_fonctions.c:38]   --->   Operation 1127 'fmul' 'tmp1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1128 [3/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:38]   --->   Operation 1128 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1129 [1/4] (5.70ns)   --->   "%tmp_s = fmul float %mA_load, %mB_load_4" [src/BMM_fonctions.c:38]   --->   Operation 1129 'fmul' 'tmp_s' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1130 [3/4] (5.70ns)   --->   "%tmp_1135_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:38]   --->   Operation 1130 'fmul' 'tmp_1135_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1131 [2/4] (5.70ns)   --->   "%tmp_4 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:38]   --->   Operation 1131 'fmul' 'tmp_4' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1132 [4/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:38]   --->   Operation 1132 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1133 [2/4] (5.70ns)   --->   "%tmp_5 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:38]   --->   Operation 1133 'fmul' 'tmp_5' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 1134 [4/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:38]   --->   Operation 1134 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 11> <Delay = 7.25>
ST_84 : Operation 1135 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%select_ln31_11 = select i1 %icmp_ln31, i8 49, i8 %tmp_65" [src/BMM_fonctions.c:31]   --->   Operation 1135 'select' 'select_ln31_11' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_84 : Operation 1136 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%zext_ln31_3 = zext i8 %select_ln31_11 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1136 'zext' 'zext_ln31_3' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_84 : Operation 1137 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%tmp_75 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 3, i4 %or_ln38_6)" [src/BMM_fonctions.c:38]   --->   Operation 1137 'bitconcatenate' 'tmp_75' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_84 : Operation 1138 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%select_ln31_32 = select i1 %and_ln31_1, i64 %tmp_75, i64 %zext_ln31_3" [src/BMM_fonctions.c:31]   --->   Operation 1138 'select' 'select_ln31_32' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_84 : Operation 1139 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_9)   --->   "%tmp_91 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_11, i4 %select_ln31_22)" [src/BMM_fonctions.c:38]   --->   Operation 1139 'bitconcatenate' 'tmp_91' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_84 : Operation 1140 [1/1] (0.00ns)   --->   "%zext_ln32_3 = zext i9 %select_ln32_5 to i64" [src/BMM_fonctions.c:32]   --->   Operation 1140 'zext' 'zext_ln32_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_84 : Operation 1141 [1/1] (0.00ns)   --->   "%mB_addr_19 = getelementptr [256 x float]* %mB, i64 0, i64 %zext_ln32_3" [src/BMM_fonctions.c:38]   --->   Operation 1141 'getelementptr' 'mB_addr_19' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_84 : Operation 1142 [2/2] (3.25ns)   --->   "%mB_load_3 = load float* %mB_addr_19, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1142 'load' 'mB_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_84 : Operation 1143 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_9 = select i1 %and_ln31_2, i64 %tmp_91, i64 %select_ln31_32" [src/BMM_fonctions.c:32]   --->   Operation 1143 'select' 'select_ln32_9' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_84 : Operation 1144 [1/1] (0.00ns)   --->   "%mB_addr_23 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_9" [src/BMM_fonctions.c:38]   --->   Operation 1144 'getelementptr' 'mB_addr_23' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_84 : Operation 1145 [2/2] (3.25ns)   --->   "%mB_load_7 = load float* %mB_addr_23, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1145 'load' 'mB_load_7' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_84 : Operation 1146 [1/2] (3.25ns)   --->   "%mB_load_10 = load float* %mB_addr_26, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1146 'load' 'mB_load_10' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_84 : Operation 1147 [1/2] (3.25ns)   --->   "%mB_load_14 = load float* %mB_addr_30, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1147 'load' 'mB_load_14' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_84 : Operation 1148 [5/5] (7.25ns)   --->   "%tmp_6 = fadd float %mC_load_16, %tmp1" [src/BMM_fonctions.c:38]   --->   Operation 1148 'fadd' 'tmp_6' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1149 [2/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:38]   --->   Operation 1149 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1150 [4/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:38]   --->   Operation 1150 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1151 [5/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_17, %tmp_s" [src/BMM_fonctions.c:38]   --->   Operation 1151 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1152 [2/4] (5.70ns)   --->   "%tmp_1135_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:38]   --->   Operation 1152 'fmul' 'tmp_1135_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1153 [4/4] (5.70ns)   --->   "%tmp_1135_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:38]   --->   Operation 1153 'fmul' 'tmp_1135_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1154 [1/4] (5.70ns)   --->   "%tmp_4 = fmul float %mA_load, %mB_load_8" [src/BMM_fonctions.c:38]   --->   Operation 1154 'fmul' 'tmp_4' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1155 [3/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:38]   --->   Operation 1155 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1156 [1/4] (5.70ns)   --->   "%tmp_5 = fmul float %mA_load, %mB_load_12" [src/BMM_fonctions.c:38]   --->   Operation 1156 'fmul' 'tmp_5' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1157 [3/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:38]   --->   Operation 1157 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 1158 [1/1] (1.24ns)   --->   "%select_ln31_44 = select i1 %icmp_ln31, i8 1, i8 %add_ln31_1" [src/BMM_fonctions.c:31]   --->   Operation 1158 'select' 'select_ln31_44' <Predicate = (!icmp_ln30)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 85 <SV = 12> <Delay = 7.25>
ST_85 : Operation 1159 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%select_ln31_15 = select i1 %icmp_ln31, i8 50, i8 %tmp_66" [src/BMM_fonctions.c:31]   --->   Operation 1159 'select' 'select_ln31_15' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1160 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%zext_ln31_6 = zext i8 %select_ln31_15 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1160 'zext' 'zext_ln31_6' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1161 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%select_ln31_19 = select i1 %icmp_ln31, i8 51, i8 %tmp_67" [src/BMM_fonctions.c:31]   --->   Operation 1161 'select' 'select_ln31_19' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1162 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%zext_ln31_9 = zext i8 %select_ln31_19 to i64" [src/BMM_fonctions.c:31]   --->   Operation 1162 'zext' 'zext_ln31_9' <Predicate = (!icmp_ln30 & !and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1163 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%tmp_76 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 3, i4 %or_ln38_7)" [src/BMM_fonctions.c:38]   --->   Operation 1163 'bitconcatenate' 'tmp_76' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1164 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%tmp_77 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 3, i4 %or_ln38_8)" [src/BMM_fonctions.c:38]   --->   Operation 1164 'bitconcatenate' 'tmp_77' <Predicate = (!icmp_ln30 & and_ln31_1 & !and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1165 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%select_ln31_36 = select i1 %and_ln31_1, i64 %tmp_76, i64 %zext_ln31_6" [src/BMM_fonctions.c:31]   --->   Operation 1165 'select' 'select_ln31_36' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1166 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%select_ln31_40 = select i1 %and_ln31_1, i64 %tmp_77, i64 %zext_ln31_9" [src/BMM_fonctions.c:31]   --->   Operation 1166 'select' 'select_ln31_40' <Predicate = (!icmp_ln30 & !and_ln31_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1167 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_13)   --->   "%tmp_92 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_11, i4 %select_ln31_23)" [src/BMM_fonctions.c:38]   --->   Operation 1167 'bitconcatenate' 'tmp_92' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1168 [1/1] (0.00ns) (grouped into LUT with out node select_ln32_17)   --->   "%tmp_93 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i4.i4(i56 0, i4 %or_ln38_11, i4 %select_ln31_24)" [src/BMM_fonctions.c:38]   --->   Operation 1168 'bitconcatenate' 'tmp_93' <Predicate = (!icmp_ln30 & and_ln31_2)> <Delay = 0.00>
ST_85 : Operation 1169 [1/2] (3.25ns)   --->   "%mB_load_3 = load float* %mB_addr_19, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1169 'load' 'mB_load_3' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_85 : Operation 1170 [1/2] (3.25ns)   --->   "%mB_load_7 = load float* %mB_addr_23, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1170 'load' 'mB_load_7' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_85 : Operation 1171 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_13 = select i1 %and_ln31_2, i64 %tmp_92, i64 %select_ln31_36" [src/BMM_fonctions.c:32]   --->   Operation 1171 'select' 'select_ln32_13' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1172 [1/1] (0.00ns)   --->   "%mB_addr_27 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_13" [src/BMM_fonctions.c:38]   --->   Operation 1172 'getelementptr' 'mB_addr_27' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_85 : Operation 1173 [2/2] (3.25ns)   --->   "%mB_load_11 = load float* %mB_addr_27, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1173 'load' 'mB_load_11' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_85 : Operation 1174 [1/1] (1.48ns) (out node of the LUT)   --->   "%select_ln32_17 = select i1 %and_ln31_2, i64 %tmp_93, i64 %select_ln31_40" [src/BMM_fonctions.c:32]   --->   Operation 1174 'select' 'select_ln32_17' <Predicate = (!icmp_ln30)> <Delay = 1.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 1175 [1/1] (0.00ns)   --->   "%mB_addr_31 = getelementptr [256 x float]* %mB, i64 0, i64 %select_ln32_17" [src/BMM_fonctions.c:38]   --->   Operation 1175 'getelementptr' 'mB_addr_31' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_85 : Operation 1176 [2/2] (3.25ns)   --->   "%mB_load_15 = load float* %mB_addr_31, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1176 'load' 'mB_load_15' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_85 : Operation 1177 [4/5] (7.25ns)   --->   "%tmp_6 = fadd float %mC_load_16, %tmp1" [src/BMM_fonctions.c:38]   --->   Operation 1177 'fadd' 'tmp_6' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1178 [1/4] (5.70ns)   --->   "%tmp_0_1 = fmul float %mA_load_1, %mB_load_1" [src/BMM_fonctions.c:38]   --->   Operation 1178 'fmul' 'tmp_0_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1179 [3/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:38]   --->   Operation 1179 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1180 [4/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_17, %tmp_s" [src/BMM_fonctions.c:38]   --->   Operation 1180 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1181 [1/4] (5.70ns)   --->   "%tmp_1135_1 = fmul float %mA_load_1, %mB_load_5" [src/BMM_fonctions.c:38]   --->   Operation 1181 'fmul' 'tmp_1135_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1182 [3/4] (5.70ns)   --->   "%tmp_1135_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:38]   --->   Operation 1182 'fmul' 'tmp_1135_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1183 [5/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_18, %tmp_4" [src/BMM_fonctions.c:38]   --->   Operation 1183 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1184 [2/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:38]   --->   Operation 1184 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1185 [4/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:38]   --->   Operation 1185 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1186 [5/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_19, %tmp_5" [src/BMM_fonctions.c:38]   --->   Operation 1186 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1187 [2/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:38]   --->   Operation 1187 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 1188 [4/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:38]   --->   Operation 1188 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 13> <Delay = 7.25>
ST_86 : Operation 1189 [1/2] (3.25ns)   --->   "%mB_load_11 = load float* %mB_addr_27, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1189 'load' 'mB_load_11' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_86 : Operation 1190 [1/2] (3.25ns)   --->   "%mB_load_15 = load float* %mB_addr_31, align 4" [src/BMM_fonctions.c:32]   --->   Operation 1190 'load' 'mB_load_15' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_86 : Operation 1191 [3/5] (7.25ns)   --->   "%tmp_6 = fadd float %mC_load_16, %tmp1" [src/BMM_fonctions.c:38]   --->   Operation 1191 'fadd' 'tmp_6' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1192 [2/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:38]   --->   Operation 1192 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1193 [4/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:38]   --->   Operation 1193 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1194 [3/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_17, %tmp_s" [src/BMM_fonctions.c:38]   --->   Operation 1194 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1195 [2/4] (5.70ns)   --->   "%tmp_1135_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:38]   --->   Operation 1195 'fmul' 'tmp_1135_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1196 [4/4] (5.70ns)   --->   "%tmp_1135_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:38]   --->   Operation 1196 'fmul' 'tmp_1135_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1197 [4/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_18, %tmp_4" [src/BMM_fonctions.c:38]   --->   Operation 1197 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1198 [1/4] (5.70ns)   --->   "%tmp_2_1 = fmul float %mA_load_1, %mB_load_9" [src/BMM_fonctions.c:38]   --->   Operation 1198 'fmul' 'tmp_2_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1199 [3/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:38]   --->   Operation 1199 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1200 [4/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_19, %tmp_5" [src/BMM_fonctions.c:38]   --->   Operation 1200 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1201 [1/4] (5.70ns)   --->   "%tmp_3_1 = fmul float %mA_load_1, %mB_load_13" [src/BMM_fonctions.c:38]   --->   Operation 1201 'fmul' 'tmp_3_1' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 1202 [3/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:38]   --->   Operation 1202 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 87 <SV = 14> <Delay = 7.25>
ST_87 : Operation 1203 [2/5] (7.25ns)   --->   "%tmp_6 = fadd float %mC_load_16, %tmp1" [src/BMM_fonctions.c:38]   --->   Operation 1203 'fadd' 'tmp_6' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1204 [1/4] (5.70ns)   --->   "%tmp_0_2 = fmul float %mA_load_2, %mB_load_2" [src/BMM_fonctions.c:38]   --->   Operation 1204 'fmul' 'tmp_0_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1205 [3/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:38]   --->   Operation 1205 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1206 [2/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_17, %tmp_s" [src/BMM_fonctions.c:38]   --->   Operation 1206 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1207 [1/4] (5.70ns)   --->   "%tmp_1135_2 = fmul float %mA_load_2, %mB_load_6" [src/BMM_fonctions.c:38]   --->   Operation 1207 'fmul' 'tmp_1135_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1208 [3/4] (5.70ns)   --->   "%tmp_1135_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:38]   --->   Operation 1208 'fmul' 'tmp_1135_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1209 [3/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_18, %tmp_4" [src/BMM_fonctions.c:38]   --->   Operation 1209 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1210 [2/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:38]   --->   Operation 1210 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1211 [4/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:38]   --->   Operation 1211 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1212 [3/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_19, %tmp_5" [src/BMM_fonctions.c:38]   --->   Operation 1212 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1213 [2/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:38]   --->   Operation 1213 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 1214 [4/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:38]   --->   Operation 1214 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 15> <Delay = 7.25>
ST_88 : Operation 1215 [1/5] (7.25ns)   --->   "%tmp_6 = fadd float %mC_load_16, %tmp1" [src/BMM_fonctions.c:38]   --->   Operation 1215 'fadd' 'tmp_6' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1216 [2/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:38]   --->   Operation 1216 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1217 [1/5] (7.25ns)   --->   "%tmp_1_1 = fadd float %mC_load_17, %tmp_s" [src/BMM_fonctions.c:38]   --->   Operation 1217 'fadd' 'tmp_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1218 [2/4] (5.70ns)   --->   "%tmp_1135_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:38]   --->   Operation 1218 'fmul' 'tmp_1135_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1219 [2/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_18, %tmp_4" [src/BMM_fonctions.c:38]   --->   Operation 1219 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1220 [1/4] (5.70ns)   --->   "%tmp_2_2 = fmul float %mA_load_2, %mB_load_10" [src/BMM_fonctions.c:38]   --->   Operation 1220 'fmul' 'tmp_2_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1221 [3/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:38]   --->   Operation 1221 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1222 [2/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_19, %tmp_5" [src/BMM_fonctions.c:38]   --->   Operation 1222 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1223 [1/4] (5.70ns)   --->   "%tmp_3_2 = fmul float %mA_load_2, %mB_load_14" [src/BMM_fonctions.c:38]   --->   Operation 1223 'fmul' 'tmp_3_2' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 1224 [3/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:38]   --->   Operation 1224 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 16> <Delay = 7.25>
ST_89 : Operation 1225 [5/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_6, %tmp_0_1" [src/BMM_fonctions.c:38]   --->   Operation 1225 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1226 [1/4] (5.70ns)   --->   "%tmp_0_3 = fmul float %mA_load_3, %mB_load_3" [src/BMM_fonctions.c:38]   --->   Operation 1226 'fmul' 'tmp_0_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1227 [5/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_1135_1" [src/BMM_fonctions.c:38]   --->   Operation 1227 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1228 [1/4] (5.70ns)   --->   "%tmp_1135_3 = fmul float %mA_load_3, %mB_load_7" [src/BMM_fonctions.c:38]   --->   Operation 1228 'fmul' 'tmp_1135_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1229 [1/5] (7.25ns)   --->   "%tmp_1_2 = fadd float %mC_load_18, %tmp_4" [src/BMM_fonctions.c:38]   --->   Operation 1229 'fadd' 'tmp_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1230 [2/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:38]   --->   Operation 1230 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1231 [1/5] (7.25ns)   --->   "%tmp_1_3 = fadd float %mC_load_19, %tmp_5" [src/BMM_fonctions.c:38]   --->   Operation 1231 'fadd' 'tmp_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_89 : Operation 1232 [2/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:38]   --->   Operation 1232 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 90 <SV = 17> <Delay = 7.25>
ST_90 : Operation 1233 [4/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_6, %tmp_0_1" [src/BMM_fonctions.c:38]   --->   Operation 1233 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 1234 [4/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_1135_1" [src/BMM_fonctions.c:38]   --->   Operation 1234 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 1235 [5/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:38]   --->   Operation 1235 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 1236 [1/4] (5.70ns)   --->   "%tmp_2_3 = fmul float %mA_load_3, %mB_load_11" [src/BMM_fonctions.c:38]   --->   Operation 1236 'fmul' 'tmp_2_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 1237 [5/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:38]   --->   Operation 1237 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_90 : Operation 1238 [1/4] (5.70ns)   --->   "%tmp_3_3 = fmul float %mA_load_3, %mB_load_15" [src/BMM_fonctions.c:38]   --->   Operation 1238 'fmul' 'tmp_3_3' <Predicate = (!icmp_ln30)> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 18> <Delay = 7.25>
ST_91 : Operation 1239 [3/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_6, %tmp_0_1" [src/BMM_fonctions.c:38]   --->   Operation 1239 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_91 : Operation 1240 [3/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_1135_1" [src/BMM_fonctions.c:38]   --->   Operation 1240 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_91 : Operation 1241 [4/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:38]   --->   Operation 1241 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_91 : Operation 1242 [4/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:38]   --->   Operation 1242 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 19> <Delay = 7.25>
ST_92 : Operation 1243 [2/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_6, %tmp_0_1" [src/BMM_fonctions.c:38]   --->   Operation 1243 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 1244 [2/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_1135_1" [src/BMM_fonctions.c:38]   --->   Operation 1244 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 1245 [3/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:38]   --->   Operation 1245 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 1246 [3/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:38]   --->   Operation 1246 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 93 <SV = 20> <Delay = 7.25>
ST_93 : Operation 1247 [1/5] (7.25ns)   --->   "%tmp_1_0_1 = fadd float %tmp_6, %tmp_0_1" [src/BMM_fonctions.c:38]   --->   Operation 1247 'fadd' 'tmp_1_0_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1248 [1/5] (7.25ns)   --->   "%tmp_1_1_1 = fadd float %tmp_1_1, %tmp_1135_1" [src/BMM_fonctions.c:38]   --->   Operation 1248 'fadd' 'tmp_1_1_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1249 [2/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:38]   --->   Operation 1249 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1250 [2/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:38]   --->   Operation 1250 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 21> <Delay = 7.25>
ST_94 : Operation 1251 [5/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:38]   --->   Operation 1251 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1252 [5/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_1135_2" [src/BMM_fonctions.c:38]   --->   Operation 1252 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1253 [1/5] (7.25ns)   --->   "%tmp_1_2_1 = fadd float %tmp_1_2, %tmp_2_1" [src/BMM_fonctions.c:38]   --->   Operation 1253 'fadd' 'tmp_1_2_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1254 [1/5] (7.25ns)   --->   "%tmp_1_3_1 = fadd float %tmp_1_3, %tmp_3_1" [src/BMM_fonctions.c:38]   --->   Operation 1254 'fadd' 'tmp_1_3_1' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 22> <Delay = 7.25>
ST_95 : Operation 1255 [4/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:38]   --->   Operation 1255 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1256 [4/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_1135_2" [src/BMM_fonctions.c:38]   --->   Operation 1256 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1257 [5/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:38]   --->   Operation 1257 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1258 [5/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:38]   --->   Operation 1258 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 96 <SV = 23> <Delay = 7.25>
ST_96 : Operation 1259 [3/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:38]   --->   Operation 1259 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1260 [3/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_1135_2" [src/BMM_fonctions.c:38]   --->   Operation 1260 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1261 [4/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:38]   --->   Operation 1261 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1262 [4/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:38]   --->   Operation 1262 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 97 <SV = 24> <Delay = 7.25>
ST_97 : Operation 1263 [2/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:38]   --->   Operation 1263 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1264 [2/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_1135_2" [src/BMM_fonctions.c:38]   --->   Operation 1264 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1265 [3/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:38]   --->   Operation 1265 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1266 [3/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:38]   --->   Operation 1266 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 98 <SV = 25> <Delay = 7.25>
ST_98 : Operation 1267 [1/5] (7.25ns)   --->   "%tmp_1_0_2 = fadd float %tmp_1_0_1, %tmp_0_2" [src/BMM_fonctions.c:38]   --->   Operation 1267 'fadd' 'tmp_1_0_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 1268 [1/5] (7.25ns)   --->   "%tmp_1_1_2 = fadd float %tmp_1_1_1, %tmp_1135_2" [src/BMM_fonctions.c:38]   --->   Operation 1268 'fadd' 'tmp_1_1_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 1269 [2/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:38]   --->   Operation 1269 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 1270 [2/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:38]   --->   Operation 1270 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 99 <SV = 26> <Delay = 7.25>
ST_99 : Operation 1271 [5/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:38]   --->   Operation 1271 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1272 [5/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_1135_3" [src/BMM_fonctions.c:38]   --->   Operation 1272 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1273 [1/5] (7.25ns)   --->   "%tmp_1_2_2 = fadd float %tmp_1_2_1, %tmp_2_2" [src/BMM_fonctions.c:38]   --->   Operation 1273 'fadd' 'tmp_1_2_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1274 [1/5] (7.25ns)   --->   "%tmp_1_3_2 = fadd float %tmp_1_3_1, %tmp_3_2" [src/BMM_fonctions.c:38]   --->   Operation 1274 'fadd' 'tmp_1_3_2' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 100 <SV = 27> <Delay = 7.25>
ST_100 : Operation 1275 [4/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:38]   --->   Operation 1275 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_100 : Operation 1276 [4/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_1135_3" [src/BMM_fonctions.c:38]   --->   Operation 1276 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 101 <SV = 28> <Delay = 7.25>
ST_101 : Operation 1277 [3/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:38]   --->   Operation 1277 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 1278 [3/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_1135_3" [src/BMM_fonctions.c:38]   --->   Operation 1278 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 102 <SV = 29> <Delay = 7.25>
ST_102 : Operation 1279 [2/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:38]   --->   Operation 1279 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 1280 [2/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_1135_3" [src/BMM_fonctions.c:38]   --->   Operation 1280 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 103 <SV = 30> <Delay = 7.25>
ST_103 : Operation 1281 [1/5] (7.25ns)   --->   "%tmp_1_0_3 = fadd float %tmp_1_0_2, %tmp_0_3" [src/BMM_fonctions.c:38]   --->   Operation 1281 'fadd' 'tmp_1_0_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 1282 [1/5] (7.25ns)   --->   "%tmp_1_1_3 = fadd float %tmp_1_1_2, %tmp_1135_3" [src/BMM_fonctions.c:38]   --->   Operation 1282 'fadd' 'tmp_1_1_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 104 <SV = 31> <Delay = 7.25>
ST_104 : Operation 1283 [1/1] (3.25ns)   --->   "store float %tmp_1_0_3, float* %mC_addr_32, align 16" [src/BMM_fonctions.c:38]   --->   Operation 1283 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_104 : Operation 1284 [1/1] (3.25ns)   --->   "store float %tmp_1_1_3, float* %mC_addr_33, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1284 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_104 : Operation 1285 [5/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:38]   --->   Operation 1285 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 1286 [5/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:38]   --->   Operation 1286 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 105 <SV = 32> <Delay = 7.25>
ST_105 : Operation 1287 [4/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:38]   --->   Operation 1287 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1288 [4/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:38]   --->   Operation 1288 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 106 <SV = 33> <Delay = 7.25>
ST_106 : Operation 1289 [3/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:38]   --->   Operation 1289 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1290 [3/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:38]   --->   Operation 1290 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 107 <SV = 34> <Delay = 7.25>
ST_107 : Operation 1291 [2/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:38]   --->   Operation 1291 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1292 [2/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:38]   --->   Operation 1292 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 108 <SV = 35> <Delay = 7.25>
ST_108 : Operation 1293 [1/5] (7.25ns)   --->   "%tmp_1_2_3 = fadd float %tmp_1_2_2, %tmp_2_3" [src/BMM_fonctions.c:38]   --->   Operation 1293 'fadd' 'tmp_1_2_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1294 [1/5] (7.25ns)   --->   "%tmp_1_3_3 = fadd float %tmp_1_3_2, %tmp_3_3" [src/BMM_fonctions.c:38]   --->   Operation 1294 'fadd' 'tmp_1_3_3' <Predicate = (!icmp_ln30)> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 109 <SV = 36> <Delay = 3.25>
ST_109 : Operation 1295 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @i_loop_k_loop_ii_loo)"   --->   Operation 1295 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1296 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind"   --->   Operation 1296 'speclooptripcount' 'empty_10' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1297 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @j_loop_k_loop_ii_loo)"   --->   Operation 1297 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1298 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @k_loop_ii_loop_str)"   --->   Operation 1298 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1299 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str13) nounwind" [src/BMM_fonctions.c:35]   --->   Operation 1299 'specloopname' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1300 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str13) nounwind" [src/BMM_fonctions.c:35]   --->   Operation 1300 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1301 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/BMM_fonctions.c:36]   --->   Operation 1301 'specpipeline' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1302 [1/1] (3.25ns)   --->   "store float %tmp_1_2_3, float* %mC_addr_34, align 8" [src/BMM_fonctions.c:38]   --->   Operation 1302 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_109 : Operation 1303 [1/1] (3.25ns)   --->   "store float %tmp_1_3_3, float* %mC_addr_35, align 4" [src/BMM_fonctions.c:38]   --->   Operation 1303 'store' <Predicate = (!icmp_ln30)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_109 : Operation 1304 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str13, i32 %tmp_3) nounwind" [src/BMM_fonctions.c:41]   --->   Operation 1304 'specregionend' 'empty_11' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_109 : Operation 1305 [1/1] (0.00ns)   --->   "br label %.preheader1.preheader" [src/BMM_fonctions.c:35]   --->   Operation 1305 'br' <Predicate = (!icmp_ln30)> <Delay = 0.00>

State 110 <SV = 5> <Delay = 1.76>
ST_110 : Operation 1306 [1/1] (1.76ns)   --->   "br label %.preheader" [src/BMM_fonctions.c:45]   --->   Operation 1306 'br' <Predicate = true> <Delay = 1.76>

State 111 <SV = 6> <Delay = 3.25>
ST_111 : Operation 1307 [1/1] (0.00ns)   --->   "%i_4 = phi i5 [ %i_9, %5 ], [ 0, %.preheader.preheader ]"   --->   Operation 1307 'phi' 'i_4' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1308 [1/1] (1.36ns)   --->   "%icmp_ln45 = icmp eq i5 %i_4, -16" [src/BMM_fonctions.c:45]   --->   Operation 1308 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_111 : Operation 1309 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 1309 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1310 [1/1] (1.78ns)   --->   "%i_9 = add i5 %i_4, 1" [src/BMM_fonctions.c:45]   --->   Operation 1310 'add' 'i_9' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_111 : Operation 1311 [1/1] (0.00ns)   --->   "br i1 %icmp_ln45, label %6, label %5" [src/BMM_fonctions.c:45]   --->   Operation 1311 'br' <Predicate = true> <Delay = 0.00>
ST_111 : Operation 1312 [1/1] (0.00ns)   --->   "%tmp_101 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %i_4, i4 0)" [src/BMM_fonctions.c:46]   --->   Operation 1312 'bitconcatenate' 'tmp_101' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_111 : Operation 1313 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i9 %tmp_101 to i64" [src/BMM_fonctions.c:46]   --->   Operation 1313 'zext' 'zext_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_111 : Operation 1314 [1/1] (0.00ns)   --->   "%zext_ln46_1 = zext i9 %tmp_101 to i31" [src/BMM_fonctions.c:46]   --->   Operation 1314 'zext' 'zext_ln46_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_111 : Operation 1315 [1/1] (2.49ns)   --->   "%add_ln46 = add i31 %zext_ln46_1, %p_cast159" [src/BMM_fonctions.c:46]   --->   Operation 1315 'add' 'add_ln46' <Predicate = (!icmp_ln45)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_111 : Operation 1316 [1/1] (0.00ns)   --->   "%mC_addr_16 = getelementptr [256 x float]* %mC, i64 0, i64 %zext_ln46" [src/BMM_fonctions.c:46]   --->   Operation 1316 'getelementptr' 'mC_addr_16' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_111 : Operation 1317 [2/2] (3.25ns)   --->   "%mC_load = load float* %mC_addr_16, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1317 'load' 'mC_load' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_111 : Operation 1318 [1/1] (0.00ns)   --->   "ret void" [src/BMM_fonctions.c:48]   --->   Operation 1318 'ret' <Predicate = (icmp_ln45)> <Delay = 0.00>

State 112 <SV = 7> <Delay = 8.75>
ST_112 : Operation 1319 [1/1] (0.00ns)   --->   "%zext_ln46_2 = zext i31 %add_ln46 to i64" [src/BMM_fonctions.c:46]   --->   Operation 1319 'zext' 'zext_ln46_2' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1320 [1/1] (0.00ns)   --->   "%OUTPUT_addr_16 = getelementptr float* %OUTPUT_r, i64 %zext_ln46_2" [src/BMM_fonctions.c:46]   --->   Operation 1320 'getelementptr' 'OUTPUT_addr_16' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1321 [1/1] (0.00ns)   --->   "%or_ln46 = or i9 %tmp_101, 1" [src/BMM_fonctions.c:46]   --->   Operation 1321 'or' 'or_ln46' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1322 [1/1] (0.00ns)   --->   "%tmp_102 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46)" [src/BMM_fonctions.c:46]   --->   Operation 1322 'bitconcatenate' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1323 [1/1] (3.52ns)   --->   "%add_ln46_1 = add i64 %tmp_102, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1323 'add' 'add_ln46_1' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_112 : Operation 1324 [1/1] (0.00ns)   --->   "%OUTPUT_addr_17 = getelementptr float* %OUTPUT_r, i64 %add_ln46_1" [src/BMM_fonctions.c:46]   --->   Operation 1324 'getelementptr' 'OUTPUT_addr_17' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1325 [1/1] (0.00ns)   --->   "%mC_addr_17 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_102" [src/BMM_fonctions.c:46]   --->   Operation 1325 'getelementptr' 'mC_addr_17' <Predicate = true> <Delay = 0.00>
ST_112 : Operation 1326 [1/2] (3.25ns)   --->   "%mC_load = load float* %mC_addr_16, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1326 'load' 'mC_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_112 : Operation 1327 [1/1] (8.75ns)   --->   "%OUTPUT_addr_16_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_16, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1327 'writereq' 'OUTPUT_addr_16_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_112 : Operation 1328 [2/2] (3.25ns)   --->   "%mC_load_1 = load float* %mC_addr_17, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1328 'load' 'mC_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 113 <SV = 8> <Delay = 8.75>
ST_113 : Operation 1329 [1/1] (0.00ns)   --->   "%or_ln46_1 = or i9 %tmp_101, 2" [src/BMM_fonctions.c:46]   --->   Operation 1329 'or' 'or_ln46_1' <Predicate = true> <Delay = 0.00>
ST_113 : Operation 1330 [1/1] (0.00ns)   --->   "%tmp_103 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_1)" [src/BMM_fonctions.c:46]   --->   Operation 1330 'bitconcatenate' 'tmp_103' <Predicate = true> <Delay = 0.00>
ST_113 : Operation 1331 [1/1] (3.52ns)   --->   "%add_ln46_2 = add i64 %tmp_103, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1331 'add' 'add_ln46_2' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_113 : Operation 1332 [1/1] (0.00ns)   --->   "%OUTPUT_addr_18 = getelementptr float* %OUTPUT_r, i64 %add_ln46_2" [src/BMM_fonctions.c:46]   --->   Operation 1332 'getelementptr' 'OUTPUT_addr_18' <Predicate = true> <Delay = 0.00>
ST_113 : Operation 1333 [1/1] (0.00ns)   --->   "%mC_addr_18 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_103" [src/BMM_fonctions.c:46]   --->   Operation 1333 'getelementptr' 'mC_addr_18' <Predicate = true> <Delay = 0.00>
ST_113 : Operation 1334 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_16, float %mC_load, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1334 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_113 : Operation 1335 [1/2] (3.25ns)   --->   "%mC_load_1 = load float* %mC_addr_17, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1335 'load' 'mC_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_113 : Operation 1336 [1/1] (8.75ns)   --->   "%OUTPUT_addr_17_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_17, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1336 'writereq' 'OUTPUT_addr_17_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_113 : Operation 1337 [2/2] (3.25ns)   --->   "%mC_load_2 = load float* %mC_addr_18, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1337 'load' 'mC_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 114 <SV = 9> <Delay = 8.75>
ST_114 : Operation 1338 [1/1] (0.00ns)   --->   "%or_ln46_2 = or i9 %tmp_101, 3" [src/BMM_fonctions.c:46]   --->   Operation 1338 'or' 'or_ln46_2' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1339 [1/1] (0.00ns)   --->   "%tmp_104 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_2)" [src/BMM_fonctions.c:46]   --->   Operation 1339 'bitconcatenate' 'tmp_104' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1340 [1/1] (3.52ns)   --->   "%add_ln46_3 = add i64 %tmp_104, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1340 'add' 'add_ln46_3' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_114 : Operation 1341 [1/1] (0.00ns)   --->   "%OUTPUT_addr_19 = getelementptr float* %OUTPUT_r, i64 %add_ln46_3" [src/BMM_fonctions.c:46]   --->   Operation 1341 'getelementptr' 'OUTPUT_addr_19' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1342 [1/1] (0.00ns)   --->   "%mC_addr_19 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_104" [src/BMM_fonctions.c:46]   --->   Operation 1342 'getelementptr' 'mC_addr_19' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1343 [5/5] (8.75ns)   --->   "%OUTPUT_addr_16_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:46]   --->   Operation 1343 'writeresp' 'OUTPUT_addr_16_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_114 : Operation 1344 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_17, float %mC_load_1, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1344 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_114 : Operation 1345 [1/2] (3.25ns)   --->   "%mC_load_2 = load float* %mC_addr_18, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1345 'load' 'mC_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_114 : Operation 1346 [1/1] (8.75ns)   --->   "%OUTPUT_addr_18_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_18, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1346 'writereq' 'OUTPUT_addr_18_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_114 : Operation 1347 [2/2] (3.25ns)   --->   "%mC_load_3 = load float* %mC_addr_19, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1347 'load' 'mC_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 115 <SV = 10> <Delay = 8.75>
ST_115 : Operation 1348 [1/1] (0.00ns)   --->   "%or_ln46_3 = or i9 %tmp_101, 4" [src/BMM_fonctions.c:46]   --->   Operation 1348 'or' 'or_ln46_3' <Predicate = true> <Delay = 0.00>
ST_115 : Operation 1349 [1/1] (0.00ns)   --->   "%tmp_105 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_3)" [src/BMM_fonctions.c:46]   --->   Operation 1349 'bitconcatenate' 'tmp_105' <Predicate = true> <Delay = 0.00>
ST_115 : Operation 1350 [1/1] (3.52ns)   --->   "%add_ln46_4 = add i64 %tmp_105, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1350 'add' 'add_ln46_4' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_115 : Operation 1351 [1/1] (0.00ns)   --->   "%OUTPUT_addr_20 = getelementptr float* %OUTPUT_r, i64 %add_ln46_4" [src/BMM_fonctions.c:46]   --->   Operation 1351 'getelementptr' 'OUTPUT_addr_20' <Predicate = true> <Delay = 0.00>
ST_115 : Operation 1352 [1/1] (0.00ns)   --->   "%mC_addr_20 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_105" [src/BMM_fonctions.c:46]   --->   Operation 1352 'getelementptr' 'mC_addr_20' <Predicate = true> <Delay = 0.00>
ST_115 : Operation 1353 [4/5] (8.75ns)   --->   "%OUTPUT_addr_16_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:46]   --->   Operation 1353 'writeresp' 'OUTPUT_addr_16_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_115 : Operation 1354 [5/5] (8.75ns)   --->   "%OUTPUT_addr_17_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:46]   --->   Operation 1354 'writeresp' 'OUTPUT_addr_17_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_115 : Operation 1355 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_18, float %mC_load_2, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1355 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_115 : Operation 1356 [1/2] (3.25ns)   --->   "%mC_load_3 = load float* %mC_addr_19, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1356 'load' 'mC_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_115 : Operation 1357 [1/1] (8.75ns)   --->   "%OUTPUT_addr_19_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_19, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1357 'writereq' 'OUTPUT_addr_19_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_115 : Operation 1358 [2/2] (3.25ns)   --->   "%mC_load_4 = load float* %mC_addr_20, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1358 'load' 'mC_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 116 <SV = 11> <Delay = 8.75>
ST_116 : Operation 1359 [1/1] (0.00ns)   --->   "%or_ln46_4 = or i9 %tmp_101, 5" [src/BMM_fonctions.c:46]   --->   Operation 1359 'or' 'or_ln46_4' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1360 [1/1] (0.00ns)   --->   "%tmp_106 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_4)" [src/BMM_fonctions.c:46]   --->   Operation 1360 'bitconcatenate' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1361 [1/1] (3.52ns)   --->   "%add_ln46_5 = add i64 %tmp_106, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1361 'add' 'add_ln46_5' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1362 [1/1] (0.00ns)   --->   "%OUTPUT_addr_21 = getelementptr float* %OUTPUT_r, i64 %add_ln46_5" [src/BMM_fonctions.c:46]   --->   Operation 1362 'getelementptr' 'OUTPUT_addr_21' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1363 [1/1] (0.00ns)   --->   "%mC_addr_21 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_106" [src/BMM_fonctions.c:46]   --->   Operation 1363 'getelementptr' 'mC_addr_21' <Predicate = true> <Delay = 0.00>
ST_116 : Operation 1364 [3/5] (8.75ns)   --->   "%OUTPUT_addr_16_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:46]   --->   Operation 1364 'writeresp' 'OUTPUT_addr_16_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1365 [4/5] (8.75ns)   --->   "%OUTPUT_addr_17_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:46]   --->   Operation 1365 'writeresp' 'OUTPUT_addr_17_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1366 [5/5] (8.75ns)   --->   "%OUTPUT_addr_18_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:46]   --->   Operation 1366 'writeresp' 'OUTPUT_addr_18_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1367 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_19, float %mC_load_3, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1367 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1368 [1/2] (3.25ns)   --->   "%mC_load_4 = load float* %mC_addr_20, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1368 'load' 'mC_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_116 : Operation 1369 [1/1] (8.75ns)   --->   "%OUTPUT_addr_20_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_20, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1369 'writereq' 'OUTPUT_addr_20_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_116 : Operation 1370 [2/2] (3.25ns)   --->   "%mC_load_5 = load float* %mC_addr_21, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1370 'load' 'mC_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 117 <SV = 12> <Delay = 8.75>
ST_117 : Operation 1371 [1/1] (0.00ns)   --->   "%or_ln46_5 = or i9 %tmp_101, 6" [src/BMM_fonctions.c:46]   --->   Operation 1371 'or' 'or_ln46_5' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1372 [1/1] (0.00ns)   --->   "%tmp_107 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_5)" [src/BMM_fonctions.c:46]   --->   Operation 1372 'bitconcatenate' 'tmp_107' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1373 [1/1] (3.52ns)   --->   "%add_ln46_6 = add i64 %tmp_107, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1373 'add' 'add_ln46_6' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1374 [1/1] (0.00ns)   --->   "%OUTPUT_addr_22 = getelementptr float* %OUTPUT_r, i64 %add_ln46_6" [src/BMM_fonctions.c:46]   --->   Operation 1374 'getelementptr' 'OUTPUT_addr_22' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1375 [1/1] (0.00ns)   --->   "%mC_addr_22 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_107" [src/BMM_fonctions.c:46]   --->   Operation 1375 'getelementptr' 'mC_addr_22' <Predicate = true> <Delay = 0.00>
ST_117 : Operation 1376 [2/5] (8.75ns)   --->   "%OUTPUT_addr_16_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:46]   --->   Operation 1376 'writeresp' 'OUTPUT_addr_16_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1377 [3/5] (8.75ns)   --->   "%OUTPUT_addr_17_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:46]   --->   Operation 1377 'writeresp' 'OUTPUT_addr_17_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1378 [4/5] (8.75ns)   --->   "%OUTPUT_addr_18_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:46]   --->   Operation 1378 'writeresp' 'OUTPUT_addr_18_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1379 [5/5] (8.75ns)   --->   "%OUTPUT_addr_19_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:46]   --->   Operation 1379 'writeresp' 'OUTPUT_addr_19_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1380 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_20, float %mC_load_4, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1380 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1381 [1/2] (3.25ns)   --->   "%mC_load_5 = load float* %mC_addr_21, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1381 'load' 'mC_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_117 : Operation 1382 [1/1] (8.75ns)   --->   "%OUTPUT_addr_21_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_21, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1382 'writereq' 'OUTPUT_addr_21_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_117 : Operation 1383 [2/2] (3.25ns)   --->   "%mC_load_6 = load float* %mC_addr_22, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1383 'load' 'mC_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 118 <SV = 13> <Delay = 8.75>
ST_118 : Operation 1384 [1/1] (0.00ns)   --->   "%or_ln46_6 = or i9 %tmp_101, 7" [src/BMM_fonctions.c:46]   --->   Operation 1384 'or' 'or_ln46_6' <Predicate = true> <Delay = 0.00>
ST_118 : Operation 1385 [1/1] (0.00ns)   --->   "%tmp_108 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_6)" [src/BMM_fonctions.c:46]   --->   Operation 1385 'bitconcatenate' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_118 : Operation 1386 [1/1] (3.52ns)   --->   "%add_ln46_7 = add i64 %tmp_108, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1386 'add' 'add_ln46_7' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1387 [1/1] (0.00ns)   --->   "%OUTPUT_addr_23 = getelementptr float* %OUTPUT_r, i64 %add_ln46_7" [src/BMM_fonctions.c:46]   --->   Operation 1387 'getelementptr' 'OUTPUT_addr_23' <Predicate = true> <Delay = 0.00>
ST_118 : Operation 1388 [1/1] (0.00ns)   --->   "%mC_addr_23 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_108" [src/BMM_fonctions.c:46]   --->   Operation 1388 'getelementptr' 'mC_addr_23' <Predicate = true> <Delay = 0.00>
ST_118 : Operation 1389 [1/5] (8.75ns)   --->   "%OUTPUT_addr_16_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_16)" [src/BMM_fonctions.c:46]   --->   Operation 1389 'writeresp' 'OUTPUT_addr_16_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1390 [2/5] (8.75ns)   --->   "%OUTPUT_addr_17_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:46]   --->   Operation 1390 'writeresp' 'OUTPUT_addr_17_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1391 [3/5] (8.75ns)   --->   "%OUTPUT_addr_18_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:46]   --->   Operation 1391 'writeresp' 'OUTPUT_addr_18_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1392 [4/5] (8.75ns)   --->   "%OUTPUT_addr_19_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:46]   --->   Operation 1392 'writeresp' 'OUTPUT_addr_19_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1393 [5/5] (8.75ns)   --->   "%OUTPUT_addr_20_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:46]   --->   Operation 1393 'writeresp' 'OUTPUT_addr_20_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1394 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_21, float %mC_load_5, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1394 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1395 [1/2] (3.25ns)   --->   "%mC_load_6 = load float* %mC_addr_22, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1395 'load' 'mC_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_118 : Operation 1396 [1/1] (8.75ns)   --->   "%OUTPUT_addr_22_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_22, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1396 'writereq' 'OUTPUT_addr_22_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_118 : Operation 1397 [2/2] (3.25ns)   --->   "%mC_load_7 = load float* %mC_addr_23, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1397 'load' 'mC_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 119 <SV = 14> <Delay = 8.75>
ST_119 : Operation 1398 [1/1] (0.00ns)   --->   "%or_ln46_7 = or i9 %tmp_101, 8" [src/BMM_fonctions.c:46]   --->   Operation 1398 'or' 'or_ln46_7' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1399 [1/1] (0.00ns)   --->   "%tmp_109 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_7)" [src/BMM_fonctions.c:46]   --->   Operation 1399 'bitconcatenate' 'tmp_109' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1400 [1/1] (3.52ns)   --->   "%add_ln46_8 = add i64 %tmp_109, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1400 'add' 'add_ln46_8' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1401 [1/1] (0.00ns)   --->   "%OUTPUT_addr_24 = getelementptr float* %OUTPUT_r, i64 %add_ln46_8" [src/BMM_fonctions.c:46]   --->   Operation 1401 'getelementptr' 'OUTPUT_addr_24' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1402 [1/1] (0.00ns)   --->   "%mC_addr_24 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_109" [src/BMM_fonctions.c:46]   --->   Operation 1402 'getelementptr' 'mC_addr_24' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1403 [1/5] (8.75ns)   --->   "%OUTPUT_addr_17_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_17)" [src/BMM_fonctions.c:46]   --->   Operation 1403 'writeresp' 'OUTPUT_addr_17_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1404 [2/5] (8.75ns)   --->   "%OUTPUT_addr_18_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:46]   --->   Operation 1404 'writeresp' 'OUTPUT_addr_18_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1405 [3/5] (8.75ns)   --->   "%OUTPUT_addr_19_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:46]   --->   Operation 1405 'writeresp' 'OUTPUT_addr_19_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1406 [4/5] (8.75ns)   --->   "%OUTPUT_addr_20_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:46]   --->   Operation 1406 'writeresp' 'OUTPUT_addr_20_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1407 [5/5] (8.75ns)   --->   "%OUTPUT_addr_21_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:46]   --->   Operation 1407 'writeresp' 'OUTPUT_addr_21_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1408 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_22, float %mC_load_6, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1408 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1409 [1/2] (3.25ns)   --->   "%mC_load_7 = load float* %mC_addr_23, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1409 'load' 'mC_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_119 : Operation 1410 [1/1] (8.75ns)   --->   "%OUTPUT_addr_23_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_23, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1410 'writereq' 'OUTPUT_addr_23_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_119 : Operation 1411 [2/2] (3.25ns)   --->   "%mC_load_8 = load float* %mC_addr_24, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1411 'load' 'mC_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 120 <SV = 15> <Delay = 8.75>
ST_120 : Operation 1412 [1/1] (0.00ns)   --->   "%or_ln46_8 = or i9 %tmp_101, 9" [src/BMM_fonctions.c:46]   --->   Operation 1412 'or' 'or_ln46_8' <Predicate = true> <Delay = 0.00>
ST_120 : Operation 1413 [1/1] (0.00ns)   --->   "%tmp_110 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_8)" [src/BMM_fonctions.c:46]   --->   Operation 1413 'bitconcatenate' 'tmp_110' <Predicate = true> <Delay = 0.00>
ST_120 : Operation 1414 [1/1] (3.52ns)   --->   "%add_ln46_9 = add i64 %tmp_110, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1414 'add' 'add_ln46_9' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_120 : Operation 1415 [1/1] (0.00ns)   --->   "%OUTPUT_addr_25 = getelementptr float* %OUTPUT_r, i64 %add_ln46_9" [src/BMM_fonctions.c:46]   --->   Operation 1415 'getelementptr' 'OUTPUT_addr_25' <Predicate = true> <Delay = 0.00>
ST_120 : Operation 1416 [1/1] (0.00ns)   --->   "%mC_addr_25 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_110" [src/BMM_fonctions.c:46]   --->   Operation 1416 'getelementptr' 'mC_addr_25' <Predicate = true> <Delay = 0.00>
ST_120 : Operation 1417 [1/5] (8.75ns)   --->   "%OUTPUT_addr_18_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_18)" [src/BMM_fonctions.c:46]   --->   Operation 1417 'writeresp' 'OUTPUT_addr_18_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1418 [2/5] (8.75ns)   --->   "%OUTPUT_addr_19_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:46]   --->   Operation 1418 'writeresp' 'OUTPUT_addr_19_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1419 [3/5] (8.75ns)   --->   "%OUTPUT_addr_20_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:46]   --->   Operation 1419 'writeresp' 'OUTPUT_addr_20_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1420 [4/5] (8.75ns)   --->   "%OUTPUT_addr_21_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:46]   --->   Operation 1420 'writeresp' 'OUTPUT_addr_21_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1421 [5/5] (8.75ns)   --->   "%OUTPUT_addr_22_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:46]   --->   Operation 1421 'writeresp' 'OUTPUT_addr_22_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1422 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_23, float %mC_load_7, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1422 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1423 [1/2] (3.25ns)   --->   "%mC_load_8 = load float* %mC_addr_24, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1423 'load' 'mC_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_120 : Operation 1424 [1/1] (8.75ns)   --->   "%OUTPUT_addr_24_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_24, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1424 'writereq' 'OUTPUT_addr_24_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_120 : Operation 1425 [2/2] (3.25ns)   --->   "%mC_load_9 = load float* %mC_addr_25, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1425 'load' 'mC_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 121 <SV = 16> <Delay = 8.75>
ST_121 : Operation 1426 [1/1] (0.00ns)   --->   "%or_ln46_9 = or i9 %tmp_101, 10" [src/BMM_fonctions.c:46]   --->   Operation 1426 'or' 'or_ln46_9' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1427 [1/1] (0.00ns)   --->   "%tmp_111 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_9)" [src/BMM_fonctions.c:46]   --->   Operation 1427 'bitconcatenate' 'tmp_111' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1428 [1/1] (3.52ns)   --->   "%add_ln46_10 = add i64 %tmp_111, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1428 'add' 'add_ln46_10' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_121 : Operation 1429 [1/1] (0.00ns)   --->   "%OUTPUT_addr_26 = getelementptr float* %OUTPUT_r, i64 %add_ln46_10" [src/BMM_fonctions.c:46]   --->   Operation 1429 'getelementptr' 'OUTPUT_addr_26' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1430 [1/1] (0.00ns)   --->   "%mC_addr_26 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_111" [src/BMM_fonctions.c:46]   --->   Operation 1430 'getelementptr' 'mC_addr_26' <Predicate = true> <Delay = 0.00>
ST_121 : Operation 1431 [1/5] (8.75ns)   --->   "%OUTPUT_addr_19_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_19)" [src/BMM_fonctions.c:46]   --->   Operation 1431 'writeresp' 'OUTPUT_addr_19_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1432 [2/5] (8.75ns)   --->   "%OUTPUT_addr_20_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:46]   --->   Operation 1432 'writeresp' 'OUTPUT_addr_20_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1433 [3/5] (8.75ns)   --->   "%OUTPUT_addr_21_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:46]   --->   Operation 1433 'writeresp' 'OUTPUT_addr_21_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1434 [4/5] (8.75ns)   --->   "%OUTPUT_addr_22_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:46]   --->   Operation 1434 'writeresp' 'OUTPUT_addr_22_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1435 [5/5] (8.75ns)   --->   "%OUTPUT_addr_23_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:46]   --->   Operation 1435 'writeresp' 'OUTPUT_addr_23_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1436 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_24, float %mC_load_8, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1436 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1437 [1/2] (3.25ns)   --->   "%mC_load_9 = load float* %mC_addr_25, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1437 'load' 'mC_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_121 : Operation 1438 [1/1] (8.75ns)   --->   "%OUTPUT_addr_25_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_25, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1438 'writereq' 'OUTPUT_addr_25_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_121 : Operation 1439 [2/2] (3.25ns)   --->   "%mC_load_10 = load float* %mC_addr_26, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1439 'load' 'mC_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 122 <SV = 17> <Delay = 8.75>
ST_122 : Operation 1440 [1/1] (0.00ns)   --->   "%or_ln46_10 = or i9 %tmp_101, 11" [src/BMM_fonctions.c:46]   --->   Operation 1440 'or' 'or_ln46_10' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1441 [1/1] (0.00ns)   --->   "%tmp_112 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_10)" [src/BMM_fonctions.c:46]   --->   Operation 1441 'bitconcatenate' 'tmp_112' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1442 [1/1] (3.52ns)   --->   "%add_ln46_11 = add i64 %tmp_112, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1442 'add' 'add_ln46_11' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_122 : Operation 1443 [1/1] (0.00ns)   --->   "%OUTPUT_addr_27 = getelementptr float* %OUTPUT_r, i64 %add_ln46_11" [src/BMM_fonctions.c:46]   --->   Operation 1443 'getelementptr' 'OUTPUT_addr_27' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1444 [1/1] (0.00ns)   --->   "%mC_addr_27 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_112" [src/BMM_fonctions.c:46]   --->   Operation 1444 'getelementptr' 'mC_addr_27' <Predicate = true> <Delay = 0.00>
ST_122 : Operation 1445 [1/5] (8.75ns)   --->   "%OUTPUT_addr_20_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_20)" [src/BMM_fonctions.c:46]   --->   Operation 1445 'writeresp' 'OUTPUT_addr_20_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1446 [2/5] (8.75ns)   --->   "%OUTPUT_addr_21_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:46]   --->   Operation 1446 'writeresp' 'OUTPUT_addr_21_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1447 [3/5] (8.75ns)   --->   "%OUTPUT_addr_22_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:46]   --->   Operation 1447 'writeresp' 'OUTPUT_addr_22_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1448 [4/5] (8.75ns)   --->   "%OUTPUT_addr_23_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:46]   --->   Operation 1448 'writeresp' 'OUTPUT_addr_23_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1449 [5/5] (8.75ns)   --->   "%OUTPUT_addr_24_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:46]   --->   Operation 1449 'writeresp' 'OUTPUT_addr_24_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1450 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_25, float %mC_load_9, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1450 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1451 [1/2] (3.25ns)   --->   "%mC_load_10 = load float* %mC_addr_26, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1451 'load' 'mC_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_122 : Operation 1452 [1/1] (8.75ns)   --->   "%OUTPUT_addr_26_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_26, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1452 'writereq' 'OUTPUT_addr_26_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_122 : Operation 1453 [2/2] (3.25ns)   --->   "%mC_load_11 = load float* %mC_addr_27, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1453 'load' 'mC_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 123 <SV = 18> <Delay = 8.75>
ST_123 : Operation 1454 [1/1] (0.00ns)   --->   "%or_ln46_11 = or i9 %tmp_101, 12" [src/BMM_fonctions.c:46]   --->   Operation 1454 'or' 'or_ln46_11' <Predicate = true> <Delay = 0.00>
ST_123 : Operation 1455 [1/1] (0.00ns)   --->   "%tmp_113 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_11)" [src/BMM_fonctions.c:46]   --->   Operation 1455 'bitconcatenate' 'tmp_113' <Predicate = true> <Delay = 0.00>
ST_123 : Operation 1456 [1/1] (3.52ns)   --->   "%add_ln46_12 = add i64 %tmp_113, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1456 'add' 'add_ln46_12' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_123 : Operation 1457 [1/1] (0.00ns)   --->   "%OUTPUT_addr_28 = getelementptr float* %OUTPUT_r, i64 %add_ln46_12" [src/BMM_fonctions.c:46]   --->   Operation 1457 'getelementptr' 'OUTPUT_addr_28' <Predicate = true> <Delay = 0.00>
ST_123 : Operation 1458 [1/1] (0.00ns)   --->   "%mC_addr_28 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_113" [src/BMM_fonctions.c:46]   --->   Operation 1458 'getelementptr' 'mC_addr_28' <Predicate = true> <Delay = 0.00>
ST_123 : Operation 1459 [1/5] (8.75ns)   --->   "%OUTPUT_addr_21_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_21)" [src/BMM_fonctions.c:46]   --->   Operation 1459 'writeresp' 'OUTPUT_addr_21_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1460 [2/5] (8.75ns)   --->   "%OUTPUT_addr_22_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:46]   --->   Operation 1460 'writeresp' 'OUTPUT_addr_22_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1461 [3/5] (8.75ns)   --->   "%OUTPUT_addr_23_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:46]   --->   Operation 1461 'writeresp' 'OUTPUT_addr_23_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1462 [4/5] (8.75ns)   --->   "%OUTPUT_addr_24_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:46]   --->   Operation 1462 'writeresp' 'OUTPUT_addr_24_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1463 [5/5] (8.75ns)   --->   "%OUTPUT_addr_25_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:46]   --->   Operation 1463 'writeresp' 'OUTPUT_addr_25_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1464 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_26, float %mC_load_10, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1464 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1465 [1/2] (3.25ns)   --->   "%mC_load_11 = load float* %mC_addr_27, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1465 'load' 'mC_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_123 : Operation 1466 [1/1] (8.75ns)   --->   "%OUTPUT_addr_27_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_27, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1466 'writereq' 'OUTPUT_addr_27_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_123 : Operation 1467 [2/2] (3.25ns)   --->   "%mC_load_12 = load float* %mC_addr_28, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1467 'load' 'mC_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 124 <SV = 19> <Delay = 8.75>
ST_124 : Operation 1468 [1/1] (0.00ns)   --->   "%or_ln46_12 = or i9 %tmp_101, 13" [src/BMM_fonctions.c:46]   --->   Operation 1468 'or' 'or_ln46_12' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1469 [1/1] (0.00ns)   --->   "%tmp_114 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_12)" [src/BMM_fonctions.c:46]   --->   Operation 1469 'bitconcatenate' 'tmp_114' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1470 [1/1] (3.52ns)   --->   "%add_ln46_13 = add i64 %tmp_114, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1470 'add' 'add_ln46_13' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_124 : Operation 1471 [1/1] (0.00ns)   --->   "%OUTPUT_addr_29 = getelementptr float* %OUTPUT_r, i64 %add_ln46_13" [src/BMM_fonctions.c:46]   --->   Operation 1471 'getelementptr' 'OUTPUT_addr_29' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1472 [1/1] (0.00ns)   --->   "%mC_addr_29 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_114" [src/BMM_fonctions.c:46]   --->   Operation 1472 'getelementptr' 'mC_addr_29' <Predicate = true> <Delay = 0.00>
ST_124 : Operation 1473 [1/5] (8.75ns)   --->   "%OUTPUT_addr_22_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_22)" [src/BMM_fonctions.c:46]   --->   Operation 1473 'writeresp' 'OUTPUT_addr_22_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1474 [2/5] (8.75ns)   --->   "%OUTPUT_addr_23_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:46]   --->   Operation 1474 'writeresp' 'OUTPUT_addr_23_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1475 [3/5] (8.75ns)   --->   "%OUTPUT_addr_24_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:46]   --->   Operation 1475 'writeresp' 'OUTPUT_addr_24_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1476 [4/5] (8.75ns)   --->   "%OUTPUT_addr_25_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:46]   --->   Operation 1476 'writeresp' 'OUTPUT_addr_25_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1477 [5/5] (8.75ns)   --->   "%OUTPUT_addr_26_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:46]   --->   Operation 1477 'writeresp' 'OUTPUT_addr_26_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1478 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_27, float %mC_load_11, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1478 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1479 [1/2] (3.25ns)   --->   "%mC_load_12 = load float* %mC_addr_28, align 16" [src/BMM_fonctions.c:46]   --->   Operation 1479 'load' 'mC_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_124 : Operation 1480 [1/1] (8.75ns)   --->   "%OUTPUT_addr_28_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_28, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1480 'writereq' 'OUTPUT_addr_28_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_124 : Operation 1481 [2/2] (3.25ns)   --->   "%mC_load_13 = load float* %mC_addr_29, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1481 'load' 'mC_load_13' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 125 <SV = 20> <Delay = 8.75>
ST_125 : Operation 1482 [1/1] (0.00ns)   --->   "%or_ln46_13 = or i9 %tmp_101, 14" [src/BMM_fonctions.c:46]   --->   Operation 1482 'or' 'or_ln46_13' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1483 [1/1] (0.00ns)   --->   "%tmp_115 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_13)" [src/BMM_fonctions.c:46]   --->   Operation 1483 'bitconcatenate' 'tmp_115' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1484 [1/1] (3.52ns)   --->   "%add_ln46_14 = add i64 %tmp_115, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1484 'add' 'add_ln46_14' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_125 : Operation 1485 [1/1] (0.00ns)   --->   "%OUTPUT_addr_30 = getelementptr float* %OUTPUT_r, i64 %add_ln46_14" [src/BMM_fonctions.c:46]   --->   Operation 1485 'getelementptr' 'OUTPUT_addr_30' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1486 [1/1] (0.00ns)   --->   "%or_ln46_14 = or i9 %tmp_101, 15" [src/BMM_fonctions.c:46]   --->   Operation 1486 'or' 'or_ln46_14' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1487 [1/1] (0.00ns)   --->   "%tmp_116 = call i64 @_ssdm_op_BitConcatenate.i64.i55.i9(i55 0, i9 %or_ln46_14)" [src/BMM_fonctions.c:46]   --->   Operation 1487 'bitconcatenate' 'tmp_116' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1488 [1/1] (3.52ns)   --->   "%add_ln46_15 = add i64 %tmp_116, %empty" [src/BMM_fonctions.c:46]   --->   Operation 1488 'add' 'add_ln46_15' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_125 : Operation 1489 [1/1] (0.00ns)   --->   "%OUTPUT_addr_31 = getelementptr float* %OUTPUT_r, i64 %add_ln46_15" [src/BMM_fonctions.c:46]   --->   Operation 1489 'getelementptr' 'OUTPUT_addr_31' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1490 [1/1] (0.00ns)   --->   "%mC_addr_30 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_115" [src/BMM_fonctions.c:46]   --->   Operation 1490 'getelementptr' 'mC_addr_30' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1491 [1/1] (0.00ns)   --->   "%mC_addr_31 = getelementptr [256 x float]* %mC, i64 0, i64 %tmp_116" [src/BMM_fonctions.c:46]   --->   Operation 1491 'getelementptr' 'mC_addr_31' <Predicate = true> <Delay = 0.00>
ST_125 : Operation 1492 [1/5] (8.75ns)   --->   "%OUTPUT_addr_23_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_23)" [src/BMM_fonctions.c:46]   --->   Operation 1492 'writeresp' 'OUTPUT_addr_23_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1493 [2/5] (8.75ns)   --->   "%OUTPUT_addr_24_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:46]   --->   Operation 1493 'writeresp' 'OUTPUT_addr_24_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1494 [3/5] (8.75ns)   --->   "%OUTPUT_addr_25_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:46]   --->   Operation 1494 'writeresp' 'OUTPUT_addr_25_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1495 [4/5] (8.75ns)   --->   "%OUTPUT_addr_26_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:46]   --->   Operation 1495 'writeresp' 'OUTPUT_addr_26_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1496 [5/5] (8.75ns)   --->   "%OUTPUT_addr_27_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:46]   --->   Operation 1496 'writeresp' 'OUTPUT_addr_27_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1497 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_28, float %mC_load_12, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1497 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1498 [1/2] (3.25ns)   --->   "%mC_load_13 = load float* %mC_addr_29, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1498 'load' 'mC_load_13' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_125 : Operation 1499 [1/1] (8.75ns)   --->   "%OUTPUT_addr_29_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_29, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1499 'writereq' 'OUTPUT_addr_29_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_125 : Operation 1500 [2/2] (3.25ns)   --->   "%mC_load_14 = load float* %mC_addr_30, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1500 'load' 'mC_load_14' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_125 : Operation 1501 [2/2] (3.25ns)   --->   "%mC_load_15 = load float* %mC_addr_31, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1501 'load' 'mC_load_15' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 126 <SV = 21> <Delay = 8.75>
ST_126 : Operation 1502 [1/5] (8.75ns)   --->   "%OUTPUT_addr_24_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_24)" [src/BMM_fonctions.c:46]   --->   Operation 1502 'writeresp' 'OUTPUT_addr_24_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1503 [2/5] (8.75ns)   --->   "%OUTPUT_addr_25_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:46]   --->   Operation 1503 'writeresp' 'OUTPUT_addr_25_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1504 [3/5] (8.75ns)   --->   "%OUTPUT_addr_26_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:46]   --->   Operation 1504 'writeresp' 'OUTPUT_addr_26_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1505 [4/5] (8.75ns)   --->   "%OUTPUT_addr_27_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:46]   --->   Operation 1505 'writeresp' 'OUTPUT_addr_27_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1506 [5/5] (8.75ns)   --->   "%OUTPUT_addr_28_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:46]   --->   Operation 1506 'writeresp' 'OUTPUT_addr_28_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1507 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_29, float %mC_load_13, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1507 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1508 [1/2] (3.25ns)   --->   "%mC_load_14 = load float* %mC_addr_30, align 8" [src/BMM_fonctions.c:46]   --->   Operation 1508 'load' 'mC_load_14' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_126 : Operation 1509 [1/1] (8.75ns)   --->   "%OUTPUT_addr_30_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_30, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1509 'writereq' 'OUTPUT_addr_30_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_126 : Operation 1510 [1/2] (3.25ns)   --->   "%mC_load_15 = load float* %mC_addr_31, align 4" [src/BMM_fonctions.c:46]   --->   Operation 1510 'load' 'mC_load_15' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 127 <SV = 22> <Delay = 8.75>
ST_127 : Operation 1511 [1/5] (8.75ns)   --->   "%OUTPUT_addr_25_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_25)" [src/BMM_fonctions.c:46]   --->   Operation 1511 'writeresp' 'OUTPUT_addr_25_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1512 [2/5] (8.75ns)   --->   "%OUTPUT_addr_26_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:46]   --->   Operation 1512 'writeresp' 'OUTPUT_addr_26_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1513 [3/5] (8.75ns)   --->   "%OUTPUT_addr_27_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:46]   --->   Operation 1513 'writeresp' 'OUTPUT_addr_27_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1514 [4/5] (8.75ns)   --->   "%OUTPUT_addr_28_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:46]   --->   Operation 1514 'writeresp' 'OUTPUT_addr_28_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1515 [5/5] (8.75ns)   --->   "%OUTPUT_addr_29_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:46]   --->   Operation 1515 'writeresp' 'OUTPUT_addr_29_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1516 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_30, float %mC_load_14, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1516 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_127 : Operation 1517 [1/1] (8.75ns)   --->   "%OUTPUT_addr_31_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %OUTPUT_addr_31, i32 1)" [src/BMM_fonctions.c:46]   --->   Operation 1517 'writereq' 'OUTPUT_addr_31_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 128 <SV = 23> <Delay = 8.75>
ST_128 : Operation 1518 [1/5] (8.75ns)   --->   "%OUTPUT_addr_26_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_26)" [src/BMM_fonctions.c:46]   --->   Operation 1518 'writeresp' 'OUTPUT_addr_26_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_128 : Operation 1519 [2/5] (8.75ns)   --->   "%OUTPUT_addr_27_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:46]   --->   Operation 1519 'writeresp' 'OUTPUT_addr_27_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_128 : Operation 1520 [3/5] (8.75ns)   --->   "%OUTPUT_addr_28_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:46]   --->   Operation 1520 'writeresp' 'OUTPUT_addr_28_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_128 : Operation 1521 [4/5] (8.75ns)   --->   "%OUTPUT_addr_29_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:46]   --->   Operation 1521 'writeresp' 'OUTPUT_addr_29_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_128 : Operation 1522 [5/5] (8.75ns)   --->   "%OUTPUT_addr_30_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:46]   --->   Operation 1522 'writeresp' 'OUTPUT_addr_30_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_128 : Operation 1523 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %OUTPUT_addr_31, float %mC_load_15, i4 -1)" [src/BMM_fonctions.c:46]   --->   Operation 1523 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 129 <SV = 24> <Delay = 8.75>
ST_129 : Operation 1524 [1/5] (8.75ns)   --->   "%OUTPUT_addr_27_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_27)" [src/BMM_fonctions.c:46]   --->   Operation 1524 'writeresp' 'OUTPUT_addr_27_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_129 : Operation 1525 [2/5] (8.75ns)   --->   "%OUTPUT_addr_28_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:46]   --->   Operation 1525 'writeresp' 'OUTPUT_addr_28_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_129 : Operation 1526 [3/5] (8.75ns)   --->   "%OUTPUT_addr_29_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:46]   --->   Operation 1526 'writeresp' 'OUTPUT_addr_29_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_129 : Operation 1527 [4/5] (8.75ns)   --->   "%OUTPUT_addr_30_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:46]   --->   Operation 1527 'writeresp' 'OUTPUT_addr_30_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_129 : Operation 1528 [5/5] (8.75ns)   --->   "%OUTPUT_addr_31_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:46]   --->   Operation 1528 'writeresp' 'OUTPUT_addr_31_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 130 <SV = 25> <Delay = 8.75>
ST_130 : Operation 1529 [1/5] (8.75ns)   --->   "%OUTPUT_addr_28_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_28)" [src/BMM_fonctions.c:46]   --->   Operation 1529 'writeresp' 'OUTPUT_addr_28_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_130 : Operation 1530 [2/5] (8.75ns)   --->   "%OUTPUT_addr_29_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:46]   --->   Operation 1530 'writeresp' 'OUTPUT_addr_29_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_130 : Operation 1531 [3/5] (8.75ns)   --->   "%OUTPUT_addr_30_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:46]   --->   Operation 1531 'writeresp' 'OUTPUT_addr_30_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_130 : Operation 1532 [4/5] (8.75ns)   --->   "%OUTPUT_addr_31_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:46]   --->   Operation 1532 'writeresp' 'OUTPUT_addr_31_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 131 <SV = 26> <Delay = 8.75>
ST_131 : Operation 1533 [1/5] (8.75ns)   --->   "%OUTPUT_addr_29_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_29)" [src/BMM_fonctions.c:46]   --->   Operation 1533 'writeresp' 'OUTPUT_addr_29_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_131 : Operation 1534 [2/5] (8.75ns)   --->   "%OUTPUT_addr_30_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:46]   --->   Operation 1534 'writeresp' 'OUTPUT_addr_30_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_131 : Operation 1535 [3/5] (8.75ns)   --->   "%OUTPUT_addr_31_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:46]   --->   Operation 1535 'writeresp' 'OUTPUT_addr_31_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 132 <SV = 27> <Delay = 8.75>
ST_132 : Operation 1536 [1/5] (8.75ns)   --->   "%OUTPUT_addr_30_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_30)" [src/BMM_fonctions.c:46]   --->   Operation 1536 'writeresp' 'OUTPUT_addr_30_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_132 : Operation 1537 [2/5] (8.75ns)   --->   "%OUTPUT_addr_31_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:46]   --->   Operation 1537 'writeresp' 'OUTPUT_addr_31_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 133 <SV = 28> <Delay = 8.75>
ST_133 : Operation 1538 [1/5] (8.75ns)   --->   "%OUTPUT_addr_31_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %OUTPUT_addr_31)" [src/BMM_fonctions.c:46]   --->   Operation 1538 'writeresp' 'OUTPUT_addr_31_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_133 : Operation 1539 [1/1] (0.00ns)   --->   "br label %.preheader" [src/BMM_fonctions.c:45]   --->   Operation 1539 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:20) [32]  (1.77 ns)

 <State 2>: 2.49ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:20) [32]  (0 ns)
	'add' operation ('add_ln21', src/BMM_fonctions.c:21) [42]  (2.49 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('INPUT_addr', src/BMM_fonctions.c:21) [44]  (0 ns)
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:21) [121]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [122]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [125]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [128]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [131]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [134]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [137]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [140]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [143]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [146]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [149]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [152]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [155]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [158]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [161]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [164]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:21) [167]  (8.75 ns)

 <State 26>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mA_addr_15', src/BMM_fonctions.c:21) [120]  (0 ns)
	'store' operation ('store_ln21', src/BMM_fonctions.c:21) of variable 'INPUT_addr_15_read', src/BMM_fonctions.c:21 on array 'mA', src/BMM_fonctions.c:17 [168]  (3.25 ns)

 <State 27>: 2.49ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:22) [173]  (0 ns)
	'add' operation ('add_ln23', src/BMM_fonctions.c:23) [183]  (2.49 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('INPUT_addr_16', src/BMM_fonctions.c:23) [185]  (0 ns)
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus request on port 'INPUT_r' (src/BMM_fonctions.c:23) [262]  (8.75 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [263]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [266]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [269]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [272]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [275]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [278]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [281]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [284]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [287]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [290]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [293]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [296]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [299]  (8.75 ns)

 <State 48>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [302]  (8.75 ns)

 <State 49>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [305]  (8.75 ns)

 <State 50>: 8.75ns
The critical path consists of the following:
	bus read on port 'INPUT_r' (src/BMM_fonctions.c:23) [308]  (8.75 ns)

 <State 51>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mB_addr_15', src/BMM_fonctions.c:23) [261]  (0 ns)
	'store' operation ('store_ln23', src/BMM_fonctions.c:23) of variable 'INPUT_addr_31_read', src/BMM_fonctions.c:23 on array 'mB', src/BMM_fonctions.c:18 [309]  (3.25 ns)

 <State 52>: 2.49ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:24) [314]  (0 ns)
	'add' operation ('add_ln25', src/BMM_fonctions.c:25) [324]  (2.49 ns)

 <State 53>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUTPUT_addr', src/BMM_fonctions.c:25) [326]  (0 ns)
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 54>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 55>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 56>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 57>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 58>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 59>: 8.75ns
The critical path consists of the following:
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [403]  (8.75 ns)

 <State 60>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [404]  (8.75 ns)

 <State 61>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [407]  (8.75 ns)

 <State 62>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [410]  (8.75 ns)

 <State 63>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [413]  (8.75 ns)

 <State 64>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [416]  (8.75 ns)

 <State 65>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [419]  (8.75 ns)

 <State 66>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [422]  (8.75 ns)

 <State 67>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [425]  (8.75 ns)

 <State 68>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [428]  (8.75 ns)

 <State 69>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [431]  (8.75 ns)

 <State 70>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [434]  (8.75 ns)

 <State 71>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [437]  (8.75 ns)

 <State 72>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [440]  (8.75 ns)

 <State 73>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [443]  (8.75 ns)

 <State 74>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [446]  (8.75 ns)

 <State 75>: 8.75ns
The critical path consists of the following:
	bus read on port 'OUTPUT_r' (src/BMM_fonctions.c:25) [449]  (8.75 ns)

 <State 76>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('mC_addr_15', src/BMM_fonctions.c:25) [402]  (0 ns)
	'store' operation ('store_ln25', src/BMM_fonctions.c:25) of variable 'OUTPUT_addr_15_read', src/BMM_fonctions.c:25 on array 'mC', src/BMM_fonctions.c:19 [450]  (3.25 ns)

 <State 77>: 5.7ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten107', src/BMM_fonctions.c:31) with incoming values : ('select_ln31_44', src/BMM_fonctions.c:31) [457]  (0 ns)
	'icmp' operation ('icmp_ln31', src/BMM_fonctions.c:31) [503]  (1.55 ns)
	'xor' operation ('xor_ln31', src/BMM_fonctions.c:31) [534]  (0.978 ns)
	'and' operation ('and_ln31_1', src/BMM_fonctions.c:31) [538]  (0.978 ns)
	'or' operation ('or_ln31', src/BMM_fonctions.c:31) [542]  (0.978 ns)
	'select' operation ('select_ln31_20', src/BMM_fonctions.c:31) [543]  (1.22 ns)

 <State 78>: 8.07ns
The critical path consists of the following:
	'select' operation ('select_ln30', src/BMM_fonctions.c:30) [539]  (1.22 ns)
	'add' operation ('add_ln38', src/BMM_fonctions.c:38) [687]  (1.78 ns)
	'add' operation ('add_ln38_11', src/BMM_fonctions.c:38) [690]  (1.82 ns)
	'getelementptr' operation ('mA_addr_16', src/BMM_fonctions.c:38) [692]  (0 ns)
	'load' operation ('mA_load', src/BMM_fonctions.c:38) on array 'mA', src/BMM_fonctions.c:17 [714]  (3.25 ns)

 <State 79>: 5.76ns
The critical path consists of the following:
	'select' operation ('select_ln31_2', src/BMM_fonctions.c:31) [506]  (0 ns)
	'select' operation ('select_ln31_23', src/BMM_fonctions.c:31) [556]  (1.02 ns)
	'select' operation ('select_ln32_10', src/BMM_fonctions.c:32) [659]  (1.48 ns)
	'getelementptr' operation ('mB_addr_24', src/BMM_fonctions.c:38) [660]  (0 ns)
	'load' operation ('mB_load_8', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [661]  (3.25 ns)

 <State 80>: 6.14ns
The critical path consists of the following:
	'add' operation ('add_ln38_8', src/BMM_fonctions.c:38) [617]  (1.92 ns)
	'select' operation ('select_ln32_3', src/BMM_fonctions.c:32) [621]  (0.968 ns)
	'getelementptr' operation ('mB_addr_17', src/BMM_fonctions.c:38) [623]  (0 ns)
	'load' operation ('mB_load_1', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [624]  (3.25 ns)

 <State 81>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', src/BMM_fonctions.c:38) [715]  (5.7 ns)

 <State 82>: 6.65ns
The critical path consists of the following:
	'add' operation ('add_ln38_9', src/BMM_fonctions.c:38) [628]  (1.92 ns)
	'select' operation ('select_ln32_4', src/BMM_fonctions.c:32) [633]  (1.48 ns)
	'getelementptr' operation ('mB_addr_18', src/BMM_fonctions.c:38) [634]  (0 ns)
	'load' operation ('mB_load_2', src/BMM_fonctions.c:32) on array 'mB', src/BMM_fonctions.c:18 [635]  (3.25 ns)

 <State 83>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp1', src/BMM_fonctions.c:38) [715]  (5.7 ns)

 <State 84>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_6', src/BMM_fonctions.c:38) [717]  (7.26 ns)

 <State 85>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_6', src/BMM_fonctions.c:38) [717]  (7.26 ns)

 <State 86>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_6', src/BMM_fonctions.c:38) [717]  (7.26 ns)

 <State 87>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_6', src/BMM_fonctions.c:38) [717]  (7.26 ns)

 <State 88>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_6', src/BMM_fonctions.c:38) [717]  (7.26 ns)

 <State 89>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:38) [720]  (7.26 ns)

 <State 90>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:38) [720]  (7.26 ns)

 <State 91>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:38) [720]  (7.26 ns)

 <State 92>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:38) [720]  (7.26 ns)

 <State 93>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_1', src/BMM_fonctions.c:38) [720]  (7.26 ns)

 <State 94>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:38) [723]  (7.26 ns)

 <State 95>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:38) [723]  (7.26 ns)

 <State 96>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:38) [723]  (7.26 ns)

 <State 97>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:38) [723]  (7.26 ns)

 <State 98>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_2', src/BMM_fonctions.c:38) [723]  (7.26 ns)

 <State 99>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:38) [726]  (7.26 ns)

 <State 100>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:38) [726]  (7.26 ns)

 <State 101>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:38) [726]  (7.26 ns)

 <State 102>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:38) [726]  (7.26 ns)

 <State 103>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_0_3', src/BMM_fonctions.c:38) [726]  (7.26 ns)

 <State 104>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:38) [746]  (7.26 ns)

 <State 105>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:38) [746]  (7.26 ns)

 <State 106>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:38) [746]  (7.26 ns)

 <State 107>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:38) [746]  (7.26 ns)

 <State 108>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_2_3', src/BMM_fonctions.c:38) [746]  (7.26 ns)

 <State 109>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln38', src/BMM_fonctions.c:38) of variable 'tmp_1_2_3', src/BMM_fonctions.c:38 on array 'mC', src/BMM_fonctions.c:19 [747]  (3.25 ns)

 <State 110>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:45) [768]  (1.77 ns)

 <State 111>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/BMM_fonctions.c:45) [768]  (0 ns)
	'getelementptr' operation ('mC_addr_16', src/BMM_fonctions.c:46) [840]  (0 ns)
	'load' operation ('mC_load', src/BMM_fonctions.c:46) on array 'mC', src/BMM_fonctions.c:19 [856]  (3.25 ns)

 <State 112>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('OUTPUT_addr_16', src/BMM_fonctions.c:46) [779]  (0 ns)
	bus request on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [857]  (8.75 ns)

 <State 113>: 8.75ns
The critical path consists of the following:
	bus write on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [858]  (8.75 ns)

 <State 114>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [859]  (8.75 ns)

 <State 115>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [859]  (8.75 ns)

 <State 116>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [859]  (8.75 ns)

 <State 117>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [859]  (8.75 ns)

 <State 118>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [859]  (8.75 ns)

 <State 119>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [863]  (8.75 ns)

 <State 120>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [867]  (8.75 ns)

 <State 121>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [871]  (8.75 ns)

 <State 122>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [875]  (8.75 ns)

 <State 123>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [879]  (8.75 ns)

 <State 124>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [883]  (8.75 ns)

 <State 125>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [887]  (8.75 ns)

 <State 126>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [891]  (8.75 ns)

 <State 127>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [895]  (8.75 ns)

 <State 128>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [899]  (8.75 ns)

 <State 129>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [903]  (8.75 ns)

 <State 130>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [907]  (8.75 ns)

 <State 131>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [911]  (8.75 ns)

 <State 132>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [915]  (8.75 ns)

 <State 133>: 8.75ns
The critical path consists of the following:
	bus access on port 'OUTPUT_r' (src/BMM_fonctions.c:46) [919]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
