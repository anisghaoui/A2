-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity moy is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    somme : IN STD_LOGIC_VECTOR (31 downto 0);
    taille : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of moy is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal somme_read_reg_63 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_read_reg_63_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_read_reg_63_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_read_reg_63_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_read_reg_63_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_read_reg_63_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln94_fu_52_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln94_reg_68_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_48_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_phi_fu_36_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_43_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_p_0_reg_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal somme_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal taille_int_reg : STD_LOGIC_VECTOR (31 downto 0);

    component Kmeans_fdiv_32ns_32ns_32_16_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Kmeans_sitofp_32ns_32_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Kmeans_fdiv_32ns_32ns_32_16_1_U15 : component Kmeans_fdiv_32ns_32ns_32_16_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => somme_read_reg_63_pp0_iter5_reg,
        din1 => tmp_reg_72,
        ce => ap_const_logic_1,
        dout => grp_fu_43_p2);

    Kmeans_sitofp_32ns_32_6_1_U16 : component Kmeans_sitofp_32ns_32_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => taille_int_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_48_p1);





    ap_phi_reg_pp0_iter1_p_0_reg_32_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if ((icmp_ln94_fu_52_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_0_reg_32 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0_reg_32 <= ap_phi_reg_pp0_iter0_p_0_reg_32;
                end if;
            end if; 
        end if;
    end process;

    somme_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            somme_int_reg <= somme;
        end if;
    end process;

    taille_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            taille_int_reg <= taille;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_phi_reg_pp0_iter10_p_0_reg_32 <= ap_phi_reg_pp0_iter9_p_0_reg_32;
                ap_phi_reg_pp0_iter11_p_0_reg_32 <= ap_phi_reg_pp0_iter10_p_0_reg_32;
                ap_phi_reg_pp0_iter12_p_0_reg_32 <= ap_phi_reg_pp0_iter11_p_0_reg_32;
                ap_phi_reg_pp0_iter13_p_0_reg_32 <= ap_phi_reg_pp0_iter12_p_0_reg_32;
                ap_phi_reg_pp0_iter14_p_0_reg_32 <= ap_phi_reg_pp0_iter13_p_0_reg_32;
                ap_phi_reg_pp0_iter15_p_0_reg_32 <= ap_phi_reg_pp0_iter14_p_0_reg_32;
                ap_phi_reg_pp0_iter16_p_0_reg_32 <= ap_phi_reg_pp0_iter15_p_0_reg_32;
                ap_phi_reg_pp0_iter17_p_0_reg_32 <= ap_phi_reg_pp0_iter16_p_0_reg_32;
                ap_phi_reg_pp0_iter18_p_0_reg_32 <= ap_phi_reg_pp0_iter17_p_0_reg_32;
                ap_phi_reg_pp0_iter19_p_0_reg_32 <= ap_phi_reg_pp0_iter18_p_0_reg_32;
                ap_phi_reg_pp0_iter20_p_0_reg_32 <= ap_phi_reg_pp0_iter19_p_0_reg_32;
                ap_phi_reg_pp0_iter21_p_0_reg_32 <= ap_phi_reg_pp0_iter20_p_0_reg_32;
                ap_phi_reg_pp0_iter2_p_0_reg_32 <= ap_phi_reg_pp0_iter1_p_0_reg_32;
                ap_phi_reg_pp0_iter3_p_0_reg_32 <= ap_phi_reg_pp0_iter2_p_0_reg_32;
                ap_phi_reg_pp0_iter4_p_0_reg_32 <= ap_phi_reg_pp0_iter3_p_0_reg_32;
                ap_phi_reg_pp0_iter5_p_0_reg_32 <= ap_phi_reg_pp0_iter4_p_0_reg_32;
                ap_phi_reg_pp0_iter6_p_0_reg_32 <= ap_phi_reg_pp0_iter5_p_0_reg_32;
                ap_phi_reg_pp0_iter7_p_0_reg_32 <= ap_phi_reg_pp0_iter6_p_0_reg_32;
                ap_phi_reg_pp0_iter8_p_0_reg_32 <= ap_phi_reg_pp0_iter7_p_0_reg_32;
                ap_phi_reg_pp0_iter9_p_0_reg_32 <= ap_phi_reg_pp0_iter8_p_0_reg_32;
                icmp_ln94_reg_68 <= icmp_ln94_fu_52_p2;
                icmp_ln94_reg_68_pp0_iter10_reg <= icmp_ln94_reg_68_pp0_iter9_reg;
                icmp_ln94_reg_68_pp0_iter11_reg <= icmp_ln94_reg_68_pp0_iter10_reg;
                icmp_ln94_reg_68_pp0_iter12_reg <= icmp_ln94_reg_68_pp0_iter11_reg;
                icmp_ln94_reg_68_pp0_iter13_reg <= icmp_ln94_reg_68_pp0_iter12_reg;
                icmp_ln94_reg_68_pp0_iter14_reg <= icmp_ln94_reg_68_pp0_iter13_reg;
                icmp_ln94_reg_68_pp0_iter15_reg <= icmp_ln94_reg_68_pp0_iter14_reg;
                icmp_ln94_reg_68_pp0_iter16_reg <= icmp_ln94_reg_68_pp0_iter15_reg;
                icmp_ln94_reg_68_pp0_iter17_reg <= icmp_ln94_reg_68_pp0_iter16_reg;
                icmp_ln94_reg_68_pp0_iter18_reg <= icmp_ln94_reg_68_pp0_iter17_reg;
                icmp_ln94_reg_68_pp0_iter19_reg <= icmp_ln94_reg_68_pp0_iter18_reg;
                icmp_ln94_reg_68_pp0_iter1_reg <= icmp_ln94_reg_68;
                icmp_ln94_reg_68_pp0_iter20_reg <= icmp_ln94_reg_68_pp0_iter19_reg;
                icmp_ln94_reg_68_pp0_iter2_reg <= icmp_ln94_reg_68_pp0_iter1_reg;
                icmp_ln94_reg_68_pp0_iter3_reg <= icmp_ln94_reg_68_pp0_iter2_reg;
                icmp_ln94_reg_68_pp0_iter4_reg <= icmp_ln94_reg_68_pp0_iter3_reg;
                icmp_ln94_reg_68_pp0_iter5_reg <= icmp_ln94_reg_68_pp0_iter4_reg;
                icmp_ln94_reg_68_pp0_iter6_reg <= icmp_ln94_reg_68_pp0_iter5_reg;
                icmp_ln94_reg_68_pp0_iter7_reg <= icmp_ln94_reg_68_pp0_iter6_reg;
                icmp_ln94_reg_68_pp0_iter8_reg <= icmp_ln94_reg_68_pp0_iter7_reg;
                icmp_ln94_reg_68_pp0_iter9_reg <= icmp_ln94_reg_68_pp0_iter8_reg;
                somme_read_reg_63 <= somme_int_reg;
                somme_read_reg_63_pp0_iter1_reg <= somme_read_reg_63;
                somme_read_reg_63_pp0_iter2_reg <= somme_read_reg_63_pp0_iter1_reg;
                somme_read_reg_63_pp0_iter3_reg <= somme_read_reg_63_pp0_iter2_reg;
                somme_read_reg_63_pp0_iter4_reg <= somme_read_reg_63_pp0_iter3_reg;
                somme_read_reg_63_pp0_iter5_reg <= somme_read_reg_63_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln94_reg_68_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_72 <= grp_fu_48_p1;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_phi_mux_p_0_phi_fu_36_p4_assign_proc : process(icmp_ln94_reg_68_pp0_iter20_reg, grp_fu_43_p2, ap_phi_reg_pp0_iter21_p_0_reg_32, ap_block_pp0_stage0)
    begin
        if (((icmp_ln94_reg_68_pp0_iter20_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_0_phi_fu_36_p4 <= grp_fu_43_p2;
        else 
            ap_phi_mux_p_0_phi_fu_36_p4 <= ap_phi_reg_pp0_iter21_p_0_reg_32;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_0_reg_32 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_return <= ap_phi_mux_p_0_phi_fu_36_p4;
    icmp_ln94_fu_52_p2 <= "1" when (taille_int_reg = ap_const_lv32_0) else "0";
end behav;
